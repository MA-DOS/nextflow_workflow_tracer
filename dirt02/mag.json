{
    "name": "mag",
    "description": "Trace generated from Nextflow (via https://github.com/wfcommons/nextflow_workflow_tracer)",
    "createdAt": "2023-03-22T06:50:25.919057+00:00",
    "schemaVersion": "1.4",
    "wms": {
        "name": "Nextflow",
        "url": "https://www.nextflow.io/"
    },
    "workflow": {
        "repo": "https://github.com/nf-core/mag",
        "runName": "wise_torvalds",
        "executedAt": "2023-03-21T20:50:18-10:00",
        "tasks": [
            {
                "name": "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_BUILD",
                "id": "1",
                "type": "compute",
                "command": "mkdir bowtie\n    bowtie2-build --threads 1 GCA_002596845.1_ASM259684v1_genomic.fna.gz \"bt2_index_base\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BOWTIE2_PHIX_REMOVAL_BUILD\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n    END_VERSIONS",
                "parents": [],
                "children": [
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "GCA_002596845.1_ASM259684v1_genomic.fna.gz",
                        "path": "/assets/data/",
                        "sizeInBytes": 1.888
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.1.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 4196.364
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.2.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 1.352
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.3.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 0.017
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.4.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 1.347
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.rev.1.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 4196.364
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.rev.2.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 1.352
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 0.064
                    }
                ],
                "avgCPU": 43.3,
                "bytesRead": 1425.055,
                "bytesWritten": 8406.73,
                "inputFilesBytes": 1.888,
                "outputFilesBytes": 8396.86,
                "memory": 2723.84,
                "runtimeInSeconds": 1.0,
                "readBytes": 1425055.0,
                "writtenBytes": 8406730.0,
                "memoryInBytes": 2723840.0
            },
            {
                "name": "NFCORE_MAG.MAG.KRAKEN2_DB_PREPARATION",
                "id": "3",
                "type": "compute",
                "command": "mkdir db_tmp\n    tar -xf \"minigut_kraken.tgz\" -C db_tmp\n    mkdir database\n    mv `find db_tmp/ -name \"*.k2d\"` database/\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:KRAKEN2_DB_PREPARATION\":\n        tar: $(tar --version 2>&1 | sed -n 1p | sed 's/tar (GNU tar) //')\n    END_VERSIONS",
                "parents": [],
                "children": [
                    "NFCORE_MAG.MAG.KRAKEN2"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "minigut_kraken.tgz",
                        "path": "/nf-core/test-datasets/mag/test_data/",
                        "sizeInBytes": 3.547
                    },
                    {
                        "link": "output",
                        "name": "hash.k2d",
                        "path": "/644e6092e3c12d271e3aba5effa524/database/",
                        "sizeInBytes": 3151.024
                    },
                    {
                        "link": "output",
                        "name": "opts.k2d",
                        "path": "/644e6092e3c12d271e3aba5effa524/database/",
                        "sizeInBytes": 0.056
                    },
                    {
                        "link": "output",
                        "name": "taxo.k2d",
                        "path": "/644e6092e3c12d271e3aba5effa524/database/",
                        "sizeInBytes": 0.469
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/a6/644e6092e3c12d271e3aba5effa524/",
                        "sizeInBytes": 0.055
                    }
                ],
                "avgCPU": 25.5,
                "bytesRead": 3321.149,
                "bytesWritten": 6316.473,
                "inputFilesBytes": 3.547,
                "outputFilesBytes": 3151.604,
                "memory": 3018.752,
                "runtimeInSeconds": 0.163,
                "readBytes": 3321149.0,
                "writtenBytes": 6316473.0,
                "memoryInBytes": 3018752.0
            },
            {
                "name": "NFCORE_MAG.MAG.CENTRIFUGE_DB_PREPARATION",
                "id": "4",
                "type": "compute",
                "command": "tar -xf \"minigut_cf.tar.gz\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:CENTRIFUGE_DB_PREPARATION\":\n        tar: $(tar --version 2>&1 | sed -n 1p | sed 's/tar (GNU tar) //')\n    END_VERSIONS",
                "parents": [],
                "children": [
                    "NFCORE_MAG.MAG.CENTRIFUGE"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "minigut_cf.tar.gz",
                        "path": "/nf-core/test-datasets/mag/test_data/",
                        "sizeInBytes": 1771.931
                    },
                    {
                        "link": "output",
                        "name": "minigut_cf.1.cf",
                        "path": "/29/d9bbf244f81d328b039396cf2f6556/",
                        "sizeInBytes": 8972.492
                    },
                    {
                        "link": "output",
                        "name": "minigut_cf.2.cf",
                        "path": "/29/d9bbf244f81d328b039396cf2f6556/",
                        "sizeInBytes": 218.756
                    },
                    {
                        "link": "output",
                        "name": "minigut_cf.3.cf",
                        "path": "/29/d9bbf244f81d328b039396cf2f6556/",
                        "sizeInBytes": 0.076
                    },
                    {
                        "link": "output",
                        "name": "minigut_cf.4.cf",
                        "path": "/29/d9bbf244f81d328b039396cf2f6556/",
                        "sizeInBytes": 0.036
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/29/d9bbf244f81d328b039396cf2f6556/",
                        "sizeInBytes": 0.058
                    }
                ],
                "avgCPU": 55.9,
                "bytesRead": 11101.848,
                "bytesWritten": 18397.78,
                "inputFilesBytes": 1771.931,
                "outputFilesBytes": 9191.418,
                "memory": 6938.624,
                "runtimeInSeconds": 0.309,
                "readBytes": 11101848.0,
                "writtenBytes": 18397780.0,
                "memoryInBytes": 6938624.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION",
                "id": "2",
                "type": "compute",
                "command": "mkdir buscodb\n    tar -xf bacteria_odb10.2020-03-06.tar.gz -C buscodb\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO_DB_PREPARATION\":\n        tar: $(tar --version 2>&1 | sed -n 1p | sed 's/tar (GNU tar) //')\n    END_VERSIONS",
                "parents": [],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "bacteria_odb10.2020-03-06.tar.gz",
                        "path": "/v5/data/lineages/",
                        "sizeInBytes": 6084.321
                    },
                    {
                        "link": "output",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901.713
                    },
                    {
                        "link": "output",
                        "name": "bacteria_odb10.2020-03-06.tar.gz",
                        "path": "/67/3b8667566a46b50251687dc3dbcaeb/",
                        "sizeInBytes": 6084.321
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/67/3b8667566a46b50251687dc3dbcaeb/",
                        "sizeInBytes": 0.062
                    }
                ],
                "avgCPU": 77.2,
                "bytesRead": 33230.022,
                "bytesWritten": 53915.501,
                "inputFilesBytes": 6084.321,
                "outputFilesBytes": 32986.096,
                "memory": 6909.952,
                "runtimeInSeconds": 0.596,
                "readBytes": 33230021.999999996,
                "writtenBytes": 53915501.0,
                "memoryInBytes": 6909952.0
            },
            {
                "name": "NFCORE_MAG.MAG.FASTP",
                "id": "7",
                "type": "compute",
                "command": "[ ! -f  test_minigut_sample2_1.fastq.gz ] && ln -s test_minigut_sample2_R1.fastq.gz test_minigut_sample2_1.fastq.gz\n        [ ! -f  test_minigut_sample2_2.fastq.gz ] && ln -s test_minigut_sample2_R2.fastq.gz test_minigut_sample2_2.fastq.gz\n        fastp \\\n            --in1 test_minigut_sample2_1.fastq.gz \\\n            --in2 test_minigut_sample2_2.fastq.gz \\\n            --out1 test_minigut_sample2_1.trim.fastq.gz \\\n            --out2 test_minigut_sample2_2.trim.fastq.gz \\\n            --json test_minigut_sample2.fastp.json \\\n            --html test_minigut_sample2.fastp.html \\\n             \\\n             \\\n            --thread 1 \\\n            --detect_adapter_for_pe \\\n            -q 15 --cut_front --cut_tail --cut_mean_quality 15 --length_required 15 \\\n            2> test_minigut_sample2.fastp.log\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:FASTP\":\n            fastp: $(fastp --version 2>&1 | sed -e \"s/fastp //g\")\n        END_VERSIONS",
                "parents": [],
                "children": [
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut_sample2_R1.fastq.gz",
                        "path": "/nf-core/test-datasets/raw/mag/test_data/",
                        "sizeInBytes": 1599.43
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2_R2.fastq.gz",
                        "path": "/nf-core/test-datasets/raw/mag/test_data/",
                        "sizeInBytes": 1806.457
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2_1.trim.fastq.gz",
                        "path": "/e1/9a7accee5f5f4db3f7c9248cada164/",
                        "sizeInBytes": 1659.506
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2_2.trim.fastq.gz",
                        "path": "/e1/9a7accee5f5f4db3f7c9248cada164/",
                        "sizeInBytes": 1857.297
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.fastp.json",
                        "path": "/e1/9a7accee5f5f4db3f7c9248cada164/",
                        "sizeInBytes": 124.522
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.fastp.html",
                        "path": "/e1/9a7accee5f5f4db3f7c9248cada164/",
                        "sizeInBytes": 475.979
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.fastp.log",
                        "path": "/e1/9a7accee5f5f4db3f7c9248cada164/",
                        "sizeInBytes": 1.405
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/e1/9a7accee5f5f4db3f7c9248cada164/",
                        "sizeInBytes": 0.042
                    }
                ],
                "avgCPU": 88.7,
                "bytesRead": 11897.551,
                "bytesWritten": 4119.03,
                "inputFilesBytes": 3405.887,
                "outputFilesBytes": 4118.751,
                "memory": 1169448.96,
                "runtimeInSeconds": 6.0,
                "readBytes": 11897551.0,
                "writtenBytes": 4119029.9999999995,
                "memoryInBytes": 1169448960.0
            },
            {
                "name": "NFCORE_MAG.MAG.FASTQC_RAW",
                "id": "8",
                "type": "compute",
                "command": "[ ! -f  test_minigut_sample2_1.fastq.gz ] && ln -s test_minigut_sample2_R1.fastq.gz test_minigut_sample2_1.fastq.gz\n        [ ! -f  test_minigut_sample2_2.fastq.gz ] && ln -s test_minigut_sample2_R2.fastq.gz test_minigut_sample2_2.fastq.gz\n        fastqc --quiet --threads 1 test_minigut_sample2_1.fastq.gz test_minigut_sample2_2.fastq.gz\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:FASTQC_RAW\":\n            fastqc: $( fastqc --version | sed -e \"s/FastQC v//g\" )\n        END_VERSIONS",
                "parents": [],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut_sample2_R1.fastq.gz",
                        "path": "/nf-core/test-datasets/raw/mag/test_data/",
                        "sizeInBytes": 1599.43
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2_R2.fastq.gz",
                        "path": "/nf-core/test-datasets/raw/mag/test_data/",
                        "sizeInBytes": 1806.457
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2_1_fastqc.html",
                        "path": "/6f/2f1ecb5353f866c1f6539117e859bd/",
                        "sizeInBytes": 518.269
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2_2_fastqc.html",
                        "path": "/6f/2f1ecb5353f866c1f6539117e859bd/",
                        "sizeInBytes": 522.233
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2_1_fastqc.zip",
                        "path": "/6f/2f1ecb5353f866c1f6539117e859bd/",
                        "sizeInBytes": 290.235
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2_2_fastqc.zip",
                        "path": "/6f/2f1ecb5353f866c1f6539117e859bd/",
                        "sizeInBytes": 288.657
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/6f/2f1ecb5353f866c1f6539117e859bd/",
                        "sizeInBytes": 0.048
                    }
                ],
                "avgCPU": 90.2,
                "bytesRead": 24927.385,
                "bytesWritten": 3173.505,
                "inputFilesBytes": 3405.887,
                "outputFilesBytes": 1619.442,
                "memory": 216264.704,
                "runtimeInSeconds": 22.0,
                "readBytes": 24927385.0,
                "writtenBytes": 3173505.0,
                "memoryInBytes": 216264704.0
            },
            {
                "name": "NFCORE_MAG.MAG.FASTQC_RAW",
                "id": "5",
                "type": "compute",
                "command": "[ ! -f  test_minigut_1.fastq.gz ] && ln -s test_minigut_R1.fastq.gz test_minigut_1.fastq.gz\n        [ ! -f  test_minigut_2.fastq.gz ] && ln -s test_minigut_R2.fastq.gz test_minigut_2.fastq.gz\n        fastqc --quiet --threads 1 test_minigut_1.fastq.gz test_minigut_2.fastq.gz\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:FASTQC_RAW\":\n            fastqc: $( fastqc --version | sed -e \"s/FastQC v//g\" )\n        END_VERSIONS",
                "parents": [],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut_R1.fastq.gz",
                        "path": "/nf-core/test-datasets/raw/mag/test_data/",
                        "sizeInBytes": 3323.528
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_R2.fastq.gz",
                        "path": "/nf-core/test-datasets/raw/mag/test_data/",
                        "sizeInBytes": 3398.619
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_1_fastqc.html",
                        "path": "/50/450582b8fedacb9adbb8d3bd395bc7/",
                        "sizeInBytes": 617.474
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_2_fastqc.html",
                        "path": "/50/450582b8fedacb9adbb8d3bd395bc7/",
                        "sizeInBytes": 611.062
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_1_fastqc.zip",
                        "path": "/50/450582b8fedacb9adbb8d3bd395bc7/",
                        "sizeInBytes": 288.243
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_2_fastqc.zip",
                        "path": "/50/450582b8fedacb9adbb8d3bd395bc7/",
                        "sizeInBytes": 284.771
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/50/450582b8fedacb9adbb8d3bd395bc7/",
                        "sizeInBytes": 0.048
                    }
                ],
                "avgCPU": 93.7,
                "bytesRead": 28526.247,
                "bytesWritten": 3633.598,
                "inputFilesBytes": 6722.147,
                "outputFilesBytes": 1801.598,
                "memory": 288858.112,
                "runtimeInSeconds": 20.0,
                "readBytes": 28526247.0,
                "writtenBytes": 3633598.0,
                "memoryInBytes": 288858112.0
            },
            {
                "name": "NFCORE_MAG.MAG.FASTP",
                "id": "6",
                "type": "compute",
                "command": "[ ! -f  test_minigut_1.fastq.gz ] && ln -s test_minigut_R1.fastq.gz test_minigut_1.fastq.gz\n        [ ! -f  test_minigut_2.fastq.gz ] && ln -s test_minigut_R2.fastq.gz test_minigut_2.fastq.gz\n        fastp \\\n            --in1 test_minigut_1.fastq.gz \\\n            --in2 test_minigut_2.fastq.gz \\\n            --out1 test_minigut_1.trim.fastq.gz \\\n            --out2 test_minigut_2.trim.fastq.gz \\\n            --json test_minigut.fastp.json \\\n            --html test_minigut.fastp.html \\\n             \\\n             \\\n            --thread 1 \\\n            --detect_adapter_for_pe \\\n            -q 15 --cut_front --cut_tail --cut_mean_quality 15 --length_required 15 \\\n            2> test_minigut.fastp.log\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:FASTP\":\n            fastp: $(fastp --version 2>&1 | sed -e \"s/fastp //g\")\n        END_VERSIONS",
                "parents": [],
                "children": [
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut_R1.fastq.gz",
                        "path": "/nf-core/test-datasets/raw/mag/test_data/",
                        "sizeInBytes": 3323.528
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_R2.fastq.gz",
                        "path": "/nf-core/test-datasets/raw/mag/test_data/",
                        "sizeInBytes": 3398.619
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_1.trim.fastq.gz",
                        "path": "/ef/a6a4e285761f2a6fdc82cd62443b5b/",
                        "sizeInBytes": 3406.561
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_2.trim.fastq.gz",
                        "path": "/ef/a6a4e285761f2a6fdc82cd62443b5b/",
                        "sizeInBytes": 3469.254
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.fastp.json",
                        "path": "/ef/a6a4e285761f2a6fdc82cd62443b5b/",
                        "sizeInBytes": 112.556
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.fastp.html",
                        "path": "/ef/a6a4e285761f2a6fdc82cd62443b5b/",
                        "sizeInBytes": 457.904
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.fastp.log",
                        "path": "/ef/a6a4e285761f2a6fdc82cd62443b5b/",
                        "sizeInBytes": 1.347
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/ef/a6a4e285761f2a6fdc82cd62443b5b/",
                        "sizeInBytes": 0.042
                    }
                ],
                "avgCPU": 90.8,
                "bytesRead": 23570.167,
                "bytesWritten": 7447.928,
                "inputFilesBytes": 6722.147,
                "outputFilesBytes": 7447.664,
                "memory": 1216315.392,
                "runtimeInSeconds": 9.0,
                "readBytes": 23570167.0,
                "writtenBytes": 7447928.0,
                "memoryInBytes": 1216315392.0
            },
            {
                "name": "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN",
                "id": "9",
                "type": "compute",
                "command": "bowtie2 -p 1                 -x bt2_index_base                 -1 \"test_minigut_sample2_1.trim.fastq.gz\" -2 \"test_minigut_sample2_2.trim.fastq.gz\"                                  --un-conc-gz test_minigut_sample2.phix_removed.unmapped_%.fastq.gz                 --al-conc-gz test_minigut_sample2.phix_removed.mapped_%.fastq.gz                 1> /dev/null                 2> test_minigut_sample2.phix_removed.bowtie2.log\n        if [ N = \"Y\" ] ; then\n            gunzip -c test_minigut_sample2.phix_removed.mapped_1.fastq.gz | awk '{if(NR%4==1) print substr($0, 2)}' | LC_ALL=C sort > test_minigut_sample2.phix_removed.mapped_1.read_ids.txt\n            gunzip -c test_minigut_sample2.phix_removed.mapped_2.fastq.gz | awk '{if(NR%4==1) print substr($0, 2)}' | LC_ALL=C sort > test_minigut_sample2.phix_removed.mapped_2.read_ids.txt\n        fi\n        rm -f test_minigut_sample2.phix_removed.mapped_*.fastq.gz\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:BOWTIE2_PHIX_REMOVAL_ALIGN\":\n            bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n        END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.FASTP",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_BUILD"
                ],
                "children": [
                    "NFCORE_MAG.MAG.FASTQC_TRIMMED",
                    "NFCORE_MAG.MAG.CENTRIFUGE",
                    "NFCORE_MAG.MAG.KRAKEN2",
                    "NFCORE_MAG.MAG.SPADES",
                    "NFCORE_MAG.MAG.FILTLONG",
                    "NFCORE_MAG.MAG.MEGAHIT",
                    "NFCORE_MAG.MAG.SPADESHYBRID",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut_sample2_1.trim.fastq.gz",
                        "path": "/e1/9a7accee5f5f4db3f7c9248cada164/",
                        "sizeInBytes": 1659.506
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2_2.trim.fastq.gz",
                        "path": "/e1/9a7accee5f5f4db3f7c9248cada164/",
                        "sizeInBytes": 1857.297
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.1.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 4196.364
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.2.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 1.352
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.3.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 0.017
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.4.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 1.347
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.1.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 4196.364
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.2.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 1.352
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.phix_removed.unmapped_1.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1533.274
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.phix_removed.unmapped_2.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1725.571
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.phix_removed.bowtie2.log",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 0.589
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 0.064
                    }
                ],
                "avgCPU": 81.0,
                "bytesRead": 63248.137,
                "bytesWritten": 71049.273,
                "inputFilesBytes": 11913.599,
                "outputFilesBytes": 3259.4979999999996,
                "memory": 40521.728,
                "runtimeInSeconds": 25.0,
                "readBytes": 63248137.0,
                "writtenBytes": 71049273.0,
                "memoryInBytes": 40521728.0
            },
            {
                "name": "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN",
                "id": "10",
                "type": "compute",
                "command": "bowtie2 -p 1                 -x bt2_index_base                 -1 \"test_minigut_1.trim.fastq.gz\" -2 \"test_minigut_2.trim.fastq.gz\"                                  --un-conc-gz test_minigut.phix_removed.unmapped_%.fastq.gz                 --al-conc-gz test_minigut.phix_removed.mapped_%.fastq.gz                 1> /dev/null                 2> test_minigut.phix_removed.bowtie2.log\n        if [ N = \"Y\" ] ; then\n            gunzip -c test_minigut.phix_removed.mapped_1.fastq.gz | awk '{if(NR%4==1) print substr($0, 2)}' | LC_ALL=C sort > test_minigut.phix_removed.mapped_1.read_ids.txt\n            gunzip -c test_minigut.phix_removed.mapped_2.fastq.gz | awk '{if(NR%4==1) print substr($0, 2)}' | LC_ALL=C sort > test_minigut.phix_removed.mapped_2.read_ids.txt\n        fi\n        rm -f test_minigut.phix_removed.mapped_*.fastq.gz\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:BOWTIE2_PHIX_REMOVAL_ALIGN\":\n            bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n        END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.FASTP",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_BUILD"
                ],
                "children": [
                    "NFCORE_MAG.MAG.FASTQC_TRIMMED",
                    "NFCORE_MAG.MAG.CENTRIFUGE",
                    "NFCORE_MAG.MAG.KRAKEN2",
                    "NFCORE_MAG.MAG.SPADES",
                    "NFCORE_MAG.MAG.FILTLONG",
                    "NFCORE_MAG.MAG.MEGAHIT",
                    "NFCORE_MAG.MAG.SPADESHYBRID",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut_1.trim.fastq.gz",
                        "path": "/ef/a6a4e285761f2a6fdc82cd62443b5b/",
                        "sizeInBytes": 3406.561
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_2.trim.fastq.gz",
                        "path": "/ef/a6a4e285761f2a6fdc82cd62443b5b/",
                        "sizeInBytes": 3469.254
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.1.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 4196.364
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.2.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 1.352
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.3.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 0.017
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.4.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 1.347
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.1.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 4196.364
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.2.bt2",
                        "path": "/65/cca0d6e03987d09dfb6178128e570f/",
                        "sizeInBytes": 1.352
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.phix_removed.unmapped_1.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3170.229
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.phix_removed.unmapped_2.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3239.664
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.phix_removed.bowtie2.log",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 0.589
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 0.064
                    }
                ],
                "avgCPU": 86.9,
                "bytesRead": 101614.465,
                "bytesWritten": 121406.417,
                "inputFilesBytes": 15272.611,
                "outputFilesBytes": 6410.546,
                "memory": 40042.496,
                "runtimeInSeconds": 45.0,
                "readBytes": 101614465.0,
                "writtenBytes": 121406417.0,
                "memoryInBytes": 40042496.0
            },
            {
                "name": "NFCORE_MAG.MAG.KRAKEN2",
                "id": "14",
                "type": "compute",
                "command": "kraken2         --report-zero-counts         --threads 1         --db database         --report kraken2_report.txt         --paired \"test_minigut_sample2.phix_removed.unmapped_1.fastq.gz\" \"test_minigut_sample2.phix_removed.unmapped_2.fastq.gz\"         > kraken2.kraken\n    cat kraken2.kraken | cut -f 2,3 > results.krona\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:KRAKEN2\":\n        kraken2: $(echo $(kraken2 --version 2>&1) | sed 's/^.*Kraken version //' | sed 's/ Copyright.*//')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN",
                    "NFCORE_MAG.MAG.KRAKEN2_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_1.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1533.274
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_2.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1725.571
                    },
                    {
                        "link": "input",
                        "name": "hash.k2d",
                        "path": "/644e6092e3c12d271e3aba5effa524/database/",
                        "sizeInBytes": 3151.024
                    },
                    {
                        "link": "input",
                        "name": "opts.k2d",
                        "path": "/644e6092e3c12d271e3aba5effa524/database/",
                        "sizeInBytes": 0.056
                    },
                    {
                        "link": "input",
                        "name": "taxo.k2d",
                        "path": "/644e6092e3c12d271e3aba5effa524/database/",
                        "sizeInBytes": 0.469
                    },
                    {
                        "link": "output",
                        "name": "results.krona",
                        "path": "/64/ac465571215560fb4f940988bed32e/",
                        "sizeInBytes": 491.562
                    },
                    {
                        "link": "output",
                        "name": "kraken2_report.txt",
                        "path": "/64/ac465571215560fb4f940988bed32e/",
                        "sizeInBytes": 0.056
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/64/ac465571215560fb4f940988bed32e/",
                        "sizeInBytes": 0.05
                    }
                ],
                "avgCPU": 55.4,
                "bytesRead": 22237.875,
                "bytesWritten": 2775.191,
                "inputFilesBytes": 6410.393999999999,
                "outputFilesBytes": 491.668,
                "memory": 35938.304,
                "runtimeInSeconds": 2.0,
                "readBytes": 22237875.0,
                "writtenBytes": 2775191.0,
                "memoryInBytes": 35938304.0
            },
            {
                "name": "NFCORE_MAG.MAG.FASTQC_TRIMMED",
                "id": "13",
                "type": "compute",
                "command": "[ ! -f  test_minigut_sample2.trimmed_1.fastq.gz ] && ln -s test_minigut_sample2.phix_removed.unmapped_1.fastq.gz test_minigut_sample2.trimmed_1.fastq.gz\n        [ ! -f  test_minigut_sample2.trimmed_2.fastq.gz ] && ln -s test_minigut_sample2.phix_removed.unmapped_2.fastq.gz test_minigut_sample2.trimmed_2.fastq.gz\n        fastqc --quiet --threads 1 test_minigut_sample2.trimmed_1.fastq.gz test_minigut_sample2.trimmed_2.fastq.gz\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:FASTQC_TRIMMED\":\n            fastqc: $( fastqc --version | sed -e \"s/FastQC v//g\" )\n        END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_1.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1533.274
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_2.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1725.571
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.trimmed_1_fastqc.html",
                        "path": "/76/d4869464a5074828810a263f222c16/",
                        "sizeInBytes": 537.305
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.trimmed_2_fastqc.html",
                        "path": "/76/d4869464a5074828810a263f222c16/",
                        "sizeInBytes": 533.381
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.trimmed_1_fastqc.zip",
                        "path": "/76/d4869464a5074828810a263f222c16/",
                        "sizeInBytes": 284.126
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.trimmed_2_fastqc.zip",
                        "path": "/76/d4869464a5074828810a263f222c16/",
                        "sizeInBytes": 280.611
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/76/d4869464a5074828810a263f222c16/",
                        "sizeInBytes": 0.052
                    }
                ],
                "avgCPU": 90.3,
                "bytesRead": 24824.794,
                "bytesWritten": 3230.841,
                "inputFilesBytes": 3258.845,
                "outputFilesBytes": 1635.4749999999997,
                "memory": 275935.232,
                "runtimeInSeconds": 21.0,
                "readBytes": 24824794.0,
                "writtenBytes": 3230841.0,
                "memoryInBytes": 275935232.0
            },
            {
                "name": "NFCORE_MAG.MAG.CENTRIFUGE",
                "id": "12",
                "type": "compute",
                "command": "centrifuge -x \"minigut_cf\"         -p 1         --report-file report.txt         -S results.txt         -1 \"test_minigut_sample2.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut_sample2.phix_removed.unmapped_2.fastq.gz\"\n    centrifuge-kreport -x \"minigut_cf\" results.txt > kreport.txt\n    cat results.txt | cut -f 1,3 > results.krona\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:CENTRIFUGE\":\n        centrifuge: $(centrifuge --version | sed -n 1p | sed 's/^.*centrifuge-class version //')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN",
                    "NFCORE_MAG.MAG.CENTRIFUGE_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_1.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1533.274
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_2.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1725.571
                    },
                    {
                        "link": "input",
                        "name": "minigut_cf.1.cf",
                        "path": "/29/d9bbf244f81d328b039396cf2f6556/",
                        "sizeInBytes": 8972.492
                    },
                    {
                        "link": "input",
                        "name": "minigut_cf.2.cf",
                        "path": "/29/d9bbf244f81d328b039396cf2f6556/",
                        "sizeInBytes": 218.756
                    },
                    {
                        "link": "input",
                        "name": "minigut_cf.3.cf",
                        "path": "/29/d9bbf244f81d328b039396cf2f6556/",
                        "sizeInBytes": 0.076
                    },
                    {
                        "link": "input",
                        "name": "minigut_cf.4.cf",
                        "path": "/29/d9bbf244f81d328b039396cf2f6556/",
                        "sizeInBytes": 0.036
                    },
                    {
                        "link": "output",
                        "name": "results.krona",
                        "path": "/33/6b3a353b633c73ead2741ef5975521/",
                        "sizeInBytes": 491.575
                    },
                    {
                        "link": "output",
                        "name": "report.txt",
                        "path": "/33/6b3a353b633c73ead2741ef5975521/",
                        "sizeInBytes": 0.064
                    },
                    {
                        "link": "output",
                        "name": "kreport.txt",
                        "path": "/33/6b3a353b633c73ead2741ef5975521/",
                        "sizeInBytes": 0.036
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/33/6b3a353b633c73ead2741ef5975521/",
                        "sizeInBytes": 0.051
                    }
                ],
                "avgCPU": 54.3,
                "bytesRead": 31009.014,
                "bytesWritten": 2731.364,
                "inputFilesBytes": 12450.204999999998,
                "outputFilesBytes": 491.726,
                "memory": 39555.072,
                "runtimeInSeconds": 4.0,
                "readBytes": 31009014.0,
                "writtenBytes": 2731364.0,
                "memoryInBytes": 39555072.0
            },
            {
                "name": "NFCORE_MAG.MAG.SPADES",
                "id": "11",
                "type": "compute",
                "command": "metaspades.py                          --threads \"1\"             --memory 6             --pe1-1 test_minigut_sample2.phix_removed.unmapped_1.fastq.gz             --pe1-2 test_minigut_sample2.phix_removed.unmapped_2.fastq.gz             -o spades\n        mv spades/assembly_graph_with_scaffolds.gfa SPAdes-test_minigut_sample2_graph.gfa\n        mv spades/scaffolds.fasta SPAdes-test_minigut_sample2_scaffolds.fasta\n        mv spades/contigs.fasta SPAdes-test_minigut_sample2_contigs.fasta\n        mv spades/spades.log SPAdes-test_minigut_sample2.log\n        gzip \"SPAdes-test_minigut_sample2_contigs.fasta\"\n        gzip \"SPAdes-test_minigut_sample2_graph.gfa\"\n        gzip -c \"SPAdes-test_minigut_sample2_scaffolds.fasta\" > \"SPAdes-test_minigut_sample2_scaffolds.fasta.gz\"\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:SPADES\":\n            python: $(python --version 2>&1 | sed 's/Python //g')\n            metaspades: $(metaspades.py --version | sed \"s/SPAdes genome assembler v//; s/ \\[.*//\")\n        END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.QUAST",
                    "NFCORE_MAG.MAG.PRODIGAL",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_1.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1533.274
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_2.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1725.571
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "path": "/49/459b733ed35ca7c4770c41c0deb106/",
                        "sizeInBytes": 2133.044
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2.log",
                        "path": "/49/459b733ed35ca7c4770c41c0deb106/",
                        "sizeInBytes": 123.533
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2_contigs.fasta.gz",
                        "path": "/49/459b733ed35ca7c4770c41c0deb106/",
                        "sizeInBytes": 653.791
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2_scaffolds.fasta.gz",
                        "path": "/49/459b733ed35ca7c4770c41c0deb106/",
                        "sizeInBytes": 653.336
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2_graph.gfa.gz",
                        "path": "/49/459b733ed35ca7c4770c41c0deb106/",
                        "sizeInBytes": 685.577
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/49/459b733ed35ca7c4770c41c0deb106/",
                        "sizeInBytes": 0.066
                    }
                ],
                "avgCPU": 93.2,
                "bytesRead": 121905.258,
                "bytesWritten": 601348.224,
                "inputFilesBytes": 3258.845,
                "outputFilesBytes": 4249.347,
                "memory": 157962.24,
                "runtimeInSeconds": 86.0,
                "readBytes": 121905258.0,
                "writtenBytes": 601348224.0,
                "memoryInBytes": 157962240.0
            },
            {
                "name": "NFCORE_MAG.MAG.MEGAHIT",
                "id": "15",
                "type": "compute",
                "command": "megahit  -t \"1\" -m 6442450944 -1 \"test_minigut_sample2.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut_sample2.phix_removed.unmapped_2.fastq.gz\" -o MEGAHIT --out-prefix \"MEGAHIT-test_minigut_sample2\"\n        gzip -c \"MEGAHIT/MEGAHIT-test_minigut_sample2.contigs.fa\" > \"MEGAHIT/MEGAHIT-test_minigut_sample2.contigs.fa.gz\"\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:MEGAHIT\":\n            megahit: $(echo $(megahit -v 2>&1) | sed 's/MEGAHIT v//')\n        END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.QUAST",
                    "NFCORE_MAG.MAG.PRODIGAL",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_1.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1533.274
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_2.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1725.571
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut_sample2.contigs.fa",
                        "path": "/a492871941f9de2ee62bab563f685e/MEGAHIT/",
                        "sizeInBytes": 681.245
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut_sample2.log",
                        "path": "/a492871941f9de2ee62bab563f685e/MEGAHIT/",
                        "sizeInBytes": 131.685
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut_sample2.contigs.fa.gz",
                        "path": "/a492871941f9de2ee62bab563f685e/MEGAHIT/",
                        "sizeInBytes": 198.503
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/83/a492871941f9de2ee62bab563f685e/",
                        "sizeInBytes": 0.045
                    }
                ],
                "avgCPU": 95.5,
                "bytesRead": 649154.642,
                "bytesWritten": 87885.657,
                "inputFilesBytes": 3258.845,
                "outputFilesBytes": 1011.478,
                "memory": 323170.304,
                "runtimeInSeconds": 98.0,
                "readBytes": 649154642.0,
                "writtenBytes": 87885657.0,
                "memoryInBytes": 323170304.0
            },
            {
                "name": "NFCORE_MAG.MAG.CENTRIFUGE",
                "id": "17",
                "type": "compute",
                "command": "centrifuge -x \"minigut_cf\"         -p 1         --report-file report.txt         -S results.txt         -1 \"test_minigut.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut.phix_removed.unmapped_2.fastq.gz\"\n    centrifuge-kreport -x \"minigut_cf\" results.txt > kreport.txt\n    cat results.txt | cut -f 1,3 > results.krona\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:CENTRIFUGE\":\n        centrifuge: $(centrifuge --version | sed -n 1p | sed 's/^.*centrifuge-class version //')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN",
                    "NFCORE_MAG.MAG.CENTRIFUGE_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_1.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3170.229
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_2.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3239.664
                    },
                    {
                        "link": "input",
                        "name": "minigut_cf.1.cf",
                        "path": "/29/d9bbf244f81d328b039396cf2f6556/",
                        "sizeInBytes": 8972.492
                    },
                    {
                        "link": "input",
                        "name": "minigut_cf.2.cf",
                        "path": "/29/d9bbf244f81d328b039396cf2f6556/",
                        "sizeInBytes": 218.756
                    },
                    {
                        "link": "input",
                        "name": "minigut_cf.3.cf",
                        "path": "/29/d9bbf244f81d328b039396cf2f6556/",
                        "sizeInBytes": 0.076
                    },
                    {
                        "link": "input",
                        "name": "minigut_cf.4.cf",
                        "path": "/29/d9bbf244f81d328b039396cf2f6556/",
                        "sizeInBytes": 0.036
                    },
                    {
                        "link": "output",
                        "name": "results.krona",
                        "path": "/1c/1e5e8125d64e1dd5306b85c6967d69/",
                        "sizeInBytes": 951.947
                    },
                    {
                        "link": "output",
                        "name": "report.txt",
                        "path": "/1c/1e5e8125d64e1dd5306b85c6967d69/",
                        "sizeInBytes": 0.064
                    },
                    {
                        "link": "output",
                        "name": "kreport.txt",
                        "path": "/1c/1e5e8125d64e1dd5306b85c6967d69/",
                        "sizeInBytes": 0.036
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/1c/1e5e8125d64e1dd5306b85c6967d69/",
                        "sizeInBytes": 0.051
                    }
                ],
                "avgCPU": 67.5,
                "bytesRead": 46175.709,
                "bytesWritten": 5848.868,
                "inputFilesBytes": 15601.252999999999,
                "outputFilesBytes": 952.098,
                "memory": 39743.488,
                "runtimeInSeconds": 7.0,
                "readBytes": 46175709.0,
                "writtenBytes": 5848868.0,
                "memoryInBytes": 39743488.0
            },
            {
                "name": "NFCORE_MAG.MAG.SPADES",
                "id": "19",
                "type": "compute",
                "command": "metaspades.py                          --threads \"1\"             --memory 6             --pe1-1 test_minigut.phix_removed.unmapped_1.fastq.gz             --pe1-2 test_minigut.phix_removed.unmapped_2.fastq.gz             -o spades\n        mv spades/assembly_graph_with_scaffolds.gfa SPAdes-test_minigut_graph.gfa\n        mv spades/scaffolds.fasta SPAdes-test_minigut_scaffolds.fasta\n        mv spades/contigs.fasta SPAdes-test_minigut_contigs.fasta\n        mv spades/spades.log SPAdes-test_minigut.log\n        gzip \"SPAdes-test_minigut_contigs.fasta\"\n        gzip \"SPAdes-test_minigut_graph.gfa\"\n        gzip -c \"SPAdes-test_minigut_scaffolds.fasta\" > \"SPAdes-test_minigut_scaffolds.fasta.gz\"\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:SPADES\":\n            python: $(python --version 2>&1 | sed 's/Python //g')\n            metaspades: $(metaspades.py --version | sed \"s/SPAdes genome assembler v//; s/ \\[.*//\")\n        END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.QUAST",
                    "NFCORE_MAG.MAG.PRODIGAL",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_1.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3170.229
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_2.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3239.664
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_scaffolds.fasta",
                        "path": "/cc/88fddc4525a53abf78a8bcde4df507/",
                        "sizeInBytes": 1772.115
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut.log",
                        "path": "/cc/88fddc4525a53abf78a8bcde4df507/",
                        "sizeInBytes": 121.585
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_contigs.fasta.gz",
                        "path": "/cc/88fddc4525a53abf78a8bcde4df507/",
                        "sizeInBytes": 547.458
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_scaffolds.fasta.gz",
                        "path": "/cc/88fddc4525a53abf78a8bcde4df507/",
                        "sizeInBytes": 545.217
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_graph.gfa.gz",
                        "path": "/cc/88fddc4525a53abf78a8bcde4df507/",
                        "sizeInBytes": 518.118
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/cc/88fddc4525a53abf78a8bcde4df507/",
                        "sizeInBytes": 0.066
                    }
                ],
                "avgCPU": 95.8,
                "bytesRead": 221623.996,
                "bytesWritten": 537789.105,
                "inputFilesBytes": 6409.893,
                "outputFilesBytes": 3504.5589999999997,
                "memory": 206938.112,
                "runtimeInSeconds": 114.0,
                "readBytes": 221623996.0,
                "writtenBytes": 537789105.0,
                "memoryInBytes": 206938112.0
            },
            {
                "name": "NFCORE_MAG.MAG.KRAKEN2",
                "id": "18",
                "type": "compute",
                "command": "kraken2         --report-zero-counts         --threads 1         --db database         --report kraken2_report.txt         --paired \"test_minigut.phix_removed.unmapped_1.fastq.gz\" \"test_minigut.phix_removed.unmapped_2.fastq.gz\"         > kraken2.kraken\n    cat kraken2.kraken | cut -f 2,3 > results.krona\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:KRAKEN2\":\n        kraken2: $(echo $(kraken2 --version 2>&1) | sed 's/^.*Kraken version //' | sed 's/ Copyright.*//')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN",
                    "NFCORE_MAG.MAG.KRAKEN2_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_1.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3170.229
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_2.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3239.664
                    },
                    {
                        "link": "input",
                        "name": "hash.k2d",
                        "path": "/644e6092e3c12d271e3aba5effa524/database/",
                        "sizeInBytes": 3151.024
                    },
                    {
                        "link": "input",
                        "name": "opts.k2d",
                        "path": "/644e6092e3c12d271e3aba5effa524/database/",
                        "sizeInBytes": 0.056
                    },
                    {
                        "link": "input",
                        "name": "taxo.k2d",
                        "path": "/644e6092e3c12d271e3aba5effa524/database/",
                        "sizeInBytes": 0.469
                    },
                    {
                        "link": "output",
                        "name": "results.krona",
                        "path": "/9e/be323b74a69fcf33b7f7a228009a3a/",
                        "sizeInBytes": 951.934
                    },
                    {
                        "link": "output",
                        "name": "kraken2_report.txt",
                        "path": "/9e/be323b74a69fcf33b7f7a228009a3a/",
                        "sizeInBytes": 0.056
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/9e/be323b74a69fcf33b7f7a228009a3a/",
                        "sizeInBytes": 0.05
                    }
                ],
                "avgCPU": 59.5,
                "bytesRead": 35430.762,
                "bytesWritten": 5247.457,
                "inputFilesBytes": 9561.442,
                "outputFilesBytes": 952.04,
                "memory": 34766.848,
                "runtimeInSeconds": 3.0,
                "readBytes": 35430762.0,
                "writtenBytes": 5247457.0,
                "memoryInBytes": 34766848.0
            },
            {
                "name": "NFCORE_MAG.MAG.FASTQC_TRIMMED",
                "id": "16",
                "type": "compute",
                "command": "[ ! -f  test_minigut.trimmed_1.fastq.gz ] && ln -s test_minigut.phix_removed.unmapped_1.fastq.gz test_minigut.trimmed_1.fastq.gz\n        [ ! -f  test_minigut.trimmed_2.fastq.gz ] && ln -s test_minigut.phix_removed.unmapped_2.fastq.gz test_minigut.trimmed_2.fastq.gz\n        fastqc --quiet --threads 1 test_minigut.trimmed_1.fastq.gz test_minigut.trimmed_2.fastq.gz\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:FASTQC_TRIMMED\":\n            fastqc: $( fastqc --version | sed -e \"s/FastQC v//g\" )\n        END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_1.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3170.229
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_2.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3239.664
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.trimmed_1_fastqc.html",
                        "path": "/8b/951f59ff6eff428229c9d8deeb003f/",
                        "sizeInBytes": 651.238
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.trimmed_2_fastqc.html",
                        "path": "/8b/951f59ff6eff428229c9d8deeb003f/",
                        "sizeInBytes": 647.91
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.trimmed_1_fastqc.zip",
                        "path": "/8b/951f59ff6eff428229c9d8deeb003f/",
                        "sizeInBytes": 287.336
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.trimmed_2_fastqc.zip",
                        "path": "/8b/951f59ff6eff428229c9d8deeb003f/",
                        "sizeInBytes": 289.084
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/8b/951f59ff6eff428229c9d8deeb003f/",
                        "sizeInBytes": 0.052
                    }
                ],
                "avgCPU": 90.9,
                "bytesRead": 28319.619,
                "bytesWritten": 3813.37,
                "inputFilesBytes": 6409.893,
                "outputFilesBytes": 1875.6200000000001,
                "memory": 343523.328,
                "runtimeInSeconds": 23.0,
                "readBytes": 28319619.0,
                "writtenBytes": 3813370.0,
                "memoryInBytes": 343523328.0
            },
            {
                "name": "NFCORE_MAG.MAG.MEGAHIT",
                "id": "20",
                "type": "compute",
                "command": "megahit  -t \"1\" -m 6442450944 -1 \"test_minigut.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut.phix_removed.unmapped_2.fastq.gz\" -o MEGAHIT --out-prefix \"MEGAHIT-test_minigut\"\n        gzip -c \"MEGAHIT/MEGAHIT-test_minigut.contigs.fa\" > \"MEGAHIT/MEGAHIT-test_minigut.contigs.fa.gz\"\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:MEGAHIT\":\n            megahit: $(echo $(megahit -v 2>&1) | sed 's/MEGAHIT v//')\n        END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.QUAST",
                    "NFCORE_MAG.MAG.PRODIGAL",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_1.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3170.229
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_2.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3239.664
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut.contigs.fa",
                        "path": "/101a0fb9edf105a9bbbaa4215ca2b5/MEGAHIT/",
                        "sizeInBytes": 1749.885
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut.log",
                        "path": "/101a0fb9edf105a9bbbaa4215ca2b5/MEGAHIT/",
                        "sizeInBytes": 130.296
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut.contigs.fa.gz",
                        "path": "/101a0fb9edf105a9bbbaa4215ca2b5/MEGAHIT/",
                        "sizeInBytes": 511.173
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/c2/101a0fb9edf105a9bbbaa4215ca2b5/",
                        "sizeInBytes": 0.045
                    }
                ],
                "avgCPU": 96.6,
                "bytesRead": 734951.284,
                "bytesWritten": 141363.273,
                "inputFilesBytes": 6409.893,
                "outputFilesBytes": 2391.3990000000003,
                "memory": 55246.848,
                "runtimeInSeconds": 139.0,
                "readBytes": 734951284.0,
                "writtenBytes": 141363273.0,
                "memoryInBytes": 55246848.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                "id": "22",
                "type": "compute",
                "command": "mkdir bowtie\n    bowtie2-build --threads 1 SPAdes-test_minigut_sample2_scaffolds.fasta \"bt2_index_base\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_BUILD\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.MEGAHIT",
                    "NFCORE_MAG.MAG.SPADES",
                    "NFCORE_MAG.MAG.SPADESHYBRID"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "path": "/49/459b733ed35ca7c4770c41c0deb106/",
                        "sizeInBytes": 2133.044
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 2133.044
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.1.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 5085.18
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.2.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 470.452
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.3.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 49.589
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.4.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 470.447
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.rev.1.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 5085.18
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.rev.2.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 470.452
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 0.08
                    }
                ],
                "avgCPU": 74.4,
                "bytesRead": 9949.727,
                "bytesWritten": 11641.365,
                "inputFilesBytes": 2133.044,
                "outputFilesBytes": 13764.423999999999,
                "memory": 41099.264,
                "runtimeInSeconds": 3.0,
                "readBytes": 9949727.0,
                "writtenBytes": 11641365.0,
                "memoryInBytes": 41099264.0
            },
            {
                "name": "NFCORE_MAG.MAG.PRODIGAL",
                "id": "21",
                "type": "compute",
                "command": "pigz -cdf SPAdes-test_minigut_sample2_scaffolds.fasta | prodigal \\\n        -p meta \\\n        -f gff \\\n        -d \"test_minigut_sample2.fna\" \\\n        -o \"test_minigut_sample2.gff\" \\\n        -a \"test_minigut_sample2.faa\" \\\n        -s \"test_minigut_sample2_all.txt\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PRODIGAL\":\n        prodigal: $(prodigal -v 2>&1 | sed -n 's/Prodigal V\\(.*\\):.*/\\1/p')\n        pigz: $(pigz -V 2>&1 | sed 's/pigz //g')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.MEGAHIT",
                    "NFCORE_MAG.MAG.SPADES",
                    "NFCORE_MAG.MAG.SPADESHYBRID"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "path": "/49/459b733ed35ca7c4770c41c0deb106/",
                        "sizeInBytes": 2133.044
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.gff",
                        "path": "/9e/34f9fa9af0d2520ba072bb7e5902dc/",
                        "sizeInBytes": 2609.126
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.fna",
                        "path": "/9e/34f9fa9af0d2520ba072bb7e5902dc/",
                        "sizeInBytes": 2467.069
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.faa",
                        "path": "/9e/34f9fa9af0d2520ba072bb7e5902dc/",
                        "sizeInBytes": 1357.941
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2_all.txt",
                        "path": "/9e/34f9fa9af0d2520ba072bb7e5902dc/",
                        "sizeInBytes": 5633.865
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/9e/34f9fa9af0d2520ba072bb7e5902dc/",
                        "sizeInBytes": 0.061
                    }
                ],
                "avgCPU": 86.7,
                "bytesRead": 4342.188,
                "bytesWritten": 14456.537,
                "inputFilesBytes": 2133.044,
                "outputFilesBytes": 12068.062,
                "memory": 55660.544,
                "runtimeInSeconds": 11.0,
                "readBytes": 4342188.0,
                "writtenBytes": 14456537.0,
                "memoryInBytes": 55660544.0
            },
            {
                "name": "NFCORE_MAG.MAG.QUAST",
                "id": "23",
                "type": "compute",
                "command": "metaquast.py --threads \"1\" --rna-finding --max-ref-number 0 -l \"SPAdes-test_minigut_sample2\" \"SPAdes-test_minigut_sample2_scaffolds.fasta\" -o \"QUAST\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.MEGAHIT",
                    "NFCORE_MAG.MAG.SPADES",
                    "NFCORE_MAG.MAG.SPADESHYBRID"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "path": "/49/459b733ed35ca7c4770c41c0deb106/",
                        "sizeInBytes": 2133.044
                    },
                    {
                        "link": "output",
                        "name": "basic_stats",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 92.29
                    },
                    {
                        "link": "output",
                        "name": "icarus.html",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 53.372
                    },
                    {
                        "link": "output",
                        "name": "icarus_viewers",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 833.15
                    },
                    {
                        "link": "output",
                        "name": "metaquast.log",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 0.73
                    },
                    {
                        "link": "output",
                        "name": "predicted_genes",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 0.334
                    },
                    {
                        "link": "output",
                        "name": "quast.log",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 3.941
                    },
                    {
                        "link": "output",
                        "name": "report.html",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 393.153
                    },
                    {
                        "link": "output",
                        "name": "report.pdf",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 33.778
                    },
                    {
                        "link": "output",
                        "name": "report.tex",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 1.229
                    },
                    {
                        "link": "output",
                        "name": "report.tsv",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 0.534
                    },
                    {
                        "link": "output",
                        "name": "report.txt",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 1.447
                    },
                    {
                        "link": "output",
                        "name": "transposed_report.tex",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 1.062
                    },
                    {
                        "link": "output",
                        "name": "transposed_report.tsv",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 0.534
                    },
                    {
                        "link": "output",
                        "name": "transposed_report.txt",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 1.051
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/cc/0141a35dc4cfe921c2795e8375987c/",
                        "sizeInBytes": 0.063
                    }
                ],
                "avgCPU": 58.6,
                "bytesRead": 128685.719,
                "bytesWritten": 5171.191,
                "inputFilesBytes": 2133.044,
                "outputFilesBytes": 1416.6680000000001,
                "memory": 297996.288,
                "runtimeInSeconds": 14.417,
                "readBytes": 128685719.0,
                "writtenBytes": 5171191.0,
                "memoryInBytes": 297996288.0
            },
            {
                "name": "NFCORE_MAG.MAG.QUAST",
                "id": "26",
                "type": "compute",
                "command": "metaquast.py --threads \"1\" --rna-finding --max-ref-number 0 -l \"MEGAHIT-test_minigut_sample2\" \"MEGAHIT-test_minigut_sample2.contigs.fa\" -o \"QUAST\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.MEGAHIT",
                    "NFCORE_MAG.MAG.SPADES",
                    "NFCORE_MAG.MAG.SPADESHYBRID"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2.contigs.fa",
                        "path": "/a492871941f9de2ee62bab563f685e/MEGAHIT/",
                        "sizeInBytes": 681.245
                    },
                    {
                        "link": "output",
                        "name": "basic_stats",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 61.148
                    },
                    {
                        "link": "output",
                        "name": "icarus.html",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 53.373
                    },
                    {
                        "link": "output",
                        "name": "icarus_viewers",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 802.216
                    },
                    {
                        "link": "output",
                        "name": "metaquast.log",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 0.724
                    },
                    {
                        "link": "output",
                        "name": "predicted_genes",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 0.262
                    },
                    {
                        "link": "output",
                        "name": "quast.log",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 3.572
                    },
                    {
                        "link": "output",
                        "name": "report.html",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 382.977
                    },
                    {
                        "link": "output",
                        "name": "report.pdf",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 28.437
                    },
                    {
                        "link": "output",
                        "name": "report.tex",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 1.223
                    },
                    {
                        "link": "output",
                        "name": "report.tsv",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 0.528
                    },
                    {
                        "link": "output",
                        "name": "report.txt",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 1.47
                    },
                    {
                        "link": "output",
                        "name": "transposed_report.tex",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 1.056
                    },
                    {
                        "link": "output",
                        "name": "transposed_report.tsv",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 0.528
                    },
                    {
                        "link": "output",
                        "name": "transposed_report.txt",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 1.053
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/df/f3bde70ef3b153d702923d488c467a/",
                        "sizeInBytes": 0.063
                    }
                ],
                "avgCPU": 86.4,
                "bytesRead": 95359.662,
                "bytesWritten": 4679.327,
                "inputFilesBytes": 681.245,
                "outputFilesBytes": 1338.63,
                "memory": 293314.56,
                "runtimeInSeconds": 7.271,
                "readBytes": 95359662.0,
                "writtenBytes": 4679327.0,
                "memoryInBytes": 293314560.0
            },
            {
                "name": "NFCORE_MAG.MAG.PRODIGAL",
                "id": "25",
                "type": "compute",
                "command": "pigz -cdf MEGAHIT-test_minigut_sample2.contigs.fa | prodigal \\\n        -p meta \\\n        -f gff \\\n        -d \"test_minigut_sample2.fna\" \\\n        -o \"test_minigut_sample2.gff\" \\\n        -a \"test_minigut_sample2.faa\" \\\n        -s \"test_minigut_sample2_all.txt\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PRODIGAL\":\n        prodigal: $(prodigal -v 2>&1 | sed -n 's/Prodigal V\\(.*\\):.*/\\1/p')\n        pigz: $(pigz -V 2>&1 | sed 's/pigz //g')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.MEGAHIT",
                    "NFCORE_MAG.MAG.SPADES",
                    "NFCORE_MAG.MAG.SPADESHYBRID"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2.contigs.fa",
                        "path": "/a492871941f9de2ee62bab563f685e/MEGAHIT/",
                        "sizeInBytes": 681.245
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.gff",
                        "path": "/fe/428751a5e94188b50f851df1687601/",
                        "sizeInBytes": 655.029
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.fna",
                        "path": "/fe/428751a5e94188b50f851df1687601/",
                        "sizeInBytes": 738.702
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2.faa",
                        "path": "/fe/428751a5e94188b50f851df1687601/",
                        "sizeInBytes": 367.506
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2_all.txt",
                        "path": "/fe/428751a5e94188b50f851df1687601/",
                        "sizeInBytes": 1751.65
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/fe/428751a5e94188b50f851df1687601/",
                        "sizeInBytes": 0.061
                    }
                ],
                "avgCPU": 87.5,
                "bytesRead": 1438.572,
                "bytesWritten": 4258.078,
                "inputFilesBytes": 681.245,
                "outputFilesBytes": 3512.9480000000003,
                "memory": 55271.424,
                "runtimeInSeconds": 4.0,
                "readBytes": 1438572.0,
                "writtenBytes": 4258078.0,
                "memoryInBytes": 55271424.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                "id": "24",
                "type": "compute",
                "command": "mkdir bowtie\n    bowtie2-build --threads 1 MEGAHIT-test_minigut_sample2.contigs.fa \"bt2_index_base\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_BUILD\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.MEGAHIT",
                    "NFCORE_MAG.MAG.SPADES",
                    "NFCORE_MAG.MAG.SPADESHYBRID"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2.contigs.fa",
                        "path": "/a492871941f9de2ee62bab563f685e/MEGAHIT/",
                        "sizeInBytes": 681.245
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut_sample2.contigs.fa",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 681.245
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.1.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 4474.209
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.2.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 157.464
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.3.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 11.816
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.4.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 157.46
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.rev.1.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 4474.209
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.rev.2.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 157.464
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 0.08
                    }
                ],
                "avgCPU": 84.1,
                "bytesRead": 4142.521,
                "bytesWritten": 9442.659,
                "inputFilesBytes": 681.245,
                "outputFilesBytes": 10113.946999999998,
                "memory": 28553.216,
                "runtimeInSeconds": 1.0,
                "readBytes": 4142520.9999999995,
                "writtenBytes": 9442659.0,
                "memoryInBytes": 28553216.0
            },
            {
                "name": "NFCORE_MAG.MAG.QUAST",
                "id": "27",
                "type": "compute",
                "command": "metaquast.py --threads \"1\" --rna-finding --max-ref-number 0 -l \"SPAdes-test_minigut\" \"SPAdes-test_minigut_scaffolds.fasta\" -o \"QUAST\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.MEGAHIT",
                    "NFCORE_MAG.MAG.SPADES",
                    "NFCORE_MAG.MAG.SPADESHYBRID"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_scaffolds.fasta",
                        "path": "/cc/88fddc4525a53abf78a8bcde4df507/",
                        "sizeInBytes": 1772.115
                    },
                    {
                        "link": "output",
                        "name": "basic_stats",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 87.922
                    },
                    {
                        "link": "output",
                        "name": "icarus.html",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 53.364
                    },
                    {
                        "link": "output",
                        "name": "icarus_viewers",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 783.442
                    },
                    {
                        "link": "output",
                        "name": "metaquast.log",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 0.698
                    },
                    {
                        "link": "output",
                        "name": "predicted_genes",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 0.347
                    },
                    {
                        "link": "output",
                        "name": "quast.log",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 3.837
                    },
                    {
                        "link": "output",
                        "name": "report.html",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 372.013
                    },
                    {
                        "link": "output",
                        "name": "report.pdf",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 31.492
                    },
                    {
                        "link": "output",
                        "name": "report.tex",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 1.243
                    },
                    {
                        "link": "output",
                        "name": "report.tsv",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 0.549
                    },
                    {
                        "link": "output",
                        "name": "report.txt",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 1.263
                    },
                    {
                        "link": "output",
                        "name": "transposed_report.tex",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 1.076
                    },
                    {
                        "link": "output",
                        "name": "transposed_report.tsv",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 0.549
                    },
                    {
                        "link": "output",
                        "name": "transposed_report.txt",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 1.043
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/72/12f50d9fab75af67b6d58104068945/",
                        "sizeInBytes": 0.063
                    }
                ],
                "avgCPU": 86.1,
                "bytesRead": 130712.713,
                "bytesWritten": 6101.49,
                "inputFilesBytes": 1772.115,
                "outputFilesBytes": 1338.9009999999998,
                "memory": 94191.616,
                "runtimeInSeconds": 10.862,
                "readBytes": 130712713.0,
                "writtenBytes": 6101490.0,
                "memoryInBytes": 94191616.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                "id": "29",
                "type": "compute",
                "command": "mkdir bowtie\n    bowtie2-build --threads 1 SPAdes-test_minigut_scaffolds.fasta \"bt2_index_base\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_BUILD\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.MEGAHIT",
                    "NFCORE_MAG.MAG.SPADES",
                    "NFCORE_MAG.MAG.SPADESHYBRID"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_scaffolds.fasta",
                        "path": "/cc/88fddc4525a53abf78a8bcde4df507/",
                        "sizeInBytes": 1772.115
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_scaffolds.fasta",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 1772.115
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.1.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 4779.149
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.2.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 434.68
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.3.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 1.808
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.4.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 434.676
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.rev.1.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 4779.149
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.rev.2.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 434.68
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 0.08
                    }
                ],
                "avgCPU": 91.2,
                "bytesRead": 8505.993,
                "bytesWritten": 10874.197,
                "inputFilesBytes": 1772.115,
                "outputFilesBytes": 12636.337000000001,
                "memory": 34422.784,
                "runtimeInSeconds": 2.0,
                "readBytes": 8505993.0,
                "writtenBytes": 10874197.0,
                "memoryInBytes": 34422784.0
            },
            {
                "name": "NFCORE_MAG.MAG.PRODIGAL",
                "id": "28",
                "type": "compute",
                "command": "pigz -cdf SPAdes-test_minigut_scaffolds.fasta | prodigal \\\n        -p meta \\\n        -f gff \\\n        -d \"test_minigut.fna\" \\\n        -o \"test_minigut.gff\" \\\n        -a \"test_minigut.faa\" \\\n        -s \"test_minigut_all.txt\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PRODIGAL\":\n        prodigal: $(prodigal -v 2>&1 | sed -n 's/Prodigal V\\(.*\\):.*/\\1/p')\n        pigz: $(pigz -V 2>&1 | sed 's/pigz //g')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.MEGAHIT",
                    "NFCORE_MAG.MAG.SPADES",
                    "NFCORE_MAG.MAG.SPADESHYBRID"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_scaffolds.fasta",
                        "path": "/cc/88fddc4525a53abf78a8bcde4df507/",
                        "sizeInBytes": 1772.115
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.gff",
                        "path": "/e5/ae2196ddf7e7a335e47496cee0bf8d/",
                        "sizeInBytes": 404.533
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.fna",
                        "path": "/e5/ae2196ddf7e7a335e47496cee0bf8d/",
                        "sizeInBytes": 1793.076
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.faa",
                        "path": "/e5/ae2196ddf7e7a335e47496cee0bf8d/",
                        "sizeInBytes": 749.527
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_all.txt",
                        "path": "/e5/ae2196ddf7e7a335e47496cee0bf8d/",
                        "sizeInBytes": 5199.012
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/e5/ae2196ddf7e7a335e47496cee0bf8d/",
                        "sizeInBytes": 0.061
                    }
                ],
                "avgCPU": 94.5,
                "bytesRead": 3620.277,
                "bytesWritten": 9922.522,
                "inputFilesBytes": 1772.115,
                "outputFilesBytes": 8146.208999999999,
                "memory": 65024.0,
                "runtimeInSeconds": 35.0,
                "readBytes": 3620277.0,
                "writtenBytes": 9922522.0,
                "memoryInBytes": 65024000.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                "id": "32",
                "type": "compute",
                "command": "mkdir bowtie\n    bowtie2-build --threads 1 MEGAHIT-test_minigut.contigs.fa \"bt2_index_base\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_BUILD\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.MEGAHIT",
                    "NFCORE_MAG.MAG.SPADES",
                    "NFCORE_MAG.MAG.SPADESHYBRID"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut.contigs.fa",
                        "path": "/101a0fb9edf105a9bbbaa4215ca2b5/MEGAHIT/",
                        "sizeInBytes": 1749.885
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut.contigs.fa",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 1749.885
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.1.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 4788.734
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.2.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 434.788
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.3.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 2.456
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.4.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 434.78
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.rev.1.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 4788.734
                    },
                    {
                        "link": "output",
                        "name": "bt2_index_base.rev.2.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 434.788
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 0.08
                    }
                ],
                "avgCPU": 89.0,
                "bytesRead": 8417.065,
                "bytesWritten": 10894.333,
                "inputFilesBytes": 1749.885,
                "outputFilesBytes": 12634.245,
                "memory": 36511.744,
                "runtimeInSeconds": 2.0,
                "readBytes": 8417065.0,
                "writtenBytes": 10894333.0,
                "memoryInBytes": 36511744.0
            },
            {
                "name": "NFCORE_MAG.MAG.PRODIGAL",
                "id": "30",
                "type": "compute",
                "command": "pigz -cdf MEGAHIT-test_minigut.contigs.fa | prodigal \\\n        -p meta \\\n        -f gff \\\n        -d \"test_minigut.fna\" \\\n        -o \"test_minigut.gff\" \\\n        -a \"test_minigut.faa\" \\\n        -s \"test_minigut_all.txt\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PRODIGAL\":\n        prodigal: $(prodigal -v 2>&1 | sed -n 's/Prodigal V\\(.*\\):.*/\\1/p')\n        pigz: $(pigz -V 2>&1 | sed 's/pigz //g')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.MEGAHIT",
                    "NFCORE_MAG.MAG.SPADES",
                    "NFCORE_MAG.MAG.SPADESHYBRID"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut.contigs.fa",
                        "path": "/101a0fb9edf105a9bbbaa4215ca2b5/MEGAHIT/",
                        "sizeInBytes": 1749.885
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.gff",
                        "path": "/3f/b0c9416faa2c6d3b038c04a767bbce/",
                        "sizeInBytes": 435.322
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.fna",
                        "path": "/3f/b0c9416faa2c6d3b038c04a767bbce/",
                        "sizeInBytes": 1764.596
                    },
                    {
                        "link": "output",
                        "name": "test_minigut.faa",
                        "path": "/3f/b0c9416faa2c6d3b038c04a767bbce/",
                        "sizeInBytes": 720.125
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_all.txt",
                        "path": "/3f/b0c9416faa2c6d3b038c04a767bbce/",
                        "sizeInBytes": 5117.265
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/3f/b0c9416faa2c6d3b038c04a767bbce/",
                        "sizeInBytes": 0.061
                    }
                ],
                "avgCPU": 93.8,
                "bytesRead": 3575.814,
                "bytesWritten": 9801.136,
                "inputFilesBytes": 1749.885,
                "outputFilesBytes": 8037.369000000001,
                "memory": 56995.84,
                "runtimeInSeconds": 27.0,
                "readBytes": 3575814.0,
                "writtenBytes": 9801136.0,
                "memoryInBytes": 56995840.0
            },
            {
                "name": "NFCORE_MAG.MAG.QUAST",
                "id": "31",
                "type": "compute",
                "command": "metaquast.py --threads \"1\" --rna-finding --max-ref-number 0 -l \"MEGAHIT-test_minigut\" \"MEGAHIT-test_minigut.contigs.fa\" -o \"QUAST\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.MEGAHIT",
                    "NFCORE_MAG.MAG.SPADES",
                    "NFCORE_MAG.MAG.SPADESHYBRID"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut.contigs.fa",
                        "path": "/101a0fb9edf105a9bbbaa4215ca2b5/MEGAHIT/",
                        "sizeInBytes": 1749.885
                    },
                    {
                        "link": "output",
                        "name": "basic_stats",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 57.895
                    },
                    {
                        "link": "output",
                        "name": "icarus.html",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 53.365
                    },
                    {
                        "link": "output",
                        "name": "icarus_viewers",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 794.22
                    },
                    {
                        "link": "output",
                        "name": "metaquast.log",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 0.692
                    },
                    {
                        "link": "output",
                        "name": "predicted_genes",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 0.266
                    },
                    {
                        "link": "output",
                        "name": "quast.log",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 3.486
                    },
                    {
                        "link": "output",
                        "name": "report.html",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 382.475
                    },
                    {
                        "link": "output",
                        "name": "report.pdf",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 28.688
                    },
                    {
                        "link": "output",
                        "name": "report.tex",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 1.241
                    },
                    {
                        "link": "output",
                        "name": "report.tsv",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 0.547
                    },
                    {
                        "link": "output",
                        "name": "report.txt",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 1.286
                    },
                    {
                        "link": "output",
                        "name": "transposed_report.tex",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 1.074
                    },
                    {
                        "link": "output",
                        "name": "transposed_report.tsv",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 0.547
                    },
                    {
                        "link": "output",
                        "name": "transposed_report.txt",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 1.043
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/b7/970e9d834edce57f29423a99aac816/",
                        "sizeInBytes": 0.063
                    }
                ],
                "avgCPU": 83.7,
                "bytesRead": 107529.805,
                "bytesWritten": 6133.055,
                "inputFilesBytes": 1749.885,
                "outputFilesBytes": 1326.8880000000001,
                "memory": 294641.664,
                "runtimeInSeconds": 10.067,
                "readBytes": 107529805.0,
                "writtenBytes": 6133055.0,
                "memoryInBytes": 294641664.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                "id": "34",
                "type": "compute",
                "command": "INDEX=`find -L ./ -name \"*.rev.1.bt2l\" -o -name \"*.rev.1.bt2\" | sed 's/.rev.1.bt2l//' | sed 's/.rev.1.bt2//'`\n    bowtie2 \\\n        -p \"1\" \\\n        -x $INDEX \\\n         \\\n        -1 \"test_minigut.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut.phix_removed.unmapped_2.fastq.gz\" \\\n        2> \"SPAdes-test_minigut_sample2-test_minigut.bowtie2.log\" |         samtools view -@ \"1\" -bS |         samtools sort -@ \"1\" -o \"SPAdes-test_minigut_sample2-test_minigut.bam\"\n    samtools index \"SPAdes-test_minigut_sample2-test_minigut.bam\"\n\n    if [ SPAdes-test_minigut_sample2-test_minigut = \"SPAdes-test_minigut_sample2-test_minigut_sample2\" ] ; then\n        mv \"SPAdes-test_minigut_sample2-test_minigut.bowtie2.log\" \"SPAdes-test_minigut_sample2.bowtie2.log\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_ALIGN\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n        samtools: $(echo $(samtools --version 2>&1) | sed 's/^.*samtools //; s/Using.*$//')\n        pigz: $( pigz --version 2>&1 | sed 's/pigz //g' )\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 2133.044
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.1.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 5085.18
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.2.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 470.452
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.3.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 49.589
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.4.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 470.447
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.1.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 5085.18
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.2.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 470.452
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_1.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3170.229
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_2.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3239.664
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "path": "/e5/0b51f7ab520a9b0717d009ec567a92/",
                        "sizeInBytes": 2133.044
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2-test_minigut.bam",
                        "path": "/e5/0b51f7ab520a9b0717d009ec567a92/",
                        "sizeInBytes": 7011.332
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2-test_minigut.bam.bai",
                        "path": "/e5/0b51f7ab520a9b0717d009ec567a92/",
                        "sizeInBytes": 42.12
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2-test_minigut.bowtie2.log",
                        "path": "/e5/0b51f7ab520a9b0717d009ec567a92/",
                        "sizeInBytes": 0.59
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/e5/0b51f7ab520a9b0717d009ec567a92/",
                        "sizeInBytes": 0.116
                    }
                ],
                "avgCPU": 78.0,
                "bytesRead": 62523.471,
                "bytesWritten": 43891.634,
                "inputFilesBytes": 20174.237,
                "outputFilesBytes": 9187.202000000001,
                "memory": 75362.304,
                "runtimeInSeconds": 8.0,
                "readBytes": 62523471.0,
                "writtenBytes": 43891634.0,
                "memoryInBytes": 75362304.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                "id": "33",
                "type": "compute",
                "command": "INDEX=`find -L ./ -name \"*.rev.1.bt2l\" -o -name \"*.rev.1.bt2\" | sed 's/.rev.1.bt2l//' | sed 's/.rev.1.bt2//'`\n    bowtie2 \\\n        -p \"1\" \\\n        -x $INDEX \\\n         \\\n        -1 \"test_minigut_sample2.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut_sample2.phix_removed.unmapped_2.fastq.gz\" \\\n        2> \"SPAdes-test_minigut_sample2-test_minigut_sample2.bowtie2.log\" |         samtools view -@ \"1\" -bS |         samtools sort -@ \"1\" -o \"SPAdes-test_minigut_sample2-test_minigut_sample2.bam\"\n    samtools index \"SPAdes-test_minigut_sample2-test_minigut_sample2.bam\"\n\n    if [ SPAdes-test_minigut_sample2-test_minigut_sample2 = \"SPAdes-test_minigut_sample2-test_minigut_sample2\" ] ; then\n        mv \"SPAdes-test_minigut_sample2-test_minigut_sample2.bowtie2.log\" \"SPAdes-test_minigut_sample2.bowtie2.log\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_ALIGN\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n        samtools: $(echo $(samtools --version 2>&1) | sed 's/^.*samtools //; s/Using.*$//')\n        pigz: $( pigz --version 2>&1 | sed 's/pigz //g' )\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 2133.044
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.1.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 5085.18
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.2.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 470.452
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.3.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 49.589
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.4.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 470.447
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.1.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 5085.18
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.2.bt2",
                        "path": "/0b/d0aed3bcaf44180c12d5ac0a7ed1bb/",
                        "sizeInBytes": 470.452
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_1.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1533.274
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_2.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1725.571
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "path": "/0e/af902dd643f65055d1d1a4cdc03eec/",
                        "sizeInBytes": 2133.044
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2-test_minigut_sample2.bam",
                        "path": "/0e/af902dd643f65055d1d1a4cdc03eec/",
                        "sizeInBytes": 3820.454
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2-test_minigut_sample2.bam.bai",
                        "path": "/0e/af902dd643f65055d1d1a4cdc03eec/",
                        "sizeInBytes": 416.808
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2.bowtie2.log",
                        "path": "/0e/af902dd643f65055d1d1a4cdc03eec/",
                        "sizeInBytes": 0.6
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/0e/af902dd643f65055d1d1a4cdc03eec/",
                        "sizeInBytes": 0.116
                    }
                ],
                "avgCPU": 84.1,
                "bytesRead": 44007.976,
                "bytesWritten": 28899.426,
                "inputFilesBytes": 17023.189,
                "outputFilesBytes": 6371.022,
                "memory": 65974.272,
                "runtimeInSeconds": 13.0,
                "readBytes": 44007976.0,
                "writtenBytes": 28899426.0,
                "memoryInBytes": 65974272.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                "id": "35",
                "type": "compute",
                "command": "INDEX=`find -L ./ -name \"*.rev.1.bt2l\" -o -name \"*.rev.1.bt2\" | sed 's/.rev.1.bt2l//' | sed 's/.rev.1.bt2//'`\n    bowtie2 \\\n        -p \"1\" \\\n        -x $INDEX \\\n         \\\n        -1 \"test_minigut_sample2.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut_sample2.phix_removed.unmapped_2.fastq.gz\" \\\n        2> \"MEGAHIT-test_minigut_sample2-test_minigut_sample2.bowtie2.log\" |         samtools view -@ \"1\" -bS |         samtools sort -@ \"1\" -o \"MEGAHIT-test_minigut_sample2-test_minigut_sample2.bam\"\n    samtools index \"MEGAHIT-test_minigut_sample2-test_minigut_sample2.bam\"\n\n    if [ MEGAHIT-test_minigut_sample2-test_minigut_sample2 = \"MEGAHIT-test_minigut_sample2-test_minigut_sample2\" ] ; then\n        mv \"MEGAHIT-test_minigut_sample2-test_minigut_sample2.bowtie2.log\" \"MEGAHIT-test_minigut_sample2.bowtie2.log\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_ALIGN\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n        samtools: $(echo $(samtools --version 2>&1) | sed 's/^.*samtools //; s/Using.*$//')\n        pigz: $( pigz --version 2>&1 | sed 's/pigz //g' )\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2.contigs.fa",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 681.245
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.1.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 4474.209
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.2.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 157.464
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.3.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 11.816
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.4.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 157.46
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.1.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 4474.209
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.2.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 157.464
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_1.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1533.274
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_2.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1725.571
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut_sample2.contigs.fa",
                        "path": "/d3/c332ef8efac5a782924ca4114ed8cd/",
                        "sizeInBytes": 681.245
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut_sample2-test_minigut_sample2.bam",
                        "path": "/d3/c332ef8efac5a782924ca4114ed8cd/",
                        "sizeInBytes": 3608.114
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut_sample2-test_minigut_sample2.bam.bai",
                        "path": "/d3/c332ef8efac5a782924ca4114ed8cd/",
                        "sizeInBytes": 104.976
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut_sample2.bowtie2.log",
                        "path": "/d3/c332ef8efac5a782924ca4114ed8cd/",
                        "sizeInBytes": 0.599
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/d3/c332ef8efac5a782924ca4114ed8cd/",
                        "sizeInBytes": 0.116
                    }
                ],
                "avgCPU": 82.2,
                "bytesRead": 39144.327,
                "bytesWritten": 25720.419,
                "inputFilesBytes": 13372.711999999998,
                "outputFilesBytes": 4395.05,
                "memory": 59961.344,
                "runtimeInSeconds": 8.0,
                "readBytes": 39144327.0,
                "writtenBytes": 25720419.0,
                "memoryInBytes": 59961344.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                "id": "36",
                "type": "compute",
                "command": "INDEX=`find -L ./ -name \"*.rev.1.bt2l\" -o -name \"*.rev.1.bt2\" | sed 's/.rev.1.bt2l//' | sed 's/.rev.1.bt2//'`\n    bowtie2 \\\n        -p \"1\" \\\n        -x $INDEX \\\n         \\\n        -1 \"test_minigut.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut.phix_removed.unmapped_2.fastq.gz\" \\\n        2> \"MEGAHIT-test_minigut_sample2-test_minigut.bowtie2.log\" |         samtools view -@ \"1\" -bS |         samtools sort -@ \"1\" -o \"MEGAHIT-test_minigut_sample2-test_minigut.bam\"\n    samtools index \"MEGAHIT-test_minigut_sample2-test_minigut.bam\"\n\n    if [ MEGAHIT-test_minigut_sample2-test_minigut = \"MEGAHIT-test_minigut_sample2-test_minigut_sample2\" ] ; then\n        mv \"MEGAHIT-test_minigut_sample2-test_minigut.bowtie2.log\" \"MEGAHIT-test_minigut_sample2.bowtie2.log\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_ALIGN\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n        samtools: $(echo $(samtools --version 2>&1) | sed 's/^.*samtools //; s/Using.*$//')\n        pigz: $( pigz --version 2>&1 | sed 's/pigz //g' )\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2.contigs.fa",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 681.245
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.1.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 4474.209
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.2.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 157.464
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.3.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 11.816
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.4.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 157.46
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.1.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 4474.209
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.2.bt2",
                        "path": "/07/87e9c4d88fd86673023dfb965e4c2c/",
                        "sizeInBytes": 157.464
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_1.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3170.229
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_2.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3239.664
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut_sample2.contigs.fa",
                        "path": "/ad/e50bbcab2d4de0a030682118b95da7/",
                        "sizeInBytes": 681.245
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut_sample2-test_minigut.bam",
                        "path": "/ad/e50bbcab2d4de0a030682118b95da7/",
                        "sizeInBytes": 6956.328
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut_sample2-test_minigut.bam.bai",
                        "path": "/ad/e50bbcab2d4de0a030682118b95da7/",
                        "sizeInBytes": 10.584
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut_sample2-test_minigut.bowtie2.log",
                        "path": "/ad/e50bbcab2d4de0a030682118b95da7/",
                        "sizeInBytes": 0.59
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/ad/e50bbcab2d4de0a030682118b95da7/",
                        "sizeInBytes": 0.116
                    }
                ],
                "avgCPU": 83.0,
                "bytesRead": 60185.325,
                "bytesWritten": 43518.433,
                "inputFilesBytes": 16523.76,
                "outputFilesBytes": 7648.863,
                "memory": 68321.28,
                "runtimeInSeconds": 7.0,
                "readBytes": 60185325.0,
                "writtenBytes": 43518433.0,
                "memoryInBytes": 68321280.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                "id": "37",
                "type": "compute",
                "command": "INDEX=`find -L ./ -name \"*.rev.1.bt2l\" -o -name \"*.rev.1.bt2\" | sed 's/.rev.1.bt2l//' | sed 's/.rev.1.bt2//'`\n    bowtie2 \\\n        -p \"1\" \\\n        -x $INDEX \\\n         \\\n        -1 \"test_minigut_sample2.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut_sample2.phix_removed.unmapped_2.fastq.gz\" \\\n        2> \"SPAdes-test_minigut-test_minigut_sample2.bowtie2.log\" |         samtools view -@ \"1\" -bS |         samtools sort -@ \"1\" -o \"SPAdes-test_minigut-test_minigut_sample2.bam\"\n    samtools index \"SPAdes-test_minigut-test_minigut_sample2.bam\"\n\n    if [ SPAdes-test_minigut-test_minigut_sample2 = \"SPAdes-test_minigut-test_minigut\" ] ; then\n        mv \"SPAdes-test_minigut-test_minigut_sample2.bowtie2.log\" \"SPAdes-test_minigut.bowtie2.log\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_ALIGN\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n        samtools: $(echo $(samtools --version 2>&1) | sed 's/^.*samtools //; s/Using.*$//')\n        pigz: $( pigz --version 2>&1 | sed 's/pigz //g' )\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_scaffolds.fasta",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 1772.115
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.1.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 4779.149
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.2.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 434.68
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.3.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 1.808
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.4.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 434.676
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.1.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 4779.149
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.2.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 434.68
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_1.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1533.274
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_2.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1725.571
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_scaffolds.fasta",
                        "path": "/b3/84346a33369d5dc4712e03db3b5e82/",
                        "sizeInBytes": 1772.115
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut-test_minigut_sample2.bam",
                        "path": "/b3/84346a33369d5dc4712e03db3b5e82/",
                        "sizeInBytes": 3547.19
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut-test_minigut_sample2.bam.bai",
                        "path": "/b3/84346a33369d5dc4712e03db3b5e82/",
                        "sizeInBytes": 3.648
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut-test_minigut_sample2.bowtie2.log",
                        "path": "/b3/84346a33369d5dc4712e03db3b5e82/",
                        "sizeInBytes": 0.59
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/b3/84346a33369d5dc4712e03db3b5e82/",
                        "sizeInBytes": 0.116
                    }
                ],
                "avgCPU": 82.9,
                "bytesRead": 39124.844,
                "bytesWritten": 24493.251,
                "inputFilesBytes": 15895.102,
                "outputFilesBytes": 5323.659000000001,
                "memory": 57696.256,
                "runtimeInSeconds": 4.0,
                "readBytes": 39124844.0,
                "writtenBytes": 24493251.0,
                "memoryInBytes": 57696256.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                "id": "38",
                "type": "compute",
                "command": "INDEX=`find -L ./ -name \"*.rev.1.bt2l\" -o -name \"*.rev.1.bt2\" | sed 's/.rev.1.bt2l//' | sed 's/.rev.1.bt2//'`\n    bowtie2 \\\n        -p \"1\" \\\n        -x $INDEX \\\n         \\\n        -1 \"test_minigut.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut.phix_removed.unmapped_2.fastq.gz\" \\\n        2> \"SPAdes-test_minigut-test_minigut.bowtie2.log\" |         samtools view -@ \"1\" -bS |         samtools sort -@ \"1\" -o \"SPAdes-test_minigut-test_minigut.bam\"\n    samtools index \"SPAdes-test_minigut-test_minigut.bam\"\n\n    if [ SPAdes-test_minigut-test_minigut = \"SPAdes-test_minigut-test_minigut\" ] ; then\n        mv \"SPAdes-test_minigut-test_minigut.bowtie2.log\" \"SPAdes-test_minigut.bowtie2.log\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_ALIGN\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n        samtools: $(echo $(samtools --version 2>&1) | sed 's/^.*samtools //; s/Using.*$//')\n        pigz: $( pigz --version 2>&1 | sed 's/pigz //g' )\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_scaffolds.fasta",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 1772.115
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.1.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 4779.149
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.2.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 434.68
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.3.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 1.808
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.4.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 434.676
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.1.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 4779.149
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.2.bt2",
                        "path": "/ad/7acd00155343da79afb654e1f955b6/",
                        "sizeInBytes": 434.68
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_1.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3170.229
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_2.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3239.664
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_scaffolds.fasta",
                        "path": "/19/a9432a2954b25b99d4bcbc6ae5dbb7/",
                        "sizeInBytes": 1772.115
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut-test_minigut.bam",
                        "path": "/19/a9432a2954b25b99d4bcbc6ae5dbb7/",
                        "sizeInBytes": 6021.434
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut-test_minigut.bam.bai",
                        "path": "/19/a9432a2954b25b99d4bcbc6ae5dbb7/",
                        "sizeInBytes": 7.576
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut.bowtie2.log",
                        "path": "/19/a9432a2954b25b99d4bcbc6ae5dbb7/",
                        "sizeInBytes": 0.599
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/19/a9432a2954b25b99d4bcbc6ae5dbb7/",
                        "sizeInBytes": 0.116
                    }
                ],
                "avgCPU": 90.6,
                "bytesRead": 72782.864,
                "bytesWritten": 55001.997,
                "inputFilesBytes": 19046.15,
                "outputFilesBytes": 7801.84,
                "memory": 76587.008,
                "runtimeInSeconds": 33.0,
                "readBytes": 72782864.0,
                "writtenBytes": 55001997.0,
                "memoryInBytes": 76587008.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                "id": "39",
                "type": "compute",
                "command": "INDEX=`find -L ./ -name \"*.rev.1.bt2l\" -o -name \"*.rev.1.bt2\" | sed 's/.rev.1.bt2l//' | sed 's/.rev.1.bt2//'`\n    bowtie2 \\\n        -p \"1\" \\\n        -x $INDEX \\\n         \\\n        -1 \"test_minigut_sample2.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut_sample2.phix_removed.unmapped_2.fastq.gz\" \\\n        2> \"MEGAHIT-test_minigut-test_minigut_sample2.bowtie2.log\" |         samtools view -@ \"1\" -bS |         samtools sort -@ \"1\" -o \"MEGAHIT-test_minigut-test_minigut_sample2.bam\"\n    samtools index \"MEGAHIT-test_minigut-test_minigut_sample2.bam\"\n\n    if [ MEGAHIT-test_minigut-test_minigut_sample2 = \"MEGAHIT-test_minigut-test_minigut\" ] ; then\n        mv \"MEGAHIT-test_minigut-test_minigut_sample2.bowtie2.log\" \"MEGAHIT-test_minigut.bowtie2.log\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_ALIGN\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n        samtools: $(echo $(samtools --version 2>&1) | sed 's/^.*samtools //; s/Using.*$//')\n        pigz: $( pigz --version 2>&1 | sed 's/pigz //g' )\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut.contigs.fa",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 1749.885
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.1.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 4788.734
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.2.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 434.788
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.3.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 2.456
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.4.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 434.78
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.1.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 4788.734
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.2.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 434.788
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_1.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1533.274
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.phix_removed.unmapped_2.fastq.gz",
                        "path": "/ea/1e72e1b1377c3d02c04de57959f90c/",
                        "sizeInBytes": 1725.571
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut.contigs.fa",
                        "path": "/01/6d18a168dd7f411df28f1132ebbd09/",
                        "sizeInBytes": 1749.885
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut-test_minigut_sample2.bam",
                        "path": "/01/6d18a168dd7f411df28f1132ebbd09/",
                        "sizeInBytes": 3548.578
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut-test_minigut_sample2.bam.bai",
                        "path": "/01/6d18a168dd7f411df28f1132ebbd09/",
                        "sizeInBytes": 7.816
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut-test_minigut_sample2.bowtie2.log",
                        "path": "/01/6d18a168dd7f411df28f1132ebbd09/",
                        "sizeInBytes": 0.59
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/01/6d18a168dd7f411df28f1132ebbd09/",
                        "sizeInBytes": 0.116
                    }
                ],
                "avgCPU": 84.2,
                "bytesRead": 39149.584,
                "bytesWritten": 24494.176,
                "inputFilesBytes": 15893.01,
                "outputFilesBytes": 5306.985,
                "memory": 58449.92,
                "runtimeInSeconds": 5.0,
                "readBytes": 39149584.0,
                "writtenBytes": 24494176.0,
                "memoryInBytes": 58449920.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                "id": "40",
                "type": "compute",
                "command": "INDEX=`find -L ./ -name \"*.rev.1.bt2l\" -o -name \"*.rev.1.bt2\" | sed 's/.rev.1.bt2l//' | sed 's/.rev.1.bt2//'`\n    bowtie2 \\\n        -p \"1\" \\\n        -x $INDEX \\\n         \\\n        -1 \"test_minigut.phix_removed.unmapped_1.fastq.gz\" -2 \"test_minigut.phix_removed.unmapped_2.fastq.gz\" \\\n        2> \"MEGAHIT-test_minigut-test_minigut.bowtie2.log\" |         samtools view -@ \"1\" -bS |         samtools sort -@ \"1\" -o \"MEGAHIT-test_minigut-test_minigut.bam\"\n    samtools index \"MEGAHIT-test_minigut-test_minigut.bam\"\n\n    if [ MEGAHIT-test_minigut-test_minigut = \"MEGAHIT-test_minigut-test_minigut\" ] ; then\n        mv \"MEGAHIT-test_minigut-test_minigut.bowtie2.log\" \"MEGAHIT-test_minigut.bowtie2.log\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING_PREPARATION:BOWTIE2_ASSEMBLY_ALIGN\":\n        bowtie2: $(echo $(bowtie2 --version 2>&1) | sed 's/^.*bowtie2-align-s version //; s/ .*$//')\n        samtools: $(echo $(samtools --version 2>&1) | sed 's/^.*samtools //; s/Using.*$//')\n        pigz: $( pigz --version 2>&1 | sed 's/pigz //g' )\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_BUILD",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut.contigs.fa",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 1749.885
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.1.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 4788.734
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.2.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 434.788
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.3.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 2.456
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.4.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 434.78
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.1.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 4788.734
                    },
                    {
                        "link": "input",
                        "name": "bt2_index_base.rev.2.bt2",
                        "path": "/0b/730a0afd8010f3ed92e6b9e60d60e7/",
                        "sizeInBytes": 434.788
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_1.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3170.229
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.phix_removed.unmapped_2.fastq.gz",
                        "path": "/38/3e15417f276043c818951567f10ef3/",
                        "sizeInBytes": 3239.664
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut.contigs.fa",
                        "path": "/34/adfd77975be3d0c5eaa06394c1187e/",
                        "sizeInBytes": 1749.885
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut-test_minigut.bam",
                        "path": "/34/adfd77975be3d0c5eaa06394c1187e/",
                        "sizeInBytes": 6011.051
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut-test_minigut.bam.bai",
                        "path": "/34/adfd77975be3d0c5eaa06394c1187e/",
                        "sizeInBytes": 22.752
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut.bowtie2.log",
                        "path": "/34/adfd77975be3d0c5eaa06394c1187e/",
                        "sizeInBytes": 0.6
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/34/adfd77975be3d0c5eaa06394c1187e/",
                        "sizeInBytes": 0.116
                    }
                ],
                "avgCPU": 90.7,
                "bytesRead": 70026.619,
                "bytesWritten": 52232.948,
                "inputFilesBytes": 19044.058,
                "outputFilesBytes": 7784.404000000001,
                "memory": 77393.92,
                "runtimeInSeconds": 34.0,
                "readBytes": 70026619.0,
                "writtenBytes": 52232948.0,
                "memoryInBytes": 77393920.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                "id": "44",
                "type": "compute",
                "command": "export OMP_NUM_THREADS=1\n\n    jgi_summarize_bam_contig_depths \\\n        --outputDepth MEGAHIT-test_minigut-depth.txt \\\n         \\\n        MEGAHIT-test_minigut-test_minigut_sample2.bam MEGAHIT-test_minigut-test_minigut.bam\n\n    bgzip --threads 1 MEGAHIT-test_minigut-depth.txt\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS\":\n        metabat2: $( metabat2 --help 2>&1 | head -n 2 | tail -n 1| sed 's/.*\\:\\([0-9]*\\.[0-9]*\\).*/\\1/' )\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut-test_minigut_sample2.bam",
                        "path": "/01/6d18a168dd7f411df28f1132ebbd09/",
                        "sizeInBytes": 3548.578
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut-test_minigut.bam",
                        "path": "/34/adfd77975be3d0c5eaa06394c1187e/",
                        "sizeInBytes": 6011.051
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut-test_minigut_sample2.bam.bai",
                        "path": "/01/6d18a168dd7f411df28f1132ebbd09/",
                        "sizeInBytes": 7.816
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut-test_minigut.bam.bai",
                        "path": "/34/adfd77975be3d0c5eaa06394c1187e/",
                        "sizeInBytes": 22.752
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut-depth.txt.gz",
                        "path": "/f6/6a47e0524654d82be0e49d00c99f57/",
                        "sizeInBytes": 5.294
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/f6/6a47e0524654d82be0e49d00c99f57/",
                        "sizeInBytes": 0.082
                    }
                ],
                "avgCPU": 75.0,
                "bytesRead": 9645.095,
                "bytesWritten": 19.589,
                "inputFilesBytes": 9590.197000000002,
                "outputFilesBytes": 5.3759999999999994,
                "memory": 2883.584,
                "runtimeInSeconds": 1.0,
                "readBytes": 9645095.0,
                "writtenBytes": 19589.0,
                "memoryInBytes": 2883584.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                "id": "42",
                "type": "compute",
                "command": "export OMP_NUM_THREADS=1\n\n    jgi_summarize_bam_contig_depths \\\n        --outputDepth MEGAHIT-test_minigut_sample2-depth.txt \\\n         \\\n        MEGAHIT-test_minigut_sample2-test_minigut_sample2.bam MEGAHIT-test_minigut_sample2-test_minigut.bam\n\n    bgzip --threads 1 MEGAHIT-test_minigut_sample2-depth.txt\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS\":\n        metabat2: $( metabat2 --help 2>&1 | head -n 2 | tail -n 1| sed 's/.*\\:\\([0-9]*\\.[0-9]*\\).*/\\1/' )\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2-test_minigut_sample2.bam",
                        "path": "/d3/c332ef8efac5a782924ca4114ed8cd/",
                        "sizeInBytes": 3608.114
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2-test_minigut.bam",
                        "path": "/ad/e50bbcab2d4de0a030682118b95da7/",
                        "sizeInBytes": 6956.328
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2-test_minigut_sample2.bam.bai",
                        "path": "/d3/c332ef8efac5a782924ca4114ed8cd/",
                        "sizeInBytes": 104.976
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2-test_minigut.bam.bai",
                        "path": "/ad/e50bbcab2d4de0a030682118b95da7/",
                        "sizeInBytes": 10.584
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut_sample2-depth.txt.gz",
                        "path": "/2e/a229c3916a098bd7377027fedb4d42/",
                        "sizeInBytes": 18.819
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/2e/a229c3916a098bd7377027fedb4d42/",
                        "sizeInBytes": 0.082
                    }
                ],
                "avgCPU": 89.8,
                "bytesRead": 10692.143,
                "bytesWritten": 75.355,
                "inputFilesBytes": 10680.002000000002,
                "outputFilesBytes": 18.901,
                "memory": 15638.528,
                "runtimeInSeconds": 3.0,
                "readBytes": 10692143.0,
                "writtenBytes": 75355.0,
                "memoryInBytes": 15638528.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                "id": "43",
                "type": "compute",
                "command": "export OMP_NUM_THREADS=1\n\n    jgi_summarize_bam_contig_depths \\\n        --outputDepth SPAdes-test_minigut-depth.txt \\\n         \\\n        SPAdes-test_minigut-test_minigut_sample2.bam SPAdes-test_minigut-test_minigut.bam\n\n    bgzip --threads 1 SPAdes-test_minigut-depth.txt\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS\":\n        metabat2: $( metabat2 --help 2>&1 | head -n 2 | tail -n 1| sed 's/.*\\:\\([0-9]*\\.[0-9]*\\).*/\\1/' )\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut-test_minigut_sample2.bam",
                        "path": "/b3/84346a33369d5dc4712e03db3b5e82/",
                        "sizeInBytes": 3547.19
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut-test_minigut.bam",
                        "path": "/19/a9432a2954b25b99d4bcbc6ae5dbb7/",
                        "sizeInBytes": 6021.434
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut-test_minigut_sample2.bam.bai",
                        "path": "/b3/84346a33369d5dc4712e03db3b5e82/",
                        "sizeInBytes": 3.648
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut-test_minigut.bam.bai",
                        "path": "/19/a9432a2954b25b99d4bcbc6ae5dbb7/",
                        "sizeInBytes": 7.576
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut-depth.txt.gz",
                        "path": "/4d/44326243720ca4a7cc916be905b3c4/",
                        "sizeInBytes": 2.127
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/4d/44326243720ca4a7cc916be905b3c4/",
                        "sizeInBytes": 0.082
                    }
                ],
                "avgCPU": 83.4,
                "bytesRead": 9646.788,
                "bytesWritten": 9.117,
                "inputFilesBytes": 9579.847999999998,
                "outputFilesBytes": 2.2089999999999996,
                "memory": 15355.904,
                "runtimeInSeconds": 1.0,
                "readBytes": 9646788.0,
                "writtenBytes": 9117.0,
                "memoryInBytes": 15355904.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                "id": "41",
                "type": "compute",
                "command": "export OMP_NUM_THREADS=1\n\n    jgi_summarize_bam_contig_depths \\\n        --outputDepth SPAdes-test_minigut_sample2-depth.txt \\\n         \\\n        SPAdes-test_minigut_sample2-test_minigut.bam SPAdes-test_minigut_sample2-test_minigut_sample2.bam\n\n    bgzip --threads 1 SPAdes-test_minigut_sample2-depth.txt\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS\":\n        metabat2: $( metabat2 --help 2>&1 | head -n 2 | tail -n 1| sed 's/.*\\:\\([0-9]*\\.[0-9]*\\).*/\\1/' )\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2-test_minigut.bam",
                        "path": "/e5/0b51f7ab520a9b0717d009ec567a92/",
                        "sizeInBytes": 7011.332
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2-test_minigut_sample2.bam",
                        "path": "/0e/af902dd643f65055d1d1a4cdc03eec/",
                        "sizeInBytes": 3820.454
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2-test_minigut.bam.bai",
                        "path": "/e5/0b51f7ab520a9b0717d009ec567a92/",
                        "sizeInBytes": 42.12
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2-test_minigut_sample2.bam.bai",
                        "path": "/0e/af902dd643f65055d1d1a4cdc03eec/",
                        "sizeInBytes": 416.808
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2-depth.txt.gz",
                        "path": "/79/03b1ed263b1ee1ec46fe396818f239/",
                        "sizeInBytes": 71.343
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/79/03b1ed263b1ee1ec46fe396818f239/",
                        "sizeInBytes": 0.082
                    }
                ],
                "avgCPU": 92.3,
                "bytesRead": 11236.182,
                "bytesWritten": 404.597,
                "inputFilesBytes": 11290.714,
                "outputFilesBytes": 71.425,
                "memory": 16302.08,
                "runtimeInSeconds": 6.0,
                "readBytes": 11236182.0,
                "writtenBytes": 404597.0,
                "memoryInBytes": 16302080.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                "id": "46",
                "type": "compute",
                "command": "gunzip -f MEGAHIT-test_minigut-depth.txt.gz\n    bioawk -t '{ { if (NR > 1) { { print $1, $3 } } } }' MEGAHIT-test_minigut-depth.txt > test_minigut_mb2_depth.txt\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:CONVERT_DEPTHS\":\n        bioawk: $(bioawk --version | cut -f 3 -d ' ' )\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut.contigs.fa",
                        "path": "/01/6d18a168dd7f411df28f1132ebbd09/",
                        "sizeInBytes": 1749.885
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut-depth.txt.gz",
                        "path": "/f6/6a47e0524654d82be0e49d00c99f57/",
                        "sizeInBytes": 5.294
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut.contigs.fa",
                        "path": "/5d/993375e765ff00387f46f25c0cf79a/",
                        "sizeInBytes": 1749.885
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_mb2_depth.txt",
                        "path": "/5d/993375e765ff00387f46f25c0cf79a/",
                        "sizeInBytes": 4.486
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/5d/993375e765ff00387f46f25c0cf79a/",
                        "sizeInBytes": 0.062
                    }
                ],
                "avgCPU": 33.8,
                "bytesRead": 61.859,
                "bytesWritten": 17.43,
                "inputFilesBytes": 1755.179,
                "outputFilesBytes": 1754.433,
                "memory": 2977.792,
                "runtimeInSeconds": 0.0,
                "readBytes": 61859.0,
                "writtenBytes": 17430.0,
                "memoryInBytes": 2977792.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                "id": "45",
                "type": "compute",
                "command": "gzip -d -f MEGAHIT-test_minigut-depth.txt.gz\n\n    metabat2 \\\n        -m 1500 --unbinned --seed 1 \\\n        -i MEGAHIT-test_minigut.contigs.fa \\\n        -a MEGAHIT-test_minigut-depth.txt \\\n        -t 1 \\\n        --saveCls \\\n        -o metabat2/MEGAHIT-MetaBAT2-test_minigut\n\n    mv metabat2/MEGAHIT-MetaBAT2-test_minigut MEGAHIT-MetaBAT2-test_minigut.tsv\n    mv metabat2 bins\n\n    gzip MEGAHIT-MetaBAT2-test_minigut.tsv\n    find ./bins/ -name \"*.fa\" -type f | xargs -t -n 1 bgzip -@ 1\n    find ./bins/ -name \"*[lowDepth,tooShort,unbinned].fa.gz\" -type f -exec mv {} . \\;\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:METABAT2_METABAT2\":\n        metabat2: $( metabat2 --help 2>&1 | head -n 2 | tail -n 1| sed 's/.*\\:\\([0-9]*\\.[0-9]*\\).*/\\1/' )\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut.contigs.fa",
                        "path": "/01/6d18a168dd7f411df28f1132ebbd09/",
                        "sizeInBytes": 1749.885
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut-depth.txt.gz",
                        "path": "/f6/6a47e0524654d82be0e49d00c99f57/",
                        "sizeInBytes": 5.294
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.tooShort.fa.gz",
                        "path": "/f7/386b0dd3ad61e1c24197838c86dc85/",
                        "sizeInBytes": 9.976
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.lowDepth.fa.gz",
                        "path": "/f7/386b0dd3ad61e1c24197838c86dc85/",
                        "sizeInBytes": 0.028
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.fa.gz",
                        "path": "/f7/386b0dd3ad61e1c24197838c86dc85/",
                        "sizeInBytes": 53.91
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.tsv.gz",
                        "path": "/f7/386b0dd3ad61e1c24197838c86dc85/",
                        "sizeInBytes": 0.542
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.fa.gz",
                        "path": "/386b0dd3ad61e1c24197838c86dc85/bins/",
                        "sizeInBytes": 257.814
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.fa.gz",
                        "path": "/386b0dd3ad61e1c24197838c86dc85/bins/",
                        "sizeInBytes": 230.503
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/f7/386b0dd3ad61e1c24197838c86dc85/",
                        "sizeInBytes": 0.063
                    }
                ],
                "avgCPU": 55.5,
                "bytesRead": 3708.508,
                "bytesWritten": 2340.403,
                "inputFilesBytes": 1755.179,
                "outputFilesBytes": 552.836,
                "memory": 3727.36,
                "runtimeInSeconds": 1.0,
                "readBytes": 3708508.0,
                "writtenBytes": 2340403.0,
                "memoryInBytes": 3727360.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                "id": "47",
                "type": "compute",
                "command": "gunzip -f MEGAHIT-test_minigut_sample2-depth.txt.gz\n    bioawk -t '{ { if (NR > 1) { { print $1, $3 } } } }' MEGAHIT-test_minigut_sample2-depth.txt > test_minigut_sample2_mb2_depth.txt\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:CONVERT_DEPTHS\":\n        bioawk: $(bioawk --version | cut -f 3 -d ' ' )\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2.contigs.fa",
                        "path": "/ad/e50bbcab2d4de0a030682118b95da7/",
                        "sizeInBytes": 681.245
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2-depth.txt.gz",
                        "path": "/2e/a229c3916a098bd7377027fedb4d42/",
                        "sizeInBytes": 18.819
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-test_minigut_sample2.contigs.fa",
                        "path": "/d5/f40841a76271322e688e636a9f56be/",
                        "sizeInBytes": 681.245
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2_mb2_depth.txt",
                        "path": "/d5/f40841a76271322e688e636a9f56be/",
                        "sizeInBytes": 22.295
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/d5/f40841a76271322e688e636a9f56be/",
                        "sizeInBytes": 0.062
                    }
                ],
                "avgCPU": 32.0,
                "bytesRead": 117.619,
                "bytesWritten": 77.437,
                "inputFilesBytes": 700.064,
                "outputFilesBytes": 703.602,
                "memory": 2973.696,
                "runtimeInSeconds": 0.0,
                "readBytes": 117619.0,
                "writtenBytes": 77437.0,
                "memoryInBytes": 2973696.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                "id": "48",
                "type": "compute",
                "command": "gzip -d -f MEGAHIT-test_minigut_sample2-depth.txt.gz\n\n    metabat2 \\\n        -m 1500 --unbinned --seed 1 \\\n        -i MEGAHIT-test_minigut_sample2.contigs.fa \\\n        -a MEGAHIT-test_minigut_sample2-depth.txt \\\n        -t 1 \\\n        --saveCls \\\n        -o metabat2/MEGAHIT-MetaBAT2-test_minigut_sample2\n\n    mv metabat2/MEGAHIT-MetaBAT2-test_minigut_sample2 MEGAHIT-MetaBAT2-test_minigut_sample2.tsv\n    mv metabat2 bins\n\n    gzip MEGAHIT-MetaBAT2-test_minigut_sample2.tsv\n    find ./bins/ -name \"*.fa\" -type f | xargs -t -n 1 bgzip -@ 1\n    find ./bins/ -name \"*[lowDepth,tooShort,unbinned].fa.gz\" -type f -exec mv {} . \\;\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:METABAT2_METABAT2\":\n        metabat2: $( metabat2 --help 2>&1 | head -n 2 | tail -n 1| sed 's/.*\\:\\([0-9]*\\.[0-9]*\\).*/\\1/' )\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2.contigs.fa",
                        "path": "/ad/e50bbcab2d4de0a030682118b95da7/",
                        "sizeInBytes": 681.245
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2-depth.txt.gz",
                        "path": "/2e/a229c3916a098bd7377027fedb4d42/",
                        "sizeInBytes": 18.819
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.tooShort.fa.gz",
                        "path": "/68/07f3ae0f9899f845f569a1c6edf87d/",
                        "sizeInBytes": 188.338
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.lowDepth.fa.gz",
                        "path": "/68/07f3ae0f9899f845f569a1c6edf87d/",
                        "sizeInBytes": 0.028
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.fa.gz",
                        "path": "/68/07f3ae0f9899f845f569a1c6edf87d/",
                        "sizeInBytes": 17.296
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.tsv.gz",
                        "path": "/68/07f3ae0f9899f845f569a1c6edf87d/",
                        "sizeInBytes": 0.13
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/68/07f3ae0f9899f845f569a1c6edf87d/",
                        "sizeInBytes": 0.063
                    }
                ],
                "avgCPU": 32.1,
                "bytesRead": 1633.12,
                "bytesWritten": 916.933,
                "inputFilesBytes": 700.064,
                "outputFilesBytes": 205.85499999999996,
                "memory": 2895.872,
                "runtimeInSeconds": 1.0,
                "readBytes": 1633120.0,
                "writtenBytes": 916933.0,
                "memoryInBytes": 2895872.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                "id": "50",
                "type": "compute",
                "command": "gunzip -f SPAdes-test_minigut-depth.txt.gz\n    bioawk -t '{ { if (NR > 1) { { print $1, $3 } } } }' SPAdes-test_minigut-depth.txt > test_minigut_mb2_depth.txt\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:CONVERT_DEPTHS\":\n        bioawk: $(bioawk --version | cut -f 3 -d ' ' )\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_scaffolds.fasta",
                        "path": "/19/a9432a2954b25b99d4bcbc6ae5dbb7/",
                        "sizeInBytes": 1772.115
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut-depth.txt.gz",
                        "path": "/4d/44326243720ca4a7cc916be905b3c4/",
                        "sizeInBytes": 2.127
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_scaffolds.fasta",
                        "path": "/ae/89e6186b281453f220f2dac613fb60/",
                        "sizeInBytes": 1772.115
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_mb2_depth.txt",
                        "path": "/ae/89e6186b281453f220f2dac613fb60/",
                        "sizeInBytes": 2.951
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/ae/89e6186b281453f220f2dac613fb60/",
                        "sizeInBytes": 0.062
                    }
                ],
                "avgCPU": 32.9,
                "bytesRead": 51.394,
                "bytesWritten": 8.603,
                "inputFilesBytes": 1774.242,
                "outputFilesBytes": 1775.128,
                "memory": 2969.6,
                "runtimeInSeconds": 0.0,
                "readBytes": 51394.0,
                "writtenBytes": 8603.0,
                "memoryInBytes": 2969600.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                "id": "49",
                "type": "compute",
                "command": "gzip -d -f SPAdes-test_minigut-depth.txt.gz\n\n    metabat2 \\\n        -m 1500 --unbinned --seed 1 \\\n        -i SPAdes-test_minigut_scaffolds.fasta \\\n        -a SPAdes-test_minigut-depth.txt \\\n        -t 1 \\\n        --saveCls \\\n        -o metabat2/SPAdes-MetaBAT2-test_minigut\n\n    mv metabat2/SPAdes-MetaBAT2-test_minigut SPAdes-MetaBAT2-test_minigut.tsv\n    mv metabat2 bins\n\n    gzip SPAdes-MetaBAT2-test_minigut.tsv\n    find ./bins/ -name \"*.fa\" -type f | xargs -t -n 1 bgzip -@ 1\n    find ./bins/ -name \"*[lowDepth,tooShort,unbinned].fa.gz\" -type f -exec mv {} . \\;\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:METABAT2_METABAT2\":\n        metabat2: $( metabat2 --help 2>&1 | head -n 2 | tail -n 1| sed 's/.*\\:\\([0-9]*\\.[0-9]*\\).*/\\1/' )\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_scaffolds.fasta",
                        "path": "/19/a9432a2954b25b99d4bcbc6ae5dbb7/",
                        "sizeInBytes": 1772.115
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut-depth.txt.gz",
                        "path": "/4d/44326243720ca4a7cc916be905b3c4/",
                        "sizeInBytes": 2.127
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.tooShort.fa.gz",
                        "path": "/2a/77fb54be4836e684dc38834c52daa3/",
                        "sizeInBytes": 3.588
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.lowDepth.fa.gz",
                        "path": "/2a/77fb54be4836e684dc38834c52daa3/",
                        "sizeInBytes": 0.028
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.fa.gz",
                        "path": "/2a/77fb54be4836e684dc38834c52daa3/",
                        "sizeInBytes": 48.366
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.tsv.gz",
                        "path": "/2a/77fb54be4836e684dc38834c52daa3/",
                        "sizeInBytes": 0.46
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.fa.gz",
                        "path": "/77fb54be4836e684dc38834c52daa3/bins/",
                        "sizeInBytes": 233.589
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.fa.gz",
                        "path": "/77fb54be4836e684dc38834c52daa3/bins/",
                        "sizeInBytes": 267.493
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/2a/77fb54be4836e684dc38834c52daa3/",
                        "sizeInBytes": 0.063
                    }
                ],
                "avgCPU": 53.8,
                "bytesRead": 3703.055,
                "bytesWritten": 2334.094,
                "inputFilesBytes": 1774.242,
                "outputFilesBytes": 553.587,
                "memory": 8912.896,
                "runtimeInSeconds": 1.0,
                "readBytes": 3703055.0,
                "writtenBytes": 2334094.0,
                "memoryInBytes": 8912896.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                "id": "52",
                "type": "compute",
                "command": "gunzip -f SPAdes-test_minigut_sample2-depth.txt.gz\n    bioawk -t '{ { if (NR > 1) { { print $1, $3 } } } }' SPAdes-test_minigut_sample2-depth.txt > test_minigut_sample2_mb2_depth.txt\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:CONVERT_DEPTHS\":\n        bioawk: $(bioawk --version | cut -f 3 -d ' ' )\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "path": "/0e/af902dd643f65055d1d1a4cdc03eec/",
                        "sizeInBytes": 2133.044
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2-depth.txt.gz",
                        "path": "/79/03b1ed263b1ee1ec46fe396818f239/",
                        "sizeInBytes": 71.343
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "path": "/3e/a086d77b79c2823ca55898ab257d54/",
                        "sizeInBytes": 2133.044
                    },
                    {
                        "link": "output",
                        "name": "test_minigut_sample2_mb2_depth.txt",
                        "path": "/3e/a086d77b79c2823ca55898ab257d54/",
                        "sizeInBytes": 212.466
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/3e/a086d77b79c2823ca55898ab257d54/",
                        "sizeInBytes": 0.062
                    }
                ],
                "avgCPU": 106.7,
                "bytesRead": 446.824,
                "bytesWritten": 544.292,
                "inputFilesBytes": 2204.3869999999997,
                "outputFilesBytes": 2345.5719999999997,
                "memory": 2891.776,
                "runtimeInSeconds": 0.0,
                "readBytes": 446824.0,
                "writtenBytes": 544292.0,
                "memoryInBytes": 2891776.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                "id": "51",
                "type": "compute",
                "command": "gzip -d -f SPAdes-test_minigut_sample2-depth.txt.gz\n\n    metabat2 \\\n        -m 1500 --unbinned --seed 1 \\\n        -i SPAdes-test_minigut_sample2_scaffolds.fasta \\\n        -a SPAdes-test_minigut_sample2-depth.txt \\\n        -t 1 \\\n        --saveCls \\\n        -o metabat2/SPAdes-MetaBAT2-test_minigut_sample2\n\n    mv metabat2/SPAdes-MetaBAT2-test_minigut_sample2 SPAdes-MetaBAT2-test_minigut_sample2.tsv\n    mv metabat2 bins\n\n    gzip SPAdes-MetaBAT2-test_minigut_sample2.tsv\n    find ./bins/ -name \"*.fa\" -type f | xargs -t -n 1 bgzip -@ 1\n    find ./bins/ -name \"*[lowDepth,tooShort,unbinned].fa.gz\" -type f -exec mv {} . \\;\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:METABAT2_METABAT2\":\n        metabat2: $( metabat2 --help 2>&1 | head -n 2 | tail -n 1| sed 's/.*\\:\\([0-9]*\\.[0-9]*\\).*/\\1/' )\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "path": "/0e/af902dd643f65055d1d1a4cdc03eec/",
                        "sizeInBytes": 2133.044
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2-depth.txt.gz",
                        "path": "/79/03b1ed263b1ee1ec46fe396818f239/",
                        "sizeInBytes": 71.343
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.tooShort.fa.gz",
                        "path": "/b9/bf3c2ffa52aa3f58e4f64637bde899/",
                        "sizeInBytes": 574.568
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.lowDepth.fa.gz",
                        "path": "/b9/bf3c2ffa52aa3f58e4f64637bde899/",
                        "sizeInBytes": 0.028
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.fa.gz",
                        "path": "/b9/bf3c2ffa52aa3f58e4f64637bde899/",
                        "sizeInBytes": 87.108
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.tsv.gz",
                        "path": "/b9/bf3c2ffa52aa3f58e4f64637bde899/",
                        "sizeInBytes": 1.757
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/b9/bf3c2ffa52aa3f58e4f64637bde899/",
                        "sizeInBytes": 0.063
                    }
                ],
                "avgCPU": 69.6,
                "bytesRead": 5457.969,
                "bytesWritten": 3136.196,
                "inputFilesBytes": 2204.3869999999997,
                "outputFilesBytes": 663.5239999999999,
                "memory": 2891.776,
                "runtimeInSeconds": 0.0,
                "readBytes": 5457969.0,
                "writtenBytes": 3136196.0,
                "memoryInBytes": 2891776.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                "id": "53",
                "type": "compute",
                "command": "mkdir input/ && mv MEGAHIT-test_minigut.contigs.fa input/\n    run_MaxBin.pl \\\n        -contig input/MEGAHIT-test_minigut.contigs.fa \\\n        -abund test_minigut_mb2_depth.txt \\\n        -thread 1 \\\n         \\\n        -out MEGAHIT-MaxBin2-test_minigut\n\n    gzip *.fasta *.noclass *.tooshort *log *.marker\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAXBIN2\":\n        maxbin2: $( run_MaxBin.pl -v | head -n 1 | sed 's/MaxBin //' )\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT",
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut.contigs.fa",
                        "path": "/5d/993375e765ff00387f46f25c0cf79a/",
                        "sizeInBytes": 1749.885
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_mb2_depth.txt",
                        "path": "/5d/993375e765ff00387f46f25c0cf79a/",
                        "sizeInBytes": 4.486
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fasta.gz",
                        "path": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/",
                        "sizeInBytes": 275.379
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fasta.gz",
                        "path": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/",
                        "sizeInBytes": 239.713
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.summary",
                        "path": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/",
                        "sizeInBytes": 0.179
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.log.gz",
                        "path": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/",
                        "sizeInBytes": 0.786
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.marker.gz",
                        "path": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/",
                        "sizeInBytes": 0.447
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.noclass.gz",
                        "path": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/",
                        "sizeInBytes": 0.02
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.tooshort.gz",
                        "path": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/",
                        "sizeInBytes": 10.311
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.marker_of_each_bin.tar.gz",
                        "path": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/",
                        "sizeInBytes": 7.336
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/",
                        "sizeInBytes": 0.053
                    }
                ],
                "avgCPU": 81.7,
                "bytesRead": 125360.886,
                "bytesWritten": 6676.392,
                "inputFilesBytes": 1754.371,
                "outputFilesBytes": 534.2239999999999,
                "memory": 47374.336,
                "runtimeInSeconds": 15.0,
                "readBytes": 125360886.0,
                "writtenBytes": 6676392.0,
                "memoryInBytes": 47374336.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                "id": "56",
                "type": "compute",
                "command": "gunzip \\\n        -f \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut.2.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_BINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.CAT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.fa.gz",
                        "path": "/386b0dd3ad61e1c24197838c86dc85/bins/",
                        "sizeInBytes": 230.503
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.fa",
                        "path": "/d1/af5b3f93228497d9441a56a2846bdd/",
                        "sizeInBytes": 739.909
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/d1/af5b3f93228497d9441a56a2846bdd/",
                        "sizeInBytes": 0.055
                    }
                ],
                "avgCPU": 30.7,
                "bytesRead": 326.058,
                "bytesWritten": 740.862,
                "inputFilesBytes": 230.503,
                "outputFilesBytes": 739.9639999999999,
                "memory": 0.0,
                "runtimeInSeconds": 0.046,
                "readBytes": 326058.0,
                "writtenBytes": 740862.0,
                "memoryInBytes": 0.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                "id": "55",
                "type": "compute",
                "command": "gunzip \\\n        -f \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut.1.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_BINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.CAT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.fa.gz",
                        "path": "/386b0dd3ad61e1c24197838c86dc85/bins/",
                        "sizeInBytes": 257.814
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.fa",
                        "path": "/61/cf25917be22c0d7cc036bbb291ff61/",
                        "sizeInBytes": 826.502
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/61/cf25917be22c0d7cc036bbb291ff61/",
                        "sizeInBytes": 0.055
                    }
                ],
                "avgCPU": 53.7,
                "bytesRead": 353.344,
                "bytesWritten": 827.437,
                "inputFilesBytes": 257.814,
                "outputFilesBytes": 826.5569999999999,
                "memory": 2949.12,
                "runtimeInSeconds": 0.079,
                "readBytes": 353344.0,
                "writtenBytes": 827437.0,
                "memoryInBytes": 2949120.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                "id": "54",
                "type": "compute",
                "command": "# save unbinned contigs above thresholds into individual files, dump others in one file\n    split_fasta.py MEGAHIT-MetaBAT2-test_minigut.unbinned.fa.gz 1 2 1500\n\n    gzip *.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:SPLIT_FASTA\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        biopython: 1.7.4\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.fa.gz",
                        "path": "/f7/386b0dd3ad61e1c24197838c86dc85/",
                        "sizeInBytes": 53.91
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.gz",
                        "path": "/9f/2be4bfc6b728578afcd33f072dd30f/",
                        "sizeInBytes": 8.772
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.gz",
                        "path": "/9f/2be4bfc6b728578afcd33f072dd30f/",
                        "sizeInBytes": 5.866
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.pooled.fa.gz",
                        "path": "/9f/2be4bfc6b728578afcd33f072dd30f/",
                        "sizeInBytes": 38.661
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.remaining.fa.gz",
                        "path": "/9f/2be4bfc6b728578afcd33f072dd30f/",
                        "sizeInBytes": 0.02
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/9f/2be4bfc6b728578afcd33f072dd30f/",
                        "sizeInBytes": 0.095
                    }
                ],
                "avgCPU": 27.8,
                "bytesRead": 12173.209,
                "bytesWritten": 227.375,
                "inputFilesBytes": 53.91,
                "outputFilesBytes": 53.414,
                "memory": 69177.344,
                "runtimeInSeconds": 10.0,
                "readBytes": 12173209.0,
                "writtenBytes": 227375.0,
                "memoryInBytes": 69177344.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                "id": "57",
                "type": "compute",
                "command": "mkdir input/ && mv MEGAHIT-test_minigut_sample2.contigs.fa input/\n    run_MaxBin.pl \\\n        -contig input/MEGAHIT-test_minigut_sample2.contigs.fa \\\n        -abund test_minigut_sample2_mb2_depth.txt \\\n        -thread 1 \\\n         \\\n        -out MEGAHIT-MaxBin2-test_minigut_sample2\n\n    gzip *.fasta *.noclass *.tooshort *log *.marker\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAXBIN2\":\n        maxbin2: $( run_MaxBin.pl -v | head -n 1 | sed 's/MaxBin //' )\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT",
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2.contigs.fa",
                        "path": "/d5/f40841a76271322e688e636a9f56be/",
                        "sizeInBytes": 681.245
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2_mb2_depth.txt",
                        "path": "/d5/f40841a76271322e688e636a9f56be/",
                        "sizeInBytes": 22.295
                    }
                ],
                "avgCPU": 0.0,
                "bytesRead": 0.0,
                "bytesWritten": 0.0,
                "inputFilesBytes": 703.54,
                "outputFilesBytes": 0.0,
                "memory": 0.0,
                "runtimeInSeconds": 4.235,
                "readBytes": 0.0,
                "writtenBytes": 0.0,
                "memoryInBytes": 0.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                "id": "58",
                "type": "compute",
                "command": "# save unbinned contigs above thresholds into individual files, dump others in one file\n    split_fasta.py MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.fa.gz 1 2 1500\n\n    gzip *.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:SPLIT_FASTA\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        biopython: 1.7.4\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.fa.gz",
                        "path": "/68/07f3ae0f9899f845f569a1c6edf87d/",
                        "sizeInBytes": 17.296
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.gz",
                        "path": "/ab/a491d97cfd32cab33ae565081f410e/",
                        "sizeInBytes": 2.248
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.gz",
                        "path": "/ab/a491d97cfd32cab33ae565081f410e/",
                        "sizeInBytes": 1.187
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.pooled.fa.gz",
                        "path": "/ab/a491d97cfd32cab33ae565081f410e/",
                        "sizeInBytes": 14.354
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.remaining.fa.gz",
                        "path": "/ab/a491d97cfd32cab33ae565081f410e/",
                        "sizeInBytes": 0.02
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/ab/a491d97cfd32cab33ae565081f410e/",
                        "sizeInBytes": 0.095
                    }
                ],
                "avgCPU": 87.7,
                "bytesRead": 12018.783,
                "bytesWritten": 74.084,
                "inputFilesBytes": 17.296,
                "outputFilesBytes": 17.904,
                "memory": 55529.472,
                "runtimeInSeconds": 2.0,
                "readBytes": 12018783.0,
                "writtenBytes": 74084.0,
                "memoryInBytes": 55529472.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                "id": "59",
                "type": "compute",
                "command": "mkdir input/ && mv SPAdes-test_minigut_scaffolds.fasta input/\n    run_MaxBin.pl \\\n        -contig input/SPAdes-test_minigut_scaffolds.fasta \\\n        -abund test_minigut_mb2_depth.txt \\\n        -thread 1 \\\n         \\\n        -out SPAdes-MaxBin2-test_minigut\n\n    gzip *.fasta *.noclass *.tooshort *log *.marker\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAXBIN2\":\n        maxbin2: $( run_MaxBin.pl -v | head -n 1 | sed 's/MaxBin //' )\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT",
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_scaffolds.fasta",
                        "path": "/ae/89e6186b281453f220f2dac613fb60/",
                        "sizeInBytes": 1772.115
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_mb2_depth.txt",
                        "path": "/ae/89e6186b281453f220f2dac613fb60/",
                        "sizeInBytes": 2.951
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fasta.gz",
                        "path": "/eb/f824a718600d27c276a4b0299ae33d/",
                        "sizeInBytes": 266.445
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fasta.gz",
                        "path": "/eb/f824a718600d27c276a4b0299ae33d/",
                        "sizeInBytes": 255.741
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.summary",
                        "path": "/eb/f824a718600d27c276a4b0299ae33d/",
                        "sizeInBytes": 0.177
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.log.gz",
                        "path": "/eb/f824a718600d27c276a4b0299ae33d/",
                        "sizeInBytes": 0.819
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.marker.gz",
                        "path": "/eb/f824a718600d27c276a4b0299ae33d/",
                        "sizeInBytes": 0.439
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.noclass.gz",
                        "path": "/eb/f824a718600d27c276a4b0299ae33d/",
                        "sizeInBytes": 0.02
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.tooshort.gz",
                        "path": "/eb/f824a718600d27c276a4b0299ae33d/",
                        "sizeInBytes": 3.525
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.marker_of_each_bin.tar.gz",
                        "path": "/eb/f824a718600d27c276a4b0299ae33d/",
                        "sizeInBytes": 7.585
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/eb/f824a718600d27c276a4b0299ae33d/",
                        "sizeInBytes": 0.053
                    }
                ],
                "avgCPU": 87.6,
                "bytesRead": 130938.23,
                "bytesWritten": 6911.819,
                "inputFilesBytes": 1775.066,
                "outputFilesBytes": 534.804,
                "memory": 210087.936,
                "runtimeInSeconds": 14.0,
                "readBytes": 130938230.0,
                "writtenBytes": 6911819.0,
                "memoryInBytes": 210087936.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                "id": "60",
                "type": "compute",
                "command": "# save unbinned contigs above thresholds into individual files, dump others in one file\n    split_fasta.py SPAdes-MetaBAT2-test_minigut.unbinned.fa.gz 1 2 1500\n\n    gzip *.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:SPLIT_FASTA\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        biopython: 1.7.4\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.fa.gz",
                        "path": "/2a/77fb54be4836e684dc38834c52daa3/",
                        "sizeInBytes": 48.366
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.gz",
                        "path": "/5f/2851abe02c0e2835f9e3b09a0b1d62/",
                        "sizeInBytes": 26.43
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.gz",
                        "path": "/5f/2851abe02c0e2835f9e3b09a0b1d62/",
                        "sizeInBytes": 14.921
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.pooled.fa.gz",
                        "path": "/5f/2851abe02c0e2835f9e3b09a0b1d62/",
                        "sizeInBytes": 6.824
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.remaining.fa.gz",
                        "path": "/5f/2851abe02c0e2835f9e3b09a0b1d62/",
                        "sizeInBytes": 0.02
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/5f/2851abe02c0e2835f9e3b09a0b1d62/",
                        "sizeInBytes": 0.095
                    }
                ],
                "avgCPU": 86.0,
                "bytesRead": 12148.648,
                "bytesWritten": 203.237,
                "inputFilesBytes": 48.366,
                "outputFilesBytes": 48.29,
                "memory": 52236.288,
                "runtimeInSeconds": 3.0,
                "readBytes": 12148648.0,
                "writtenBytes": 203237.0,
                "memoryInBytes": 52236288.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                "id": "61",
                "type": "compute",
                "command": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MetaBAT2-test_minigut.1.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_BINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.CAT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.fa.gz",
                        "path": "/77fb54be4836e684dc38834c52daa3/bins/",
                        "sizeInBytes": 233.589
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.fa",
                        "path": "/99/9391bef265fc20cdc627372089b79b/",
                        "sizeInBytes": 749.812
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/99/9391bef265fc20cdc627372089b79b/",
                        "sizeInBytes": 0.055
                    }
                ],
                "avgCPU": 37.7,
                "bytesRead": 329.142,
                "bytesWritten": 750.765,
                "inputFilesBytes": 233.589,
                "outputFilesBytes": 749.867,
                "memory": 0.0,
                "runtimeInSeconds": 0.058,
                "readBytes": 329142.0,
                "writtenBytes": 750765.0,
                "memoryInBytes": 0.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                "id": "62",
                "type": "compute",
                "command": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MetaBAT2-test_minigut.2.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_BINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.CAT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.fa.gz",
                        "path": "/77fb54be4836e684dc38834c52daa3/bins/",
                        "sizeInBytes": 267.493
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.fa",
                        "path": "/2c/dc9657212417f3f1714124a02c7b37/",
                        "sizeInBytes": 857.355
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/2c/dc9657212417f3f1714124a02c7b37/",
                        "sizeInBytes": 0.055
                    }
                ],
                "avgCPU": 56.1,
                "bytesRead": 363.021,
                "bytesWritten": 858.29,
                "inputFilesBytes": 267.493,
                "outputFilesBytes": 857.41,
                "memory": 4497.408,
                "runtimeInSeconds": 0.094,
                "readBytes": 363021.0,
                "writtenBytes": 858290.0,
                "memoryInBytes": 4497408.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                "id": "63",
                "type": "compute",
                "command": "mkdir input/ && mv SPAdes-test_minigut_sample2_scaffolds.fasta input/\n    run_MaxBin.pl \\\n        -contig input/SPAdes-test_minigut_sample2_scaffolds.fasta \\\n        -abund test_minigut_sample2_mb2_depth.txt \\\n        -thread 1 \\\n         \\\n        -out SPAdes-MaxBin2-test_minigut_sample2\n\n    gzip *.fasta *.noclass *.tooshort *log *.marker\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAXBIN2\":\n        maxbin2: $( run_MaxBin.pl -v | head -n 1 | sed 's/MaxBin //' )\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT",
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2_scaffolds.fasta",
                        "path": "/3e/a086d77b79c2823ca55898ab257d54/",
                        "sizeInBytes": 2133.044
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2_mb2_depth.txt",
                        "path": "/3e/a086d77b79c2823ca55898ab257d54/",
                        "sizeInBytes": 212.466
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fasta.gz",
                        "path": "/0d/8e50cc38e226855a80b119d709ff8c/",
                        "sizeInBytes": 53.267
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.summary",
                        "path": "/0d/8e50cc38e226855a80b119d709ff8c/",
                        "sizeInBytes": 0.123
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.log.gz",
                        "path": "/0d/8e50cc38e226855a80b119d709ff8c/",
                        "sizeInBytes": 0.871
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.marker.gz",
                        "path": "/0d/8e50cc38e226855a80b119d709ff8c/",
                        "sizeInBytes": 0.406
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.gz",
                        "path": "/0d/8e50cc38e226855a80b119d709ff8c/",
                        "sizeInBytes": 29.904
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.tooshort.gz",
                        "path": "/0d/8e50cc38e226855a80b119d709ff8c/",
                        "sizeInBytes": 545.159
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.marker_of_each_bin.tar.gz",
                        "path": "/0d/8e50cc38e226855a80b119d709ff8c/",
                        "sizeInBytes": 0.349
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/0d/8e50cc38e226855a80b119d709ff8c/",
                        "sizeInBytes": 0.053
                    }
                ],
                "avgCPU": 89.4,
                "bytesRead": 58179.172,
                "bytesWritten": 3947.867,
                "inputFilesBytes": 2345.5099999999998,
                "outputFilesBytes": 630.1320000000001,
                "memory": 35532.8,
                "runtimeInSeconds": 8.0,
                "readBytes": 58179172.0,
                "writtenBytes": 3947867.0,
                "memoryInBytes": 35532800.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                "id": "64",
                "type": "compute",
                "command": "# save unbinned contigs above thresholds into individual files, dump others in one file\n    split_fasta.py SPAdes-MetaBAT2-test_minigut_sample2.unbinned.fa.gz 1 2 1500\n\n    gzip *.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:SPLIT_FASTA\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        biopython: 1.7.4\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.fa.gz",
                        "path": "/b9/bf3c2ffa52aa3f58e4f64637bde899/",
                        "sizeInBytes": 87.108
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.gz",
                        "path": "/be/a6b6583600ddf490d44a92dfcee45c/",
                        "sizeInBytes": 2.62
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.gz",
                        "path": "/be/a6b6583600ddf490d44a92dfcee45c/",
                        "sizeInBytes": 2.28
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.pooled.fa.gz",
                        "path": "/be/a6b6583600ddf490d44a92dfcee45c/",
                        "sizeInBytes": 79.034
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.remaining.fa.gz",
                        "path": "/be/a6b6583600ddf490d44a92dfcee45c/",
                        "sizeInBytes": 0.02
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/be/a6b6583600ddf490d44a92dfcee45c/",
                        "sizeInBytes": 0.095
                    }
                ],
                "avgCPU": 91.4,
                "bytesRead": 12323.065,
                "bytesWritten": 374.696,
                "inputFilesBytes": 87.108,
                "outputFilesBytes": 84.049,
                "memory": 69259.264,
                "runtimeInSeconds": 4.0,
                "readBytes": 12323065.0,
                "writtenBytes": 374696.0,
                "memoryInBytes": 69259264.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT",
                "id": "65",
                "type": "compute",
                "command": "if [ -n \"MEGAHIT-MaxBin2-test_minigut.001.fasta.gz MEGAHIT-MaxBin2-test_minigut.002.fasta.gz\" ]\n    then\n        for file in MEGAHIT-MaxBin2-test_minigut.001.fasta.gz MEGAHIT-MaxBin2-test_minigut.002.fasta.gz; do\n            [[ ${file} =~ (.*).fasta.gz ]];\n            bin=\"${BASH_REMATCH[1]}\"\n            mv ${file} ${bin}.fa.gz\n        done\n    fi",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAXBIN2"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fasta.gz",
                        "path": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/",
                        "sizeInBytes": 275.379
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fasta.gz",
                        "path": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/",
                        "sizeInBytes": 239.713
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fa.gz",
                        "path": "/f5/1fd9cc6adda86286aa0f375123cfc8/",
                        "sizeInBytes": 275.379
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fa.gz",
                        "path": "/f5/1fd9cc6adda86286aa0f375123cfc8/",
                        "sizeInBytes": 239.713
                    }
                ],
                "avgCPU": 35.0,
                "bytesRead": 59.67,
                "bytesWritten": 0.218,
                "inputFilesBytes": 515.092,
                "outputFilesBytes": 515.092,
                "memory": 0.0,
                "runtimeInSeconds": 0.057,
                "readBytes": 59670.0,
                "writtenBytes": 218.0,
                "memoryInBytes": 0.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                "id": "66",
                "type": "compute",
                "command": "# save unbinned contigs above thresholds into individual files, dump others in one file\n    split_fasta.py MEGAHIT-MaxBin2-test_minigut.noclass.gz 1 2 1500\n\n    gzip *.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:SPLIT_FASTA\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        biopython: 1.7.4\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut.noclass.gz",
                        "path": "/1a/6ec0e46e34a3fe92c99eeb29bf6b00/",
                        "sizeInBytes": 0.02
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.noclass.pooled.fa.gz",
                        "path": "/cf/6ae0e3afea0a1ec59857e2bc7f3f91/",
                        "sizeInBytes": 0.02
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.noclass.remaining.fa.gz",
                        "path": "/cf/6ae0e3afea0a1ec59857e2bc7f3f91/",
                        "sizeInBytes": 0.02
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/cf/6ae0e3afea0a1ec59857e2bc7f3f91/",
                        "sizeInBytes": 0.095
                    }
                ],
                "avgCPU": 91.7,
                "bytesRead": 11945.881,
                "bytesWritten": 0.566,
                "inputFilesBytes": 0.02,
                "outputFilesBytes": 0.135,
                "memory": 59088.896,
                "runtimeInSeconds": 1.0,
                "readBytes": 11945881.0,
                "writtenBytes": 566.0,
                "memoryInBytes": 59088896.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                "id": "67",
                "type": "compute",
                "command": "gunzip \\\n        -f \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_UNBINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.gz",
                        "path": "/9f/2be4bfc6b728578afcd33f072dd30f/",
                        "sizeInBytes": 8.772
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa",
                        "path": "/0f/da507fa0645b75fe52bef79d0cff50/",
                        "sizeInBytes": 27.64
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/0f/da507fa0645b75fe52bef79d0cff50/",
                        "sizeInBytes": 0.057
                    }
                ],
                "avgCPU": 94.1,
                "bytesRead": 104.316,
                "bytesWritten": 28.579,
                "inputFilesBytes": 8.772,
                "outputFilesBytes": 27.697,
                "memory": 0.0,
                "runtimeInSeconds": 0.016,
                "readBytes": 104316.0,
                "writtenBytes": 28579.0,
                "memoryInBytes": 0.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                "id": "68",
                "type": "compute",
                "command": "gunzip \\\n        -f \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_UNBINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.gz",
                        "path": "/9f/2be4bfc6b728578afcd33f072dd30f/",
                        "sizeInBytes": 5.866
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa",
                        "path": "/0c/e5297ab42995f985f9f5e10d0aa650/",
                        "sizeInBytes": 18.168
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/0c/e5297ab42995f985f9f5e10d0aa650/",
                        "sizeInBytes": 0.057
                    }
                ],
                "avgCPU": 64.0,
                "bytesRead": 101.41,
                "bytesWritten": 19.107,
                "inputFilesBytes": 5.866,
                "outputFilesBytes": 18.224999999999998,
                "memory": 2871.296,
                "runtimeInSeconds": 0.035,
                "readBytes": 101410.0,
                "writtenBytes": 19107.0,
                "memoryInBytes": 2871296.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                "id": "69",
                "type": "compute",
                "command": "gunzip \\\n        -f \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_UNBINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.gz",
                        "path": "/ab/a491d97cfd32cab33ae565081f410e/",
                        "sizeInBytes": 2.248
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "path": "/cd/882f370ae493dd9c8daef9d110ff5c/",
                        "sizeInBytes": 6.59
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/cd/882f370ae493dd9c8daef9d110ff5c/",
                        "sizeInBytes": 0.057
                    }
                ],
                "avgCPU": 77.1,
                "bytesRead": 97.801,
                "bytesWritten": 7.529,
                "inputFilesBytes": 2.248,
                "outputFilesBytes": 6.647,
                "memory": 3047.424,
                "runtimeInSeconds": 0.037,
                "readBytes": 97801.0,
                "writtenBytes": 7529.0,
                "memoryInBytes": 3047424.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                "id": "70",
                "type": "compute",
                "command": "gunzip \\\n        -f \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_UNBINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.gz",
                        "path": "/ab/a491d97cfd32cab33ae565081f410e/",
                        "sizeInBytes": 1.187
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "path": "/25/fad435a8679b7b2d6e7a0c0376b8f8/",
                        "sizeInBytes": 3.34
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/25/fad435a8679b7b2d6e7a0c0376b8f8/",
                        "sizeInBytes": 0.057
                    }
                ],
                "avgCPU": 57.7,
                "bytesRead": 96.74,
                "bytesWritten": 4.279,
                "inputFilesBytes": 1.187,
                "outputFilesBytes": 3.397,
                "memory": 2998.272,
                "runtimeInSeconds": 0.055,
                "readBytes": 96740.0,
                "writtenBytes": 4279.0,
                "memoryInBytes": 2998272.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT",
                "id": "71",
                "type": "compute",
                "command": "if [ -n \"SPAdes-MaxBin2-test_minigut.001.fasta.gz SPAdes-MaxBin2-test_minigut.002.fasta.gz\" ]\n    then\n        for file in SPAdes-MaxBin2-test_minigut.001.fasta.gz SPAdes-MaxBin2-test_minigut.002.fasta.gz; do\n            [[ ${file} =~ (.*).fasta.gz ]];\n            bin=\"${BASH_REMATCH[1]}\"\n            mv ${file} ${bin}.fa.gz\n        done\n    fi",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAXBIN2"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fasta.gz",
                        "path": "/eb/f824a718600d27c276a4b0299ae33d/",
                        "sizeInBytes": 266.445
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fasta.gz",
                        "path": "/eb/f824a718600d27c276a4b0299ae33d/",
                        "sizeInBytes": 255.741
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fa.gz",
                        "path": "/22/a064f806a885f085a1dcd7975b6a67/",
                        "sizeInBytes": 266.445
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fa.gz",
                        "path": "/22/a064f806a885f085a1dcd7975b6a67/",
                        "sizeInBytes": 255.741
                    }
                ],
                "avgCPU": 72.7,
                "bytesRead": 59.642,
                "bytesWritten": 0.2,
                "inputFilesBytes": 522.186,
                "outputFilesBytes": 522.186,
                "memory": 0.0,
                "runtimeInSeconds": 0.013,
                "readBytes": 59642.0,
                "writtenBytes": 200.0,
                "memoryInBytes": 0.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                "id": "72",
                "type": "compute",
                "command": "# save unbinned contigs above thresholds into individual files, dump others in one file\n    split_fasta.py SPAdes-MaxBin2-test_minigut.noclass.gz 1 2 1500\n\n    gzip *.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:SPLIT_FASTA\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        biopython: 1.7.4\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut.noclass.gz",
                        "path": "/eb/f824a718600d27c276a4b0299ae33d/",
                        "sizeInBytes": 0.02
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.noclass.pooled.fa.gz",
                        "path": "/a9/5a9418ee5a7690f314418f66882d81/",
                        "sizeInBytes": 0.02
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.noclass.remaining.fa.gz",
                        "path": "/a9/5a9418ee5a7690f314418f66882d81/",
                        "sizeInBytes": 0.02
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/a9/5a9418ee5a7690f314418f66882d81/",
                        "sizeInBytes": 0.095
                    }
                ],
                "avgCPU": 89.3,
                "bytesRead": 11945.881,
                "bytesWritten": 0.564,
                "inputFilesBytes": 0.02,
                "outputFilesBytes": 0.135,
                "memory": 57565.184,
                "runtimeInSeconds": 2.0,
                "readBytes": 11945881.0,
                "writtenBytes": 564.0,
                "memoryInBytes": 57565184.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                "id": "74",
                "type": "compute",
                "command": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_UNBINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.gz",
                        "path": "/5f/2851abe02c0e2835f9e3b09a0b1d62/",
                        "sizeInBytes": 14.921
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.fa",
                        "path": "/db/0958d1883331c1086429c2cb33e79c/",
                        "sizeInBytes": 47.363
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/db/0958d1883331c1086429c2cb33e79c/",
                        "sizeInBytes": 0.057
                    }
                ],
                "avgCPU": 64.6,
                "bytesRead": 110.484,
                "bytesWritten": 48.317,
                "inputFilesBytes": 14.921,
                "outputFilesBytes": 47.42,
                "memory": 0.0,
                "runtimeInSeconds": 0.016,
                "readBytes": 110484.0,
                "writtenBytes": 48317.0,
                "memoryInBytes": 0.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                "id": "73",
                "type": "compute",
                "command": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_UNBINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.gz",
                        "path": "/5f/2851abe02c0e2835f9e3b09a0b1d62/",
                        "sizeInBytes": 26.43
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.fa",
                        "path": "/1f/e0a17ccc19b5d348df7702e0ffceea/",
                        "sizeInBytes": 86.173
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/1f/e0a17ccc19b5d348df7702e0ffceea/",
                        "sizeInBytes": 0.057
                    }
                ],
                "avgCPU": 62.3,
                "bytesRead": 121.973,
                "bytesWritten": 87.112,
                "inputFilesBytes": 26.43,
                "outputFilesBytes": 86.23,
                "memory": 0.0,
                "runtimeInSeconds": 0.017,
                "readBytes": 121973.0,
                "writtenBytes": 87112.0,
                "memoryInBytes": 0.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT",
                "id": "75",
                "type": "compute",
                "command": "if [ -n \"SPAdes-MaxBin2-test_minigut_sample2.001.fasta.gz\" ]\n    then\n        for file in SPAdes-MaxBin2-test_minigut_sample2.001.fasta.gz; do\n            [[ ${file} =~ (.*).fasta.gz ]];\n            bin=\"${BASH_REMATCH[1]}\"\n            mv ${file} ${bin}.fa.gz\n        done\n    fi",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAXBIN2"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fasta.gz",
                        "path": "/0d/8e50cc38e226855a80b119d709ff8c/",
                        "sizeInBytes": 53.267
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fa.gz",
                        "path": "/63/d3de4efa2361a3e58ff7c94485c9b2/",
                        "sizeInBytes": 53.267
                    }
                ],
                "avgCPU": 58.5,
                "bytesRead": 51.896,
                "bytesWritten": 0.209,
                "inputFilesBytes": 53.267,
                "outputFilesBytes": 53.267,
                "memory": 0.0,
                "runtimeInSeconds": 0.011,
                "readBytes": 51896.0,
                "writtenBytes": 209.0,
                "memoryInBytes": 0.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                "id": "76",
                "type": "compute",
                "command": "# save unbinned contigs above thresholds into individual files, dump others in one file\n    split_fasta.py SPAdes-MaxBin2-test_minigut_sample2.noclass.gz 1 2 1500\n\n    gzip *.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:SPLIT_FASTA\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        biopython: 1.7.4\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.gz",
                        "path": "/0d/8e50cc38e226855a80b119d709ff8c/",
                        "sizeInBytes": 29.904
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.gz",
                        "path": "/07/d79186f73346bf557b0b330d22aec1/",
                        "sizeInBytes": 1.035
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.gz",
                        "path": "/07/d79186f73346bf557b0b330d22aec1/",
                        "sizeInBytes": 0.945
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.pooled.fa.gz",
                        "path": "/07/d79186f73346bf557b0b330d22aec1/",
                        "sizeInBytes": 28.679
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.remaining.fa.gz",
                        "path": "/07/d79186f73346bf557b0b330d22aec1/",
                        "sizeInBytes": 0.02
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/07/d79186f73346bf557b0b330d22aec1/",
                        "sizeInBytes": 0.095
                    }
                ],
                "avgCPU": 89.4,
                "bytesRead": 12080.84,
                "bytesWritten": 136.397,
                "inputFilesBytes": 29.904,
                "outputFilesBytes": 30.773999999999997,
                "memory": 55390.208,
                "runtimeInSeconds": 3.0,
                "readBytes": 12080840.0,
                "writtenBytes": 136397.0,
                "memoryInBytes": 55390208.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                "id": "78",
                "type": "compute",
                "command": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_UNBINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.gz",
                        "path": "/be/a6b6583600ddf490d44a92dfcee45c/",
                        "sizeInBytes": 2.28
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "path": "/b0/c4c13fb5a30180e93f30b443ab1807/",
                        "sizeInBytes": 6.614
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/b0/c4c13fb5a30180e93f30b443ab1807/",
                        "sizeInBytes": 0.057
                    }
                ],
                "avgCPU": 139.1,
                "bytesRead": 97.832,
                "bytesWritten": 7.554,
                "inputFilesBytes": 2.28,
                "outputFilesBytes": 6.671,
                "memory": 0.0,
                "runtimeInSeconds": 0.016,
                "readBytes": 97832.0,
                "writtenBytes": 7554.0,
                "memoryInBytes": 0.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                "id": "77",
                "type": "compute",
                "command": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_UNBINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.gz",
                        "path": "/be/a6b6583600ddf490d44a92dfcee45c/",
                        "sizeInBytes": 2.62
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "path": "/df/ee8e1e889cebae9a0e25195f80675f/",
                        "sizeInBytes": 7.81
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/df/ee8e1e889cebae9a0e25195f80675f/",
                        "sizeInBytes": 0.057
                    }
                ],
                "avgCPU": 139.1,
                "bytesRead": 98.173,
                "bytesWritten": 8.75,
                "inputFilesBytes": 2.62,
                "outputFilesBytes": 7.867,
                "memory": 0.0,
                "runtimeInSeconds": 0.016,
                "readBytes": 98173.0,
                "writtenBytes": 8750.0,
                "memoryInBytes": 0.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                "id": "80",
                "type": "compute",
                "command": "gunzip \\\n        -f \\\n         \\\n        MEGAHIT-MaxBin2-test_minigut.002.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_BINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.CAT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fa.gz",
                        "path": "/f5/1fd9cc6adda86286aa0f375123cfc8/",
                        "sizeInBytes": 239.713
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fa",
                        "path": "/8d/60203145275a433cc075347c0757f7/",
                        "sizeInBytes": 808.208
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/8d/60203145275a433cc075347c0757f7/",
                        "sizeInBytes": 0.055
                    }
                ],
                "avgCPU": 123.1,
                "bytesRead": 335.245,
                "bytesWritten": 809.144,
                "inputFilesBytes": 239.713,
                "outputFilesBytes": 808.2629999999999,
                "memory": 2981.888,
                "runtimeInSeconds": 0.028,
                "readBytes": 335245.0,
                "writtenBytes": 809144.0,
                "memoryInBytes": 2981888.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                "id": "79",
                "type": "compute",
                "command": "gunzip \\\n        -f \\\n         \\\n        MEGAHIT-MaxBin2-test_minigut.001.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_BINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.CAT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fa.gz",
                        "path": "/f5/1fd9cc6adda86286aa0f375123cfc8/",
                        "sizeInBytes": 275.379
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fa",
                        "path": "/33/d4976d8a94c2e0b2376a0ae32d2791/",
                        "sizeInBytes": 926.53
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/33/d4976d8a94c2e0b2376a0ae32d2791/",
                        "sizeInBytes": 0.055
                    }
                ],
                "avgCPU": 115.9,
                "bytesRead": 370.91,
                "bytesWritten": 927.466,
                "inputFilesBytes": 275.379,
                "outputFilesBytes": 926.5849999999999,
                "memory": 2985.984,
                "runtimeInSeconds": 0.031,
                "readBytes": 370910.0,
                "writtenBytes": 927466.0,
                "memoryInBytes": 2985984.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                "id": "82",
                "type": "compute",
                "command": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MaxBin2-test_minigut.002.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_BINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.CAT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fa.gz",
                        "path": "/22/a064f806a885f085a1dcd7975b6a67/",
                        "sizeInBytes": 255.741
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fa",
                        "path": "/28/2a3d3dcb177d556ecf9d9f6ccff251/",
                        "sizeInBytes": 860.225
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/28/2a3d3dcb177d556ecf9d9f6ccff251/",
                        "sizeInBytes": 0.055
                    }
                ],
                "avgCPU": 72.2,
                "bytesRead": 351.27,
                "bytesWritten": 861.16,
                "inputFilesBytes": 255.741,
                "outputFilesBytes": 860.28,
                "memory": 3715.072,
                "runtimeInSeconds": 0.072,
                "readBytes": 351270.0,
                "writtenBytes": 861160.0,
                "memoryInBytes": 3715072.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                "id": "81",
                "type": "compute",
                "command": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MaxBin2-test_minigut.001.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_BINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.CAT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fa.gz",
                        "path": "/22/a064f806a885f085a1dcd7975b6a67/",
                        "sizeInBytes": 266.445
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fa",
                        "path": "/e3/858abab7295808ce6e653d7e95d1c9/",
                        "sizeInBytes": 896.979
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/e3/858abab7295808ce6e653d7e95d1c9/",
                        "sizeInBytes": 0.055
                    }
                ],
                "avgCPU": 29.6,
                "bytesRead": 361.994,
                "bytesWritten": 897.929,
                "inputFilesBytes": 266.445,
                "outputFilesBytes": 897.034,
                "memory": 3579.904,
                "runtimeInSeconds": 0.1,
                "readBytes": 361994.0,
                "writtenBytes": 897929.0,
                "memoryInBytes": 3579904.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                "id": "83",
                "type": "compute",
                "command": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MaxBin2-test_minigut_sample2.001.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_BINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.BINNING.ADJUST_MAXBIN2_EXT"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.CAT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fa.gz",
                        "path": "/63/d3de4efa2361a3e58ff7c94485c9b2/",
                        "sizeInBytes": 53.267
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fa",
                        "path": "/2c/3e4c6ddb49c5797adf2ca908ee03f0/",
                        "sizeInBytes": 182.135
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/2c/3e4c6ddb49c5797adf2ca908ee03f0/",
                        "sizeInBytes": 0.055
                    }
                ],
                "avgCPU": 86.5,
                "bytesRead": 148.82,
                "bytesWritten": 183.082,
                "inputFilesBytes": 53.267,
                "outputFilesBytes": 182.19,
                "memory": 2981.888,
                "runtimeInSeconds": 0.018,
                "readBytes": 148820.0,
                "writtenBytes": 183082.0,
                "memoryInBytes": 2981888.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                "id": "85",
                "type": "compute",
                "command": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_UNBINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.gz",
                        "path": "/07/d79186f73346bf557b0b330d22aec1/",
                        "sizeInBytes": 0.945
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa",
                        "path": "/05/688f483a380c53145735b0ec10e7e1/",
                        "sizeInBytes": 2.558
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/05/688f483a380c53145735b0ec10e7e1/",
                        "sizeInBytes": 0.057
                    }
                ],
                "avgCPU": 136.2,
                "bytesRead": 96.496,
                "bytesWritten": 3.498,
                "inputFilesBytes": 0.945,
                "outputFilesBytes": 2.6149999999999998,
                "memory": 0.0,
                "runtimeInSeconds": 0.016,
                "readBytes": 96496.0,
                "writtenBytes": 3498.0,
                "memoryInBytes": 0.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                "id": "84",
                "type": "compute",
                "command": "gunzip \\\n        -f \\\n         \\\n        SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.gz\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:GUNZIP_UNBINS\":\n        gunzip: $(echo $(gunzip --version 2>&1) | sed 's/^.*(gzip) //; s/ Copyright.*$//')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.PROKKA",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.gz",
                        "path": "/07/d79186f73346bf557b0b330d22aec1/",
                        "sizeInBytes": 1.035
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa",
                        "path": "/25/b26b7734ef45adbb9ce3eccfd31840/",
                        "sizeInBytes": 2.806
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/25/b26b7734ef45adbb9ce3eccfd31840/",
                        "sizeInBytes": 0.057
                    }
                ],
                "avgCPU": 145.5,
                "bytesRead": 96.585,
                "bytesWritten": 3.746,
                "inputFilesBytes": 1.035,
                "outputFilesBytes": 2.863,
                "memory": 0.0,
                "runtimeInSeconds": 0.016,
                "readBytes": 96585.0,
                "writtenBytes": 3746.0,
                "memoryInBytes": 0.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "94",
                "type": "compute",
                "command": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix MEGAHIT-MaxBin2-test_minigut.002 \\\n         \\\n         \\\n        MEGAHIT-MaxBin2-test_minigut.002.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fa",
                        "path": "/8d/60203145275a433cc075347c0757f7/",
                        "sizeInBytes": 808.208
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.gff",
                        "path": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 998.266
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.gbk",
                        "path": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 1726.989
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fna",
                        "path": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 810.102
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.faa",
                        "path": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 248.164
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.ffn",
                        "path": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 680.12
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.sqn",
                        "path": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 2834.498
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fsa",
                        "path": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 818.11
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.tbl",
                        "path": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 162.352
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.err",
                        "path": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 416.27
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.log",
                        "path": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 17.311
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.txt",
                        "path": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 0.084
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.tsv",
                        "path": "/acaf974185413de7f7e75d08eed62d/MEGAHIT-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 52.26
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/39/acaf974185413de7f7e75d08eed62d/",
                        "sizeInBytes": 0.044
                    }
                ],
                "avgCPU": 90.8,
                "bytesRead": 6208626.77,
                "bytesWritten": 35341.334,
                "inputFilesBytes": 808.208,
                "outputFilesBytes": 8764.57,
                "memory": 247791.616,
                "runtimeInSeconds": 201.0,
                "readBytes": 6208626770.0,
                "writtenBytes": 35341334.0,
                "memoryInBytes": 247791616.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "88",
                "type": "compute",
                "command": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix MEGAHIT-MetaBAT2-test_minigut.1 \\\n         \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut.1.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.fa",
                        "path": "/61/cf25917be22c0d7cc036bbb291ff61/",
                        "sizeInBytes": 826.502
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.gff",
                        "path": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 960.885
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.gbk",
                        "path": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 1629.09
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.fna",
                        "path": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 826.502
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.faa",
                        "path": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 264.406
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.ffn",
                        "path": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 740.832
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.sqn",
                        "path": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 2409.785
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.fsa",
                        "path": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 828.894
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.tbl",
                        "path": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 110.991
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.err",
                        "path": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 286.528
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.log",
                        "path": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 13.794
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.txt",
                        "path": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 0.075
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.tsv",
                        "path": "/9602d60bfda3d0afbe2182f5e9e212/MEGAHIT-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 37.909
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/7b/9602d60bfda3d0afbe2182f5e9e212/",
                        "sizeInBytes": 0.044
                    }
                ],
                "avgCPU": 93.3,
                "bytesRead": 18429426.778,
                "bytesWritten": 34685.62,
                "inputFilesBytes": 826.502,
                "outputFilesBytes": 8109.735,
                "memory": 150953.984,
                "runtimeInSeconds": 252.0,
                "readBytes": 18429426778.0,
                "writtenBytes": 34685620.0,
                "memoryInBytes": 150953984.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "90",
                "type": "compute",
                "command": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MetaBAT2-test_minigut.1 \\\n         \\\n         \\\n        SPAdes-MetaBAT2-test_minigut.1.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.fa",
                        "path": "/99/9391bef265fc20cdc627372089b79b/",
                        "sizeInBytes": 749.812
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.gff",
                        "path": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 889.057
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.gbk",
                        "path": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 1477.344
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.fna",
                        "path": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 749.812
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.faa",
                        "path": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 249.41
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.ffn",
                        "path": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 700.441
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.sqn",
                        "path": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 1850.529
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.fsa",
                        "path": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 749.916
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.tbl",
                        "path": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 103.167
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.err",
                        "path": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 280.154
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.log",
                        "path": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 14.144
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.txt",
                        "path": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 0.074
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.tsv",
                        "path": "/cb263e07e01a650cebaafa50f33960/SPAdes-MetaBAT2-test_minigut.1/",
                        "sizeInBytes": 34.808
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/e5/cb263e07e01a650cebaafa50f33960/",
                        "sizeInBytes": 0.044
                    }
                ],
                "avgCPU": 93.3,
                "bytesRead": 16939225.163,
                "bytesWritten": 32519.082,
                "inputFilesBytes": 749.812,
                "outputFilesBytes": 7098.9,
                "memory": 129282.048,
                "runtimeInSeconds": 241.0,
                "readBytes": 16939225162.999998,
                "writtenBytes": 32519082.0,
                "memoryInBytes": 129282048.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "98",
                "type": "compute",
                "command": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MaxBin2-test_minigut.002 \\\n         \\\n         \\\n        SPAdes-MaxBin2-test_minigut.002.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fa",
                        "path": "/28/2a3d3dcb177d556ecf9d9f6ccff251/",
                        "sizeInBytes": 860.225
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.gff",
                        "path": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 1088.578
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.gbk",
                        "path": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 1826.255
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fna",
                        "path": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 862.237
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.faa",
                        "path": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 285.377
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.ffn",
                        "path": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 784.517
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.sqn",
                        "path": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 2633.643
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fsa",
                        "path": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 863.797
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.tbl",
                        "path": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 179.718
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.err",
                        "path": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 426.276
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.log",
                        "path": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 24.276
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.txt",
                        "path": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 0.084
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.tsv",
                        "path": "/8e9e371269fdf3f497b71fdd02028d/SPAdes-MaxBin2-test_minigut.002/",
                        "sizeInBytes": 57.92
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/b4/8e9e371269fdf3f497b71fdd02028d/",
                        "sizeInBytes": 0.044
                    }
                ],
                "avgCPU": 93.3,
                "bytesRead": 6097044.355,
                "bytesWritten": 36740.743,
                "inputFilesBytes": 860.225,
                "outputFilesBytes": 9032.722000000002,
                "memory": 112082.944,
                "runtimeInSeconds": 226.0,
                "readBytes": 6097044355.0,
                "writtenBytes": 36740743.0,
                "memoryInBytes": 112082944.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "96",
                "type": "compute",
                "command": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix MEGAHIT-MaxBin2-test_minigut.001 \\\n         \\\n         \\\n        MEGAHIT-MaxBin2-test_minigut.001.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fa",
                        "path": "/33/d4976d8a94c2e0b2376a0ae32d2791/",
                        "sizeInBytes": 926.53
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.gff",
                        "path": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 1083.86
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.gbk",
                        "path": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 1838.771
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fna",
                        "path": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 928.708
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.faa",
                        "path": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 293.458
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.ffn",
                        "path": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 820.126
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.sqn",
                        "path": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 2769.096
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fsa",
                        "path": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 932.088
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.tbl",
                        "path": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 127.55
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.err",
                        "path": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 346.433
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.log",
                        "path": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 15.352
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.txt",
                        "path": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 0.076
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.tsv",
                        "path": "/302bc3450d1a96f8dd87e6ed64fa04/MEGAHIT-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 43.502
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/0a/302bc3450d1a96f8dd87e6ed64fa04/",
                        "sizeInBytes": 0.044
                    }
                ],
                "avgCPU": 93.1,
                "bytesRead": 21769610.986,
                "bytesWritten": 37545.488,
                "inputFilesBytes": 926.53,
                "outputFilesBytes": 9199.064,
                "memory": 119824.384,
                "runtimeInSeconds": 281.0,
                "readBytes": 21769610986.0,
                "writtenBytes": 37545488.0,
                "memoryInBytes": 119824384.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "101",
                "type": "compute",
                "command": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MaxBin2-test_minigut_sample2.001 \\\n         \\\n         \\\n        SPAdes-MaxBin2-test_minigut_sample2.001.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fa",
                        "path": "/2c/3e4c6ddb49c5797adf2ca908ee03f0/",
                        "sizeInBytes": 182.135
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.gff",
                        "path": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/",
                        "sizeInBytes": 228.354
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.gbk",
                        "path": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/",
                        "sizeInBytes": 407.91
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fna",
                        "path": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/",
                        "sizeInBytes": 182.552
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.faa",
                        "path": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/",
                        "sizeInBytes": 34.858
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.ffn",
                        "path": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/",
                        "sizeInBytes": 95.226
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.sqn",
                        "path": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/",
                        "sizeInBytes": 713.561
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fsa",
                        "path": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/",
                        "sizeInBytes": 188.376
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.tbl",
                        "path": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/",
                        "sizeInBytes": 33.381
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.err",
                        "path": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/",
                        "sizeInBytes": 233.663
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.log",
                        "path": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/",
                        "sizeInBytes": 13.14
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.txt",
                        "path": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/",
                        "sizeInBytes": 0.084
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.tsv",
                        "path": "/744dd3843deedbcf17b47531d248e4/SPAdes-MaxBin2-test_minigut_sample2.001/",
                        "sizeInBytes": 10.226
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/06/744dd3843deedbcf17b47531d248e4/",
                        "sizeInBytes": 0.044
                    }
                ],
                "avgCPU": 90.0,
                "bytesRead": 5456705.085,
                "bytesWritten": 17161.079,
                "inputFilesBytes": 182.135,
                "outputFilesBytes": 2141.375,
                "memory": 98078.72,
                "runtimeInSeconds": 51.0,
                "readBytes": 5456705085.0,
                "writtenBytes": 17161079.0,
                "memoryInBytes": 98078720.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "99",
                "type": "compute",
                "command": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MaxBin2-test_minigut.001 \\\n         \\\n         \\\n        SPAdes-MaxBin2-test_minigut.001.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fa",
                        "path": "/e3/858abab7295808ce6e653d7e95d1c9/",
                        "sizeInBytes": 896.979
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.gff",
                        "path": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 1068.894
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.gbk",
                        "path": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 1778.49
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fna",
                        "path": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 899.082
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.faa",
                        "path": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 298.472
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.ffn",
                        "path": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 836.498
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.sqn",
                        "path": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 2269.773
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fsa",
                        "path": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 899.602
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.tbl",
                        "path": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 125.294
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.err",
                        "path": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 355.352
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.log",
                        "path": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 14.561
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.txt",
                        "path": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 0.075
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.tsv",
                        "path": "/8617310dd03b78d8d373719be2b28a/SPAdes-MaxBin2-test_minigut.001/",
                        "sizeInBytes": 42.464
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/cf/8617310dd03b78d8d373719be2b28a/",
                        "sizeInBytes": 0.044
                    }
                ],
                "avgCPU": 93.2,
                "bytesRead": 21515310.705,
                "bytesWritten": 36466.404,
                "inputFilesBytes": 896.979,
                "outputFilesBytes": 8588.601,
                "memory": 130396.16,
                "runtimeInSeconds": 290.0,
                "readBytes": 21515310705.0,
                "writtenBytes": 36466404.0,
                "memoryInBytes": 130396160.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "87",
                "type": "compute",
                "command": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix MEGAHIT-MetaBAT2-test_minigut.2 \\\n         \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut.2.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.fa",
                        "path": "/d1/af5b3f93228497d9441a56a2846bdd/",
                        "sizeInBytes": 739.909
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.gff",
                        "path": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 913.681
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.gbk",
                        "path": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 1578.355
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.fna",
                        "path": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 739.909
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.faa",
                        "path": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 229.936
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.ffn",
                        "path": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 630.83
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.sqn",
                        "path": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 2581.009
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.fsa",
                        "path": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 746.513
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.tbl",
                        "path": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 150.501
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.err",
                        "path": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 364.481
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.log",
                        "path": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 16.982
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.txt",
                        "path": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 0.084
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.tsv",
                        "path": "/58d0d9089e64102958fd0a7ed07323/MEGAHIT-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 48.447
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/5f/58d0d9089e64102958fd0a7ed07323/",
                        "sizeInBytes": 0.044
                    }
                ],
                "avgCPU": 93.1,
                "bytesRead": 4849673.137,
                "bytesWritten": 33373.72,
                "inputFilesBytes": 739.909,
                "outputFilesBytes": 8000.772,
                "memory": 247533.568,
                "runtimeInSeconds": 176.0,
                "readBytes": 4849673137.0,
                "writtenBytes": 33373720.0,
                "memoryInBytes": 247533568.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "92",
                "type": "compute",
                "command": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MetaBAT2-test_minigut.2 \\\n         \\\n         \\\n        SPAdes-MetaBAT2-test_minigut.2.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.fa",
                        "path": "/2c/dc9657212417f3f1714124a02c7b37/",
                        "sizeInBytes": 857.355
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.gff",
                        "path": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 1082.269
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.gbk",
                        "path": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 1814.551
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.fna",
                        "path": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 857.355
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.faa",
                        "path": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 284.004
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.ffn",
                        "path": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 780.823
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.sqn",
                        "path": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 2610.923
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.fsa",
                        "path": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 858.707
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.tbl",
                        "path": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 178.622
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.err",
                        "path": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 414.773
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.log",
                        "path": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 24.181
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.txt",
                        "path": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 0.084
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.tsv",
                        "path": "/e9c11a77add3e2c1869b0d2c554413/SPAdes-MetaBAT2-test_minigut.2/",
                        "sizeInBytes": 57.627
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/16/e9c11a77add3e2c1869b0d2c554413/",
                        "sizeInBytes": 0.044
                    }
                ],
                "avgCPU": 93.1,
                "bytesRead": 6052811.598,
                "bytesWritten": 36740.984,
                "inputFilesBytes": 857.355,
                "outputFilesBytes": 8963.963,
                "memory": 143466.496,
                "runtimeInSeconds": 226.0,
                "readBytes": 6052811598.0,
                "writtenBytes": 36740984.0,
                "memoryInBytes": 143466496.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "95",
                "type": "compute",
                "command": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in MEGAHIT-MaxBin2-test_minigut.002.fa         --cpu \"1\"         --out \"BUSCO\" > MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log 2> MEGAHIT-MaxBin2-test_minigut.002.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MaxBin2-test_minigut.002.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log.\"\n                echo -e \"MEGAHIT-MaxBin2-test_minigut.002.fa\tNo genes\" > \"MEGAHIT-MaxBin2-test_minigut.002.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MaxBin2-test_minigut.002.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MaxBin2-test_minigut.002.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.MEGAHIT-MaxBin2-test_minigut.002.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MaxBin2-test_minigut.002.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MaxBin2-test_minigut.002.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MaxBin2-test_minigut.002.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MaxBin2-test_minigut.002.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MaxBin2-test_minigut.002.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MaxBin2-test_minigut.002.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also MEGAHIT-MaxBin2-test_minigut.002.fa_busco.err.\"\n        echo -e \"MEGAHIT-MaxBin2-test_minigut.002.fa\tNo genes\" > \"MEGAHIT-MaxBin2-test_minigut.002.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also MEGAHIT-MaxBin2-test_minigut.002.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"MEGAHIT-MaxBin2-test_minigut.002.fa\tPlacements failed\" > \"MEGAHIT-MaxBin2-test_minigut.002.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.MEGAHIT-MaxBin2-test_minigut.002.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MaxBin2-test_minigut.002.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MaxBin2-test_minigut.002.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also MEGAHIT-MaxBin2-test_minigut.002.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"MEGAHIT-MaxBin2-test_minigut.002.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fa",
                        "path": "/8d/60203145275a433cc075347c0757f7/",
                        "sizeInBytes": 808.208
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901.713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.002.fa.txt",
                        "path": "/b6/b7ace9100172f939fce1a324bafeec/",
                        "sizeInBytes": 0.7
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/b6/b7ace9100172f939fce1a324bafeec/",
                        "sizeInBytes": 18.129
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fa_busco.log",
                        "path": "/b6/b7ace9100172f939fce1a324bafeec/",
                        "sizeInBytes": 2.784
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fa_busco.err",
                        "path": "/b6/b7ace9100172f939fce1a324bafeec/",
                        "sizeInBytes": 0.0
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fa_buscos.bacteria_odb10.faa.gz",
                        "path": "/b6/b7ace9100172f939fce1a324bafeec/",
                        "sizeInBytes": 3.825
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fa_buscos.bacteria_odb10.fna.gz",
                        "path": "/b6/b7ace9100172f939fce1a324bafeec/",
                        "sizeInBytes": 5.791
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fa_prodigal.gff",
                        "path": "/b6/b7ace9100172f939fce1a324bafeec/",
                        "sizeInBytes": 207.65
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/b6/b7ace9100172f939fce1a324bafeec/",
                        "sizeInBytes": 0.081
                    }
                ],
                "avgCPU": 46.0,
                "bytesRead": 210339.688,
                "bytesWritten": 131256.276,
                "inputFilesBytes": 27709.921,
                "outputFilesBytes": 238.96,
                "memory": 126857.216,
                "runtimeInSeconds": 25.829,
                "readBytes": 210339688.0,
                "writtenBytes": 131256276.00000001,
                "memoryInBytes": 126857216.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "100",
                "type": "compute",
                "command": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MaxBin2-test_minigut.002.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MaxBin2-test_minigut.002.fa_busco.log 2> SPAdes-MaxBin2-test_minigut.002.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut.002.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MaxBin2-test_minigut.002.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MaxBin2-test_minigut.002.fa_busco.log.\"\n                echo -e \"SPAdes-MaxBin2-test_minigut.002.fa\tNo genes\" > \"SPAdes-MaxBin2-test_minigut.002.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.002.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MaxBin2-test_minigut.002.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.002.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MaxBin2-test_minigut.002.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MaxBin2-test_minigut.002.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut.002.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MaxBin2-test_minigut.002.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MaxBin2-test_minigut.002.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut.002.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut.002.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.002.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MaxBin2-test_minigut.002.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MaxBin2-test_minigut.002.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.002.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MaxBin2-test_minigut.002.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut.002.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MaxBin2-test_minigut.002.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut.002.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut.002.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MaxBin2-test_minigut.002.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MaxBin2-test_minigut.002.fa_busco.err.\"\n        echo -e \"SPAdes-MaxBin2-test_minigut.002.fa\tNo genes\" > \"SPAdes-MaxBin2-test_minigut.002.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.002.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MaxBin2-test_minigut.002.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MaxBin2-test_minigut.002.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MaxBin2-test_minigut.002.fa\tPlacements failed\" > \"SPAdes-MaxBin2-test_minigut.002.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.002.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MaxBin2-test_minigut.002.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut.002.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut.002.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MaxBin2-test_minigut.002.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MaxBin2-test_minigut.002.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fa",
                        "path": "/28/2a3d3dcb177d556ecf9d9f6ccff251/",
                        "sizeInBytes": 860.225
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901.713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.002.fa.txt",
                        "path": "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/",
                        "sizeInBytes": 0.699
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/",
                        "sizeInBytes": 18.129
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fa_busco.log",
                        "path": "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/",
                        "sizeInBytes": 2.783
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fa_busco.err",
                        "path": "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/",
                        "sizeInBytes": 0.0
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fa_buscos.bacteria_odb10.faa.gz",
                        "path": "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/",
                        "sizeInBytes": 4.024
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fa_buscos.bacteria_odb10.fna.gz",
                        "path": "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/",
                        "sizeInBytes": 6.002
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fa_prodigal.gff",
                        "path": "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/",
                        "sizeInBytes": 209.722
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/",
                        "sizeInBytes": 0.081
                    }
                ],
                "avgCPU": 69.9,
                "bytesRead": 215257.364,
                "bytesWritten": 131552.951,
                "inputFilesBytes": 27761.938,
                "outputFilesBytes": 241.44,
                "memory": 138940.416,
                "runtimeInSeconds": 18.007,
                "readBytes": 215257364.0,
                "writtenBytes": 131552951.0,
                "memoryInBytes": 138940416.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "91",
                "type": "compute",
                "command": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MetaBAT2-test_minigut.1.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MetaBAT2-test_minigut.1.fa_busco.log 2> SPAdes-MetaBAT2-test_minigut.1.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.1.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MetaBAT2-test_minigut.1.fa_busco.log.\"\n                echo -e \"SPAdes-MetaBAT2-test_minigut.1.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut.1.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.1.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.1.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut.1.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.1.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.1.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.1.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.1.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MetaBAT2-test_minigut.1.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.1.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.1.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MetaBAT2-test_minigut.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MetaBAT2-test_minigut.1.fa_busco.err.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut.1.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut.1.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MetaBAT2-test_minigut.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MetaBAT2-test_minigut.1.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut.1.fa\tPlacements failed\" > \"SPAdes-MetaBAT2-test_minigut.1.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.1.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut.1.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.1.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.1.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MetaBAT2-test_minigut.1.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MetaBAT2-test_minigut.1.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.fa",
                        "path": "/99/9391bef265fc20cdc627372089b79b/",
                        "sizeInBytes": 749.812
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901.713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.1.fa.txt",
                        "path": "/7d/87145d575e7a7abf53c38bc1f42c46/",
                        "sizeInBytes": 0.698
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/7d/87145d575e7a7abf53c38bc1f42c46/",
                        "sizeInBytes": 18.129
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.fa_busco.log",
                        "path": "/7d/87145d575e7a7abf53c38bc1f42c46/",
                        "sizeInBytes": 2.782
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.fa_busco.err",
                        "path": "/7d/87145d575e7a7abf53c38bc1f42c46/",
                        "sizeInBytes": 0.0
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.fa_buscos.bacteria_odb10.faa.gz",
                        "path": "/7d/87145d575e7a7abf53c38bc1f42c46/",
                        "sizeInBytes": 5.021
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.fa_buscos.bacteria_odb10.fna.gz",
                        "path": "/7d/87145d575e7a7abf53c38bc1f42c46/",
                        "sizeInBytes": 7.571
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.fa_prodigal.gff",
                        "path": "/7d/87145d575e7a7abf53c38bc1f42c46/",
                        "sizeInBytes": 145.085
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/7d/87145d575e7a7abf53c38bc1f42c46/",
                        "sizeInBytes": 0.081
                    }
                ],
                "avgCPU": 74.4,
                "bytesRead": 207387.885,
                "bytesWritten": 130929.046,
                "inputFilesBytes": 27651.525,
                "outputFilesBytes": 179.367,
                "memory": 139857.92,
                "runtimeInSeconds": 19.21,
                "readBytes": 207387885.0,
                "writtenBytes": 130929046.0,
                "memoryInBytes": 139857920.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "102",
                "type": "compute",
                "command": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MaxBin2-test_minigut.001.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MaxBin2-test_minigut.001.fa_busco.log 2> SPAdes-MaxBin2-test_minigut.001.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut.001.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MaxBin2-test_minigut.001.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MaxBin2-test_minigut.001.fa_busco.log.\"\n                echo -e \"SPAdes-MaxBin2-test_minigut.001.fa\tNo genes\" > \"SPAdes-MaxBin2-test_minigut.001.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.001.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MaxBin2-test_minigut.001.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.001.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MaxBin2-test_minigut.001.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MaxBin2-test_minigut.001.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut.001.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MaxBin2-test_minigut.001.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MaxBin2-test_minigut.001.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut.001.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut.001.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.001.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MaxBin2-test_minigut.001.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MaxBin2-test_minigut.001.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.001.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MaxBin2-test_minigut.001.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut.001.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MaxBin2-test_minigut.001.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut.001.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut.001.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MaxBin2-test_minigut.001.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MaxBin2-test_minigut.001.fa_busco.err.\"\n        echo -e \"SPAdes-MaxBin2-test_minigut.001.fa\tNo genes\" > \"SPAdes-MaxBin2-test_minigut.001.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.001.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MaxBin2-test_minigut.001.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MaxBin2-test_minigut.001.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MaxBin2-test_minigut.001.fa\tPlacements failed\" > \"SPAdes-MaxBin2-test_minigut.001.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut.001.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MaxBin2-test_minigut.001.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut.001.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut.001.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MaxBin2-test_minigut.001.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MaxBin2-test_minigut.001.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fa",
                        "path": "/e3/858abab7295808ce6e653d7e95d1c9/",
                        "sizeInBytes": 896.979
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901.713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.001.fa.txt",
                        "path": "/18/ba9403eaf56fae25a02be1c30984fe/",
                        "sizeInBytes": 0.698
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/18/ba9403eaf56fae25a02be1c30984fe/",
                        "sizeInBytes": 18.129
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fa_busco.log",
                        "path": "/18/ba9403eaf56fae25a02be1c30984fe/",
                        "sizeInBytes": 2.781
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fa_busco.err",
                        "path": "/18/ba9403eaf56fae25a02be1c30984fe/",
                        "sizeInBytes": 0.0
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fa_buscos.bacteria_odb10.faa.gz",
                        "path": "/18/ba9403eaf56fae25a02be1c30984fe/",
                        "sizeInBytes": 5.854
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fa_buscos.bacteria_odb10.fna.gz",
                        "path": "/18/ba9403eaf56fae25a02be1c30984fe/",
                        "sizeInBytes": 8.821
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fa_prodigal.gff",
                        "path": "/18/ba9403eaf56fae25a02be1c30984fe/",
                        "sizeInBytes": 180.37
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/18/ba9403eaf56fae25a02be1c30984fe/",
                        "sizeInBytes": 0.081
                    }
                ],
                "avgCPU": 75.8,
                "bytesRead": 216474.207,
                "bytesWritten": 131571.642,
                "inputFilesBytes": 27798.692,
                "outputFilesBytes": 216.734,
                "memory": 140537.856,
                "runtimeInSeconds": 21.281,
                "readBytes": 216474207.0,
                "writtenBytes": 131571642.0,
                "memoryInBytes": 140537856.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "89",
                "type": "compute",
                "command": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in MEGAHIT-MetaBAT2-test_minigut.1.fa         --cpu \"1\"         --out \"BUSCO\" > MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log 2> MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log.\"\n                echo -e \"MEGAHIT-MetaBAT2-test_minigut.1.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.1.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.1.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.1.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.1.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.err.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut.1.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut.1.fa\tPlacements failed\" > \"MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.1.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.1.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"MEGAHIT-MetaBAT2-test_minigut.1.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.fa",
                        "path": "/61/cf25917be22c0d7cc036bbb291ff61/",
                        "sizeInBytes": 826.502
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901.713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt",
                        "path": "/38/556350b2b2b8efe6d2264985733b0c/",
                        "sizeInBytes": 0.699
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/38/556350b2b2b8efe6d2264985733b0c/",
                        "sizeInBytes": 18.129
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.log",
                        "path": "/38/556350b2b2b8efe6d2264985733b0c/",
                        "sizeInBytes": 2.783
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.fa_busco.err",
                        "path": "/38/556350b2b2b8efe6d2264985733b0c/",
                        "sizeInBytes": 0.0
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.fa_buscos.bacteria_odb10.faa.gz",
                        "path": "/38/556350b2b2b8efe6d2264985733b0c/",
                        "sizeInBytes": 5.254
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.fa_buscos.bacteria_odb10.fna.gz",
                        "path": "/38/556350b2b2b8efe6d2264985733b0c/",
                        "sizeInBytes": 7.955
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.fa_prodigal.gff",
                        "path": "/38/556350b2b2b8efe6d2264985733b0c/",
                        "sizeInBytes": 155.694
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/38/556350b2b2b8efe6d2264985733b0c/",
                        "sizeInBytes": 0.081
                    }
                ],
                "avgCPU": 75.3,
                "bytesRead": 209101.116,
                "bytesWritten": 131029.835,
                "inputFilesBytes": 27728.215,
                "outputFilesBytes": 190.59499999999997,
                "memory": 139149.312,
                "runtimeInSeconds": 20.211,
                "readBytes": 209101116.0,
                "writtenBytes": 131029835.0,
                "memoryInBytes": 139149312.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "86",
                "type": "compute",
                "command": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in MEGAHIT-MetaBAT2-test_minigut.2.fa         --cpu \"1\"         --out \"BUSCO\" > MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log 2> MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log.\"\n                echo -e \"MEGAHIT-MetaBAT2-test_minigut.2.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.2.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.2.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.2.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.2.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.err.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut.2.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut.2.fa\tPlacements failed\" > \"MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.2.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.2.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"MEGAHIT-MetaBAT2-test_minigut.2.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.fa",
                        "path": "/d1/af5b3f93228497d9441a56a2846bdd/",
                        "sizeInBytes": 739.909
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901.713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt",
                        "path": "/4c/002d51c5239b46efae0101b8737275/",
                        "sizeInBytes": 0.699
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/4c/002d51c5239b46efae0101b8737275/",
                        "sizeInBytes": 18.129
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.log",
                        "path": "/4c/002d51c5239b46efae0101b8737275/",
                        "sizeInBytes": 2.783
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.fa_busco.err",
                        "path": "/4c/002d51c5239b46efae0101b8737275/",
                        "sizeInBytes": 0.0
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.fa_buscos.bacteria_odb10.faa.gz",
                        "path": "/4c/002d51c5239b46efae0101b8737275/",
                        "sizeInBytes": 3.309
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.fa_buscos.bacteria_odb10.fna.gz",
                        "path": "/4c/002d51c5239b46efae0101b8737275/",
                        "sizeInBytes": 5.01
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.fa_prodigal.gff",
                        "path": "/4c/002d51c5239b46efae0101b8737275/",
                        "sizeInBytes": 188.015
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/4c/002d51c5239b46efae0101b8737275/",
                        "sizeInBytes": 0.081
                    }
                ],
                "avgCPU": 70.8,
                "bytesRead": 206224.547,
                "bytesWritten": 130936.193,
                "inputFilesBytes": 27641.622,
                "outputFilesBytes": 218.02599999999998,
                "memory": 137428.992,
                "runtimeInSeconds": 16.446,
                "readBytes": 206224547.0,
                "writtenBytes": 130936193.0,
                "memoryInBytes": 137428992.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "97",
                "type": "compute",
                "command": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in MEGAHIT-MaxBin2-test_minigut.001.fa         --cpu \"1\"         --out \"BUSCO\" > MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log 2> MEGAHIT-MaxBin2-test_minigut.001.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MaxBin2-test_minigut.001.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log.\"\n                echo -e \"MEGAHIT-MaxBin2-test_minigut.001.fa\tNo genes\" > \"MEGAHIT-MaxBin2-test_minigut.001.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MaxBin2-test_minigut.001.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MaxBin2-test_minigut.001.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.MEGAHIT-MaxBin2-test_minigut.001.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MaxBin2-test_minigut.001.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MaxBin2-test_minigut.001.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MaxBin2-test_minigut.001.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MaxBin2-test_minigut.001.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MaxBin2-test_minigut.001.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MaxBin2-test_minigut.001.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also MEGAHIT-MaxBin2-test_minigut.001.fa_busco.err.\"\n        echo -e \"MEGAHIT-MaxBin2-test_minigut.001.fa\tNo genes\" > \"MEGAHIT-MaxBin2-test_minigut.001.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also MEGAHIT-MaxBin2-test_minigut.001.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"MEGAHIT-MaxBin2-test_minigut.001.fa\tPlacements failed\" > \"MEGAHIT-MaxBin2-test_minigut.001.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.MEGAHIT-MaxBin2-test_minigut.001.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MaxBin2-test_minigut.001.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MaxBin2-test_minigut.001.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also MEGAHIT-MaxBin2-test_minigut.001.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"MEGAHIT-MaxBin2-test_minigut.001.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fa",
                        "path": "/33/d4976d8a94c2e0b2376a0ae32d2791/",
                        "sizeInBytes": 926.53
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901.713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.001.fa.txt",
                        "path": "/cc/8e484c5973a041ea6a7de5ffb9a4d6/",
                        "sizeInBytes": 0.699
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/cc/8e484c5973a041ea6a7de5ffb9a4d6/",
                        "sizeInBytes": 18.129
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fa_busco.log",
                        "path": "/cc/8e484c5973a041ea6a7de5ffb9a4d6/",
                        "sizeInBytes": 2.782
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fa_busco.err",
                        "path": "/cc/8e484c5973a041ea6a7de5ffb9a4d6/",
                        "sizeInBytes": 0.0
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fa_buscos.bacteria_odb10.faa.gz",
                        "path": "/cc/8e484c5973a041ea6a7de5ffb9a4d6/",
                        "sizeInBytes": 5.49
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fa_buscos.bacteria_odb10.fna.gz",
                        "path": "/cc/8e484c5973a041ea6a7de5ffb9a4d6/",
                        "sizeInBytes": 8.304
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fa_prodigal.gff",
                        "path": "/cc/8e484c5973a041ea6a7de5ffb9a4d6/",
                        "sizeInBytes": 184.589
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/cc/8e484c5973a041ea6a7de5ffb9a4d6/",
                        "sizeInBytes": 0.081
                    }
                ],
                "avgCPU": 75.3,
                "bytesRead": 214976.466,
                "bytesWritten": 131440.457,
                "inputFilesBytes": 27828.243,
                "outputFilesBytes": 220.07399999999998,
                "memory": 140124.16,
                "runtimeInSeconds": 21.189,
                "readBytes": 214976466.0,
                "writtenBytes": 131440457.0,
                "memoryInBytes": 140124160.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "93",
                "type": "compute",
                "command": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MetaBAT2-test_minigut.2.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MetaBAT2-test_minigut.2.fa_busco.log 2> SPAdes-MetaBAT2-test_minigut.2.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.2.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MetaBAT2-test_minigut.2.fa_busco.log.\"\n                echo -e \"SPAdes-MetaBAT2-test_minigut.2.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut.2.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.2.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.2.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut.2.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.2.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.2.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.2.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.2.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MetaBAT2-test_minigut.2.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.2.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.2.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MetaBAT2-test_minigut.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MetaBAT2-test_minigut.2.fa_busco.err.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut.2.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut.2.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MetaBAT2-test_minigut.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MetaBAT2-test_minigut.2.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut.2.fa\tPlacements failed\" > \"SPAdes-MetaBAT2-test_minigut.2.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.2.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut.2.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.2.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.2.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MetaBAT2-test_minigut.2.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MetaBAT2-test_minigut.2.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.fa",
                        "path": "/2c/dc9657212417f3f1714124a02c7b37/",
                        "sizeInBytes": 857.355
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901.713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.2.fa.txt",
                        "path": "/c9/4ae56826c49a7fe1063c5a40993c8f/",
                        "sizeInBytes": 0.698
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/c9/4ae56826c49a7fe1063c5a40993c8f/",
                        "sizeInBytes": 18.129
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.fa_busco.log",
                        "path": "/c9/4ae56826c49a7fe1063c5a40993c8f/",
                        "sizeInBytes": 2.782
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.fa_busco.err",
                        "path": "/c9/4ae56826c49a7fe1063c5a40993c8f/",
                        "sizeInBytes": 0.0
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.fa_buscos.bacteria_odb10.faa.gz",
                        "path": "/c9/4ae56826c49a7fe1063c5a40993c8f/",
                        "sizeInBytes": 4.024
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.fa_buscos.bacteria_odb10.fna.gz",
                        "path": "/c9/4ae56826c49a7fe1063c5a40993c8f/",
                        "sizeInBytes": 6.002
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.fa_prodigal.gff",
                        "path": "/c9/4ae56826c49a7fe1063c5a40993c8f/",
                        "sizeInBytes": 207.746
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/c9/4ae56826c49a7fe1063c5a40993c8f/",
                        "sizeInBytes": 0.081
                    }
                ],
                "avgCPU": 72.1,
                "bytesRead": 214947.326,
                "bytesWritten": 131530.487,
                "inputFilesBytes": 27759.068,
                "outputFilesBytes": 239.462,
                "memory": 138792.96,
                "runtimeInSeconds": 18.246,
                "readBytes": 214947326.0,
                "writtenBytes": 131530487.0,
                "memoryInBytes": 138792960.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "103",
                "type": "compute",
                "command": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MaxBin2-test_minigut_sample2.001.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log 2> SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log.\"\n                echo -e \"SPAdes-MaxBin2-test_minigut_sample2.001.fa\tNo genes\" > \"SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut_sample2.001.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut_sample2.001.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut_sample2.001.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut_sample2.001.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.err.\"\n        echo -e \"SPAdes-MaxBin2-test_minigut_sample2.001.fa\tNo genes\" > \"SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MaxBin2-test_minigut_sample2.001.fa\tPlacements failed\" > \"SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut_sample2.001.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut_sample2.001.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MaxBin2-test_minigut_sample2.001.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fa",
                        "path": "/2c/3e4c6ddb49c5797adf2ca908ee03f0/",
                        "sizeInBytes": 182.135
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901.713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt",
                        "path": "/77/ccbf52f5eeff4956e8bb7fa0b056bf/",
                        "sizeInBytes": 0.703
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/77/ccbf52f5eeff4956e8bb7fa0b056bf/",
                        "sizeInBytes": 18.129
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.log",
                        "path": "/77/ccbf52f5eeff4956e8bb7fa0b056bf/",
                        "sizeInBytes": 2.784
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fa_busco.err",
                        "path": "/77/ccbf52f5eeff4956e8bb7fa0b056bf/",
                        "sizeInBytes": 0.0
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fa_buscos.bacteria_odb10.faa.gz",
                        "path": "/77/ccbf52f5eeff4956e8bb7fa0b056bf/",
                        "sizeInBytes": 0.505
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fa_buscos.bacteria_odb10.fna.gz",
                        "path": "/77/ccbf52f5eeff4956e8bb7fa0b056bf/",
                        "sizeInBytes": 0.699
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fa_prodigal.gff",
                        "path": "/77/ccbf52f5eeff4956e8bb7fa0b056bf/",
                        "sizeInBytes": 97.093
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/77/ccbf52f5eeff4956e8bb7fa0b056bf/",
                        "sizeInBytes": 0.081
                    }
                ],
                "avgCPU": 61.5,
                "bytesRead": 175941.475,
                "bytesWritten": 128946.978,
                "inputFilesBytes": 27083.847999999998,
                "outputFilesBytes": 119.99400000000001,
                "memory": 131776.512,
                "runtimeInSeconds": 12.702,
                "readBytes": 175941475.0,
                "writtenBytes": 128946978.0,
                "memoryInBytes": 131776511.99999999
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "104",
                "type": "compute",
                "command": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix MEGAHIT-MetaBAT2-test_minigut.unbinned.1 \\\n         \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa",
                        "path": "/0f/da507fa0645b75fe52bef79d0cff50/",
                        "sizeInBytes": 27.64
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.gff",
                        "path": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 31.901
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.gbk",
                        "path": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 54.294
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fna",
                        "path": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 27.618
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.faa",
                        "path": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 9.151
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.ffn",
                        "path": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 25.676
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.sqn",
                        "path": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 81.434
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fsa",
                        "path": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 27.67
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.tbl",
                        "path": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 3.372
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.err",
                        "path": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 13.277
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.log",
                        "path": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 11.495
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.txt",
                        "path": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 0.064
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.tsv",
                        "path": "/9bd46fae396e69ddc8bc14a6c3702b/MEGAHIT-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 1.26
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/3b/9bd46fae396e69ddc8bc14a6c3702b/",
                        "sizeInBytes": 0.044
                    }
                ],
                "avgCPU": 70.5,
                "bytesRead": 896824.952,
                "bytesWritten": 12219.537,
                "inputFilesBytes": 27.64,
                "outputFilesBytes": 287.256,
                "memory": 87420.928,
                "runtimeInSeconds": 22.0,
                "readBytes": 896824952.0,
                "writtenBytes": 12219537.0,
                "memoryInBytes": 87420928.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "106",
                "type": "compute",
                "command": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix MEGAHIT-MetaBAT2-test_minigut.unbinned.2 \\\n         \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa",
                        "path": "/0c/e5297ab42995f985f9f5e10d0aa650/",
                        "sizeInBytes": 18.168
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.gff",
                        "path": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 22.532
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.gbk",
                        "path": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 38.434
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fna",
                        "path": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 18.146
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.faa",
                        "path": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 6.065
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.ffn",
                        "path": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 16.424
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.sqn",
                        "path": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 69.271
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fsa",
                        "path": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 18.198
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.tbl",
                        "path": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 3.484
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.err",
                        "path": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 13.239
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.log",
                        "path": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 11.497
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.txt",
                        "path": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 0.064
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.tsv",
                        "path": "/6f3c890f8199bf500b3c3f349ddee1/MEGAHIT-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 1.268
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/9c/6f3c890f8199bf500b3c3f349ddee1/",
                        "sizeInBytes": 0.044
                    }
                ],
                "avgCPU": 81.3,
                "bytesRead": 839419.653,
                "bytesWritten": 11827.89,
                "inputFilesBytes": 18.168,
                "outputFilesBytes": 218.66600000000003,
                "memory": 86831.104,
                "runtimeInSeconds": 16.0,
                "readBytes": 839419653.0,
                "writtenBytes": 11827890.0,
                "memoryInBytes": 86831104.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "111",
                "type": "compute",
                "command": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2 \\\n         \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "path": "/25/fad435a8679b7b2d6e7a0c0376b8f8/",
                        "sizeInBytes": 3.34
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.gff",
                        "path": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 4.195
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.gbk",
                        "path": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 7.615
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fna",
                        "path": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 3.318
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.faa",
                        "path": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 1.221
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.ffn",
                        "path": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 3.303
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.sqn",
                        "path": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 15.169
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fsa",
                        "path": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 3.37
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.tbl",
                        "path": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 0.632
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.err",
                        "path": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 5.887
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.log",
                        "path": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 12.075
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.txt",
                        "path": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 0.062
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.tsv",
                        "path": "/06fd46de33d8c0bf3b8ff45b2203a4/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 0.29
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/06/06fd46de33d8c0bf3b8ff45b2203a4/",
                        "sizeInBytes": 0.044
                    }
                ],
                "avgCPU": 79.2,
                "bytesRead": 246201.835,
                "bytesWritten": 10600.375,
                "inputFilesBytes": 3.34,
                "outputFilesBytes": 57.18099999999999,
                "memory": 89894.912,
                "runtimeInSeconds": 9.0,
                "readBytes": 246201835.0,
                "writtenBytes": 10600375.0,
                "memoryInBytes": 89894912.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "113",
                "type": "compute",
                "command": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MetaBAT2-test_minigut.unbinned.2 \\\n         \\\n         \\\n        SPAdes-MetaBAT2-test_minigut.unbinned.2.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.fa",
                        "path": "/db/0958d1883331c1086429c2cb33e79c/",
                        "sizeInBytes": 47.363
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.gff",
                        "path": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 55.792
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.gbk",
                        "path": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 93.099
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.fna",
                        "path": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 47.341
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.faa",
                        "path": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 15.789
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.ffn",
                        "path": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 44.294
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.sqn",
                        "path": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 116.522
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.fsa",
                        "path": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 47.393
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.tbl",
                        "path": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 6.198
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.err",
                        "path": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 23.007
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.log",
                        "path": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 11.286
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.txt",
                        "path": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 0.064
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.tsv",
                        "path": "/60f81c29d813b8ff5be0c4450ebe11/SPAdes-MetaBAT2-test_minigut.unbinned.2/",
                        "sizeInBytes": 2.205
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/51/60f81c29d813b8ff5be0c4450ebe11/",
                        "sizeInBytes": 0.044
                    }
                ],
                "avgCPU": 85.8,
                "bytesRead": 1116259.061,
                "bytesWritten": 12797.692,
                "inputFilesBytes": 47.363,
                "outputFilesBytes": 463.034,
                "memory": 96534.528,
                "runtimeInSeconds": 25.0,
                "readBytes": 1116259061.0,
                "writtenBytes": 12797692.0,
                "memoryInBytes": 96534528.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "110",
                "type": "compute",
                "command": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa         --cpu \"1\"         --out \"BUSCO\" > MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log 2> MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log.\"\n                echo -e \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa\tPlacements failed\" > \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "path": "/25/fad435a8679b7b2d6e7a0c0376b8f8/",
                        "sizeInBytes": 3.34
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901.713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt",
                        "path": "/f4/2b25e66e4794ad80e085d57991a17f/",
                        "sizeInBytes": 0.713
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/f4/2b25e66e4794ad80e085d57991a17f/",
                        "sizeInBytes": 18.129
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log",
                        "path": "/f4/2b25e66e4794ad80e085d57991a17f/",
                        "sizeInBytes": 3.056
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err",
                        "path": "/f4/2b25e66e4794ad80e085d57991a17f/",
                        "sizeInBytes": 0.0
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_prodigal.gff",
                        "path": "/f4/2b25e66e4794ad80e085d57991a17f/",
                        "sizeInBytes": 1.543
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt",
                        "path": "/f4/2b25e66e4794ad80e085d57991a17f/",
                        "sizeInBytes": 0.061
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/f4/2b25e66e4794ad80e085d57991a17f/",
                        "sizeInBytes": 0.081
                    }
                ],
                "avgCPU": 57.2,
                "bytesRead": 162474.16,
                "bytesWritten": 127865.228,
                "inputFilesBytes": 26905.053,
                "outputFilesBytes": 23.583000000000002,
                "memory": 135233.536,
                "runtimeInSeconds": 11.517,
                "readBytes": 162474160.0,
                "writtenBytes": 127865228.0,
                "memoryInBytes": 135233536.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "112",
                "type": "compute",
                "command": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MetaBAT2-test_minigut.unbinned.2.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log 2> SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log.\"\n                echo -e \"SPAdes-MetaBAT2-test_minigut.unbinned.2.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.err.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut.unbinned.2.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut.unbinned.2.fa\tPlacements failed\" > \"SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.fa",
                        "path": "/db/0958d1883331c1086429c2cb33e79c/",
                        "sizeInBytes": 47.363
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901.713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt",
                        "path": "/2b/b9c67b024483e9dcc03590bd534af3/",
                        "sizeInBytes": 0.704
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/2b/b9c67b024483e9dcc03590bd534af3/",
                        "sizeInBytes": 18.129
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.log",
                        "path": "/2b/b9c67b024483e9dcc03590bd534af3/",
                        "sizeInBytes": 3.047
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.err",
                        "path": "/2b/b9c67b024483e9dcc03590bd534af3/",
                        "sizeInBytes": 0.0
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_prodigal.gff",
                        "path": "/2b/b9c67b024483e9dcc03590bd534af3/",
                        "sizeInBytes": 9.157
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.failed_bin.txt",
                        "path": "/2b/b9c67b024483e9dcc03590bd534af3/",
                        "sizeInBytes": 0.052
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/2b/b9c67b024483e9dcc03590bd534af3/",
                        "sizeInBytes": 0.081
                    }
                ],
                "avgCPU": 60.6,
                "bytesRead": 164982.129,
                "bytesWritten": 128022.276,
                "inputFilesBytes": 26949.076,
                "outputFilesBytes": 31.17,
                "memory": 171331.584,
                "runtimeInSeconds": 12.182,
                "readBytes": 164982129.0,
                "writtenBytes": 128022276.0,
                "memoryInBytes": 171331584.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "118",
                "type": "compute",
                "command": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log 2> SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log.\"\n                echo -e \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa\tPlacements failed\" > \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "path": "/df/ee8e1e889cebae9a0e25195f80675f/",
                        "sizeInBytes": 7.81
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901.713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt",
                        "path": "/1a/84f07aa032c5c6074182ab239ba71a/",
                        "sizeInBytes": 0.712
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/1a/84f07aa032c5c6074182ab239ba71a/",
                        "sizeInBytes": 18.129
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log",
                        "path": "/1a/84f07aa032c5c6074182ab239ba71a/",
                        "sizeInBytes": 3.055
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err",
                        "path": "/1a/84f07aa032c5c6074182ab239ba71a/",
                        "sizeInBytes": 0.0
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_prodigal.gff",
                        "path": "/1a/84f07aa032c5c6074182ab239ba71a/",
                        "sizeInBytes": 3.584
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt",
                        "path": "/1a/84f07aa032c5c6074182ab239ba71a/",
                        "sizeInBytes": 0.06
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/1a/84f07aa032c5c6074182ab239ba71a/",
                        "sizeInBytes": 0.081
                    }
                ],
                "avgCPU": 60.8,
                "bytesRead": 162795.334,
                "bytesWritten": 127887.918,
                "inputFilesBytes": 26909.523,
                "outputFilesBytes": 25.621,
                "memory": 121188.352,
                "runtimeInSeconds": 10.912,
                "readBytes": 162795334.0,
                "writtenBytes": 127887918.0,
                "memoryInBytes": 121188352.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "107",
                "type": "compute",
                "command": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa         --cpu \"1\"         --out \"BUSCO\" > MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log 2> MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log.\"\n                echo -e \"MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.err.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa\tPlacements failed\" > \"MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa",
                        "path": "/0c/e5297ab42995f985f9f5e10d0aa650/",
                        "sizeInBytes": 18.168
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901.713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt",
                        "path": "/00/056cc9e0b256cf0fb6f145d85aa73a/",
                        "sizeInBytes": 0.704
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/00/056cc9e0b256cf0fb6f145d85aa73a/",
                        "sizeInBytes": 18.129
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.log",
                        "path": "/00/056cc9e0b256cf0fb6f145d85aa73a/",
                        "sizeInBytes": 2.783
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_busco.err",
                        "path": "/00/056cc9e0b256cf0fb6f145d85aa73a/",
                        "sizeInBytes": 0.0
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_buscos.bacteria_odb10.faa.gz",
                        "path": "/00/056cc9e0b256cf0fb6f145d85aa73a/",
                        "sizeInBytes": 0.511
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_buscos.bacteria_odb10.fna.gz",
                        "path": "/00/056cc9e0b256cf0fb6f145d85aa73a/",
                        "sizeInBytes": 0.786
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa_prodigal.gff",
                        "path": "/00/056cc9e0b256cf0fb6f145d85aa73a/",
                        "sizeInBytes": 5.605
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/00/056cc9e0b256cf0fb6f145d85aa73a/",
                        "sizeInBytes": 0.081
                    }
                ],
                "avgCPU": 60.6,
                "bytesRead": 163394.772,
                "bytesWritten": 127938.358,
                "inputFilesBytes": 26919.881,
                "outputFilesBytes": 28.599000000000004,
                "memory": 171102.208,
                "runtimeInSeconds": 11.584,
                "readBytes": 163394772.0,
                "writtenBytes": 127938358.0,
                "memoryInBytes": 171102208.0
            },
            {
                "name": "NFCORE_MAG.MAG.QUAST_BINS",
                "id": "117",
                "type": "compute",
                "command": "BINS=$(echo \"MEGAHIT-MetaBAT2-test_minigut.2.fa MEGAHIT-MetaBAT2-test_minigut.1.fa MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa\" | sed 's/[][]//g')\n    IFS=', ' read -r -a bins <<< \"$BINS\"\n    for bin in \"${bins[@]}\"; do\n        metaquast.py --threads \"1\" --max-ref-number 0 --rna-finding --gene-finding -l \"${bin}\" \"${bin}\" -o \"QUAST/${bin}\"\n        if ! [ -f \"QUAST/MEGAHIT-MetaBAT2-test_minigut-quast_summary.tsv\" ]; then\n            cp \"QUAST/${bin}/transposed_report.tsv\" \"QUAST/MEGAHIT-MetaBAT2-test_minigut-quast_summary.tsv\"\n        else\n            tail -n +2 \"QUAST/${bin}/transposed_report.tsv\" >> \"QUAST/MEGAHIT-MetaBAT2-test_minigut-quast_summary.tsv\"\n        fi\n    done\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST_BINS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.QUAST_BINS_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.fa",
                        "path": "/d1/af5b3f93228497d9441a56a2846bdd/",
                        "sizeInBytes": 739.909
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.fa",
                        "path": "/61/cf25917be22c0d7cc036bbb291ff61/",
                        "sizeInBytes": 826.502
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa",
                        "path": "/0f/da507fa0645b75fe52bef79d0cff50/",
                        "sizeInBytes": 27.64
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa",
                        "path": "/0c/e5297ab42995f985f9f5e10d0aa650/",
                        "sizeInBytes": 18.168
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.fa",
                        "path": "/0e427f2ecabcff8cfcf237e697e946/QUAST/",
                        "sizeInBytes": 1309.91
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.fa",
                        "path": "/0e427f2ecabcff8cfcf237e697e946/QUAST/",
                        "sizeInBytes": 1320.166
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa",
                        "path": "/0e427f2ecabcff8cfcf237e697e946/QUAST/",
                        "sizeInBytes": 1302.657
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa",
                        "path": "/0e427f2ecabcff8cfcf237e697e946/QUAST/",
                        "sizeInBytes": 1302.469
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut-quast_summary.tsv",
                        "path": "/0e427f2ecabcff8cfcf237e697e946/QUAST/",
                        "sizeInBytes": 0.969
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/93/0e427f2ecabcff8cfcf237e697e946/",
                        "sizeInBytes": 0.068
                    }
                ],
                "avgCPU": 80.2,
                "bytesRead": 386548.885,
                "bytesWritten": 18719.364,
                "inputFilesBytes": 1612.219,
                "outputFilesBytes": 5236.2390000000005,
                "memory": 112857.088,
                "runtimeInSeconds": 25.256,
                "readBytes": 386548885.0,
                "writtenBytes": 18719364.0,
                "memoryInBytes": 112857088.0
            },
            {
                "name": "NFCORE_MAG.MAG.QUAST_BINS",
                "id": "137",
                "type": "compute",
                "command": "BINS=$(echo \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa\" | sed 's/[][]//g')\n    IFS=', ' read -r -a bins <<< \"$BINS\"\n    for bin in \"${bins[@]}\"; do\n        metaquast.py --threads \"1\" --max-ref-number 0 --rna-finding --gene-finding -l \"${bin}\" \"${bin}\" -o \"QUAST/${bin}\"\n        if ! [ -f \"QUAST/SPAdes-MetaBAT2-test_minigut_sample2-quast_summary.tsv\" ]; then\n            cp \"QUAST/${bin}/transposed_report.tsv\" \"QUAST/SPAdes-MetaBAT2-test_minigut_sample2-quast_summary.tsv\"\n        else\n            tail -n +2 \"QUAST/${bin}/transposed_report.tsv\" >> \"QUAST/SPAdes-MetaBAT2-test_minigut_sample2-quast_summary.tsv\"\n        fi\n    done\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST_BINS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.QUAST_BINS_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "path": "/b0/c4c13fb5a30180e93f30b443ab1807/",
                        "sizeInBytes": 6.614
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "path": "/df/ee8e1e889cebae9a0e25195f80675f/",
                        "sizeInBytes": 7.81
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "path": "/75ba09ccb00d7510f1b6163fef05a8/QUAST/",
                        "sizeInBytes": 1340.212
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "path": "/75ba09ccb00d7510f1b6163fef05a8/QUAST/",
                        "sizeInBytes": 1340.504
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2-quast_summary.tsv",
                        "path": "/75ba09ccb00d7510f1b6163fef05a8/QUAST/",
                        "sizeInBytes": 0.672
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/a3/75ba09ccb00d7510f1b6163fef05a8/",
                        "sizeInBytes": 0.068
                    }
                ],
                "avgCPU": 86.2,
                "bytesRead": 242460.867,
                "bytesWritten": 8631.947,
                "inputFilesBytes": 14.424,
                "outputFilesBytes": 2681.456,
                "memory": 148332.544,
                "runtimeInSeconds": 12.055,
                "readBytes": 242460867.0,
                "writtenBytes": 8631947.0,
                "memoryInBytes": 148332544.0
            },
            {
                "name": "NFCORE_MAG.MAG.QUAST_BINS",
                "id": "124",
                "type": "compute",
                "command": "BINS=$(echo \"MEGAHIT-MaxBin2-test_minigut.002.fa MEGAHIT-MaxBin2-test_minigut.001.fa\" | sed 's/[][]//g')\n    IFS=', ' read -r -a bins <<< \"$BINS\"\n    for bin in \"${bins[@]}\"; do\n        metaquast.py --threads \"1\" --max-ref-number 0 --rna-finding --gene-finding -l \"${bin}\" \"${bin}\" -o \"QUAST/${bin}\"\n        if ! [ -f \"QUAST/MEGAHIT-MaxBin2-test_minigut-quast_summary.tsv\" ]; then\n            cp \"QUAST/${bin}/transposed_report.tsv\" \"QUAST/MEGAHIT-MaxBin2-test_minigut-quast_summary.tsv\"\n        else\n            tail -n +2 \"QUAST/${bin}/transposed_report.tsv\" >> \"QUAST/MEGAHIT-MaxBin2-test_minigut-quast_summary.tsv\"\n        fi\n    done\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST_BINS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.QUAST_BINS_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fa",
                        "path": "/8d/60203145275a433cc075347c0757f7/",
                        "sizeInBytes": 808.208
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fa",
                        "path": "/33/d4976d8a94c2e0b2376a0ae32d2791/",
                        "sizeInBytes": 926.53
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fa",
                        "path": "/fa5c60846b08611e13ec4d185fc691/QUAST/",
                        "sizeInBytes": 1313.233
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fa",
                        "path": "/fa5c60846b08611e13ec4d185fc691/QUAST/",
                        "sizeInBytes": 1325.05
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut-quast_summary.tsv",
                        "path": "/fa5c60846b08611e13ec4d185fc691/QUAST/",
                        "sizeInBytes": 0.696
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/29/fa5c60846b08611e13ec4d185fc691/",
                        "sizeInBytes": 0.068
                    }
                ],
                "avgCPU": 87.9,
                "bytesRead": 204599.884,
                "bytesWritten": 10363.684,
                "inputFilesBytes": 1734.7379999999998,
                "outputFilesBytes": 2639.047,
                "memory": 293257.216,
                "runtimeInSeconds": 14.87,
                "readBytes": 204599884.0,
                "writtenBytes": 10363684.0,
                "memoryInBytes": 293257216.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "114",
                "type": "compute",
                "command": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MetaBAT2-test_minigut.unbinned.1.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log 2> SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log.\"\n                echo -e \"SPAdes-MetaBAT2-test_minigut.unbinned.1.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.err.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut.unbinned.1.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut.unbinned.1.fa\tPlacements failed\" > \"SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.fa",
                        "path": "/1f/e0a17ccc19b5d348df7702e0ffceea/",
                        "sizeInBytes": 86.173
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901.713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt",
                        "path": "/3b/07878d030aa541a9e52c22ba4ced01/",
                        "sizeInBytes": 0.703
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/3b/07878d030aa541a9e52c22ba4ced01/",
                        "sizeInBytes": 18.129
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.log",
                        "path": "/3b/07878d030aa541a9e52c22ba4ced01/",
                        "sizeInBytes": 2.782
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_busco.err",
                        "path": "/3b/07878d030aa541a9e52c22ba4ced01/",
                        "sizeInBytes": 0.0
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_buscos.bacteria_odb10.faa.gz",
                        "path": "/3b/07878d030aa541a9e52c22ba4ced01/",
                        "sizeInBytes": 0.954
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_buscos.bacteria_odb10.fna.gz",
                        "path": "/3b/07878d030aa541a9e52c22ba4ced01/",
                        "sizeInBytes": 1.458
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.fa_prodigal.gff",
                        "path": "/3b/07878d030aa541a9e52c22ba4ced01/",
                        "sizeInBytes": 19.984
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/3b/07878d030aa541a9e52c22ba4ced01/",
                        "sizeInBytes": 0.081
                    }
                ],
                "avgCPU": 67.0,
                "bytesRead": 167537.437,
                "bytesWritten": 128249.99,
                "inputFilesBytes": 26987.886,
                "outputFilesBytes": 44.09100000000001,
                "memory": 171896.832,
                "runtimeInSeconds": 14.089,
                "readBytes": 167537437.0,
                "writtenBytes": 128249990.0,
                "memoryInBytes": 171896832.0
            },
            {
                "name": "NFCORE_MAG.MAG.QUAST_BINS",
                "id": "123",
                "type": "compute",
                "command": "BINS=$(echo \"SPAdes-MetaBAT2-test_minigut.1.fa SPAdes-MetaBAT2-test_minigut.2.fa SPAdes-MetaBAT2-test_minigut.unbinned.2.fa SPAdes-MetaBAT2-test_minigut.unbinned.1.fa\" | sed 's/[][]//g')\n    IFS=', ' read -r -a bins <<< \"$BINS\"\n    for bin in \"${bins[@]}\"; do\n        metaquast.py --threads \"1\" --max-ref-number 0 --rna-finding --gene-finding -l \"${bin}\" \"${bin}\" -o \"QUAST/${bin}\"\n        if ! [ -f \"QUAST/SPAdes-MetaBAT2-test_minigut-quast_summary.tsv\" ]; then\n            cp \"QUAST/${bin}/transposed_report.tsv\" \"QUAST/SPAdes-MetaBAT2-test_minigut-quast_summary.tsv\"\n        else\n            tail -n +2 \"QUAST/${bin}/transposed_report.tsv\" >> \"QUAST/SPAdes-MetaBAT2-test_minigut-quast_summary.tsv\"\n        fi\n    done\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST_BINS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.QUAST_BINS_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.fa",
                        "path": "/99/9391bef265fc20cdc627372089b79b/",
                        "sizeInBytes": 749.812
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.fa",
                        "path": "/2c/dc9657212417f3f1714124a02c7b37/",
                        "sizeInBytes": 857.355
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.fa",
                        "path": "/db/0958d1883331c1086429c2cb33e79c/",
                        "sizeInBytes": 47.363
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.fa",
                        "path": "/1f/e0a17ccc19b5d348df7702e0ffceea/",
                        "sizeInBytes": 86.173
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.fa",
                        "path": "/80bbbb344191f41d74b3c89e2d8982/QUAST/",
                        "sizeInBytes": 1340.028
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.fa",
                        "path": "/80bbbb344191f41d74b3c89e2d8982/QUAST/",
                        "sizeInBytes": 1343.418
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.fa",
                        "path": "/80bbbb344191f41d74b3c89e2d8982/QUAST/",
                        "sizeInBytes": 1339.289
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.fa",
                        "path": "/80bbbb344191f41d74b3c89e2d8982/QUAST/",
                        "sizeInBytes": 1340.84
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut-quast_summary.tsv",
                        "path": "/80bbbb344191f41d74b3c89e2d8982/QUAST/",
                        "sizeInBytes": 0.984
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/e3/80bbbb344191f41d74b3c89e2d8982/",
                        "sizeInBytes": 0.068
                    }
                ],
                "avgCPU": 92.1,
                "bytesRead": 489440.048,
                "bytesWritten": 18948.25,
                "inputFilesBytes": 1740.703,
                "outputFilesBytes": 5364.627,
                "memory": 160481.28,
                "runtimeInSeconds": 25.315,
                "readBytes": 489440048.0,
                "writtenBytes": 18948250.0,
                "memoryInBytes": 160481280.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "129",
                "type": "compute",
                "command": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1 \\\n         \\\n         \\\n        SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "path": "/df/ee8e1e889cebae9a0e25195f80675f/",
                        "sizeInBytes": 7.81
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.gff",
                        "path": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 10.295
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.gbk",
                        "path": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 18.113
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fna",
                        "path": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 7.788
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.faa",
                        "path": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 2.422
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.ffn",
                        "path": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 6.333
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.sqn",
                        "path": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 35.664
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fsa",
                        "path": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 7.84
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.tbl",
                        "path": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 1.648
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.err",
                        "path": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 11.211
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.log",
                        "path": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 11.997
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.txt",
                        "path": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 0.063
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.tsv",
                        "path": "/9238e39b30320332b712a766432fdd/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 0.665
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/02/9238e39b30320332b712a766432fdd/",
                        "sizeInBytes": 0.044
                    }
                ],
                "avgCPU": 75.1,
                "bytesRead": 602819.013,
                "bytesWritten": 11291.235,
                "inputFilesBytes": 7.81,
                "outputFilesBytes": 114.083,
                "memory": 94433.28,
                "runtimeInSeconds": 12.0,
                "readBytes": 602819013.0,
                "writtenBytes": 11291235.0,
                "memoryInBytes": 94433280.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "119",
                "type": "compute",
                "command": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log 2> SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log.\"\n                echo -e \"SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa\tNo genes\" > \"SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.err.\"\n        echo -e \"SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa\tNo genes\" > \"SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa\tPlacements failed\" > \"SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa",
                        "path": "/05/688f483a380c53145735b0ec10e7e1/",
                        "sizeInBytes": 2.558
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901.713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt",
                        "path": "/0d/922fde31aa037b2ab959dacef5fbc9/",
                        "sizeInBytes": 0.71
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/0d/922fde31aa037b2ab959dacef5fbc9/",
                        "sizeInBytes": 18.129
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.log",
                        "path": "/0d/922fde31aa037b2ab959dacef5fbc9/",
                        "sizeInBytes": 3.218
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.err",
                        "path": "/0d/922fde31aa037b2ab959dacef5fbc9/",
                        "sizeInBytes": 0.0
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_prodigal.gff",
                        "path": "/0d/922fde31aa037b2ab959dacef5fbc9/",
                        "sizeInBytes": 1.449
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.failed_bin.txt",
                        "path": "/0d/922fde31aa037b2ab959dacef5fbc9/",
                        "sizeInBytes": 0.058
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/0d/922fde31aa037b2ab959dacef5fbc9/",
                        "sizeInBytes": 0.081
                    }
                ],
                "avgCPU": 61.2,
                "bytesRead": 162425.074,
                "bytesWritten": 127871.834,
                "inputFilesBytes": 26904.271,
                "outputFilesBytes": 23.645000000000003,
                "memory": 121352.192,
                "runtimeInSeconds": 10.903,
                "readBytes": 162425074.0,
                "writtenBytes": 127871834.0,
                "memoryInBytes": 121352192.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "108",
                "type": "compute",
                "command": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1 \\\n         \\\n         \\\n        MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "path": "/cd/882f370ae493dd9c8daef9d110ff5c/",
                        "sizeInBytes": 6.59
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.gff",
                        "path": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 7.521
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.gbk",
                        "path": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 10.224
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fna",
                        "path": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 6.568
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.faa",
                        "path": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 0.171
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.ffn",
                        "path": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 5.323
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.sqn",
                        "path": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 14.549
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fsa",
                        "path": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 6.62
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.tbl",
                        "path": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 0.726
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.err",
                        "path": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 5.106
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.log",
                        "path": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 12.495
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.txt",
                        "path": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 0.078
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.tsv",
                        "path": "/aee47d7a4e094c1a0b74b350968648/MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1/",
                        "sizeInBytes": 0.351
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/ee/aee47d7a4e094c1a0b74b350968648/",
                        "sizeInBytes": 0.044
                    }
                ],
                "avgCPU": 78.0,
                "bytesRead": 63066.377,
                "bytesWritten": 1866.359,
                "inputFilesBytes": 6.59,
                "outputFilesBytes": 69.776,
                "memory": 171573.248,
                "runtimeInSeconds": 7.0,
                "readBytes": 63066377.0,
                "writtenBytes": 1866359.0,
                "memoryInBytes": 171573248.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "115",
                "type": "compute",
                "command": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MetaBAT2-test_minigut.unbinned.1 \\\n         \\\n         \\\n        SPAdes-MetaBAT2-test_minigut.unbinned.1.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.fa",
                        "path": "/1f/e0a17ccc19b5d348df7702e0ffceea/",
                        "sizeInBytes": 86.173
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.gff",
                        "path": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 104.068
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.gbk",
                        "path": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 173.625
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.fna",
                        "path": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 86.151
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.faa",
                        "path": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 28.987
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.ffn",
                        "path": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 80.309
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.sqn",
                        "path": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 239.55
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.fsa",
                        "path": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 86.203
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.tbl",
                        "path": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 12.863
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.err",
                        "path": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 45.679
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.log",
                        "path": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 11.491
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.txt",
                        "path": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 0.064
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.tsv",
                        "path": "/50cac81585ab74695be039f9b06ea5/SPAdes-MetaBAT2-test_minigut.unbinned.1/",
                        "sizeInBytes": 4.601
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/31/50cac81585ab74695be039f9b06ea5/",
                        "sizeInBytes": 0.044
                    }
                ],
                "avgCPU": 89.5,
                "bytesRead": 2952679.428,
                "bytesWritten": 14381.638,
                "inputFilesBytes": 86.173,
                "outputFilesBytes": 873.635,
                "memory": 103673.856,
                "runtimeInSeconds": 41.0,
                "readBytes": 2952679428.0,
                "writtenBytes": 14381638.0,
                "memoryInBytes": 103673856.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "125",
                "type": "compute",
                "command": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2 \\\n         \\\n         \\\n        SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "path": "/b0/c4c13fb5a30180e93f30b443ab1807/",
                        "sizeInBytes": 6.614
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.gff",
                        "path": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 7.713
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.gbk",
                        "path": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 10.224
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fna",
                        "path": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 6.592
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.faa",
                        "path": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 0.171
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.ffn",
                        "path": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 5.323
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.sqn",
                        "path": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 14.789
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fsa",
                        "path": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 6.644
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.tbl",
                        "path": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 0.75
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.err",
                        "path": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 5.668
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.log",
                        "path": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 12.55
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.txt",
                        "path": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 0.078
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.tsv",
                        "path": "/5d065a5869540abef8c156a0756d9f/SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2/",
                        "sizeInBytes": 0.351
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/9c/5d065a5869540abef8c156a0756d9f/",
                        "sizeInBytes": 0.044
                    }
                ],
                "avgCPU": 79.2,
                "bytesRead": 63066.355,
                "bytesWritten": 1868.516,
                "inputFilesBytes": 6.614,
                "outputFilesBytes": 70.89699999999999,
                "memory": 161796.096,
                "runtimeInSeconds": 8.0,
                "readBytes": 63066355.0,
                "writtenBytes": 1868516.0,
                "memoryInBytes": 161796096.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "130",
                "type": "compute",
                "command": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MaxBin2-test_minigut_sample2.noclass.2 \\\n         \\\n         \\\n        SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa",
                        "path": "/05/688f483a380c53145735b0ec10e7e1/",
                        "sizeInBytes": 2.558
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.gff",
                        "path": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/",
                        "sizeInBytes": 3.555
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.gbk",
                        "path": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/",
                        "sizeInBytes": 6.231
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fna",
                        "path": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/",
                        "sizeInBytes": 2.536
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.faa",
                        "path": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/",
                        "sizeInBytes": 0.721
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.ffn",
                        "path": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/",
                        "sizeInBytes": 1.836
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.sqn",
                        "path": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/",
                        "sizeInBytes": 12.323
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fsa",
                        "path": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/",
                        "sizeInBytes": 2.588
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.tbl",
                        "path": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/",
                        "sizeInBytes": 0.744
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.err",
                        "path": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/",
                        "sizeInBytes": 6.374
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.log",
                        "path": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/",
                        "sizeInBytes": 11.963
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.txt",
                        "path": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/",
                        "sizeInBytes": 0.062
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.tsv",
                        "path": "/b98febf1fc3c7eb2ff4d942a4e8622/SPAdes-MaxBin2-test_minigut_sample2.noclass.2/",
                        "sizeInBytes": 0.296
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/eb/b98febf1fc3c7eb2ff4d942a4e8622/",
                        "sizeInBytes": 0.044
                    }
                ],
                "avgCPU": 83.1,
                "bytesRead": 154198.812,
                "bytesWritten": 10256.015,
                "inputFilesBytes": 2.558,
                "outputFilesBytes": 49.272999999999996,
                "memory": 46931.968,
                "runtimeInSeconds": 8.0,
                "readBytes": 154198812.0,
                "writtenBytes": 10256015.0,
                "memoryInBytes": 46931968.0
            },
            {
                "name": "NFCORE_MAG.MAG.QUAST_BINS",
                "id": "127",
                "type": "compute",
                "command": "BINS=$(echo \"SPAdes-MaxBin2-test_minigut.002.fa SPAdes-MaxBin2-test_minigut.001.fa\" | sed 's/[][]//g')\n    IFS=', ' read -r -a bins <<< \"$BINS\"\n    for bin in \"${bins[@]}\"; do\n        metaquast.py --threads \"1\" --max-ref-number 0 --rna-finding --gene-finding -l \"${bin}\" \"${bin}\" -o \"QUAST/${bin}\"\n        if ! [ -f \"QUAST/SPAdes-MaxBin2-test_minigut-quast_summary.tsv\" ]; then\n            cp \"QUAST/${bin}/transposed_report.tsv\" \"QUAST/SPAdes-MaxBin2-test_minigut-quast_summary.tsv\"\n        else\n            tail -n +2 \"QUAST/${bin}/transposed_report.tsv\" >> \"QUAST/SPAdes-MaxBin2-test_minigut-quast_summary.tsv\"\n        fi\n    done\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST_BINS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.QUAST_BINS_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fa",
                        "path": "/28/2a3d3dcb177d556ecf9d9f6ccff251/",
                        "sizeInBytes": 860.225
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fa",
                        "path": "/e3/858abab7295808ce6e653d7e95d1c9/",
                        "sizeInBytes": 896.979
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fa",
                        "path": "/68a0d6876a8cb570299735403c1868/QUAST/",
                        "sizeInBytes": 1342.025
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fa",
                        "path": "/68a0d6876a8cb570299735403c1868/QUAST/",
                        "sizeInBytes": 1344.555
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut-quast_summary.tsv",
                        "path": "/68a0d6876a8cb570299735403c1868/QUAST/",
                        "sizeInBytes": 0.705
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/b0/68a0d6876a8cb570299735403c1868/",
                        "sizeInBytes": 0.068
                    }
                ],
                "avgCPU": 84.7,
                "bytesRead": 253813.082,
                "bytesWritten": 10396.176,
                "inputFilesBytes": 1757.2040000000002,
                "outputFilesBytes": 2687.353,
                "memory": 136884.224,
                "runtimeInSeconds": 17.088,
                "readBytes": 253813082.0,
                "writtenBytes": 10396176.0,
                "memoryInBytes": 136884224.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "128",
                "type": "compute",
                "command": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log 2> SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log.\"\n                echo -e \"SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa\tNo genes\" > \"SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.err.\"\n        echo -e \"SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa\tNo genes\" > \"SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa\tPlacements failed\" > \"SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa",
                        "path": "/25/b26b7734ef45adbb9ce3eccfd31840/",
                        "sizeInBytes": 2.806
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901.713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt",
                        "path": "/21/a612f469bfb3131b66630b7b59bbf6/",
                        "sizeInBytes": 0.71
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/21/a612f469bfb3131b66630b7b59bbf6/",
                        "sizeInBytes": 18.129
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.log",
                        "path": "/21/a612f469bfb3131b66630b7b59bbf6/",
                        "sizeInBytes": 3.218
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.err",
                        "path": "/21/a612f469bfb3131b66630b7b59bbf6/",
                        "sizeInBytes": 0.0
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_prodigal.gff",
                        "path": "/21/a612f469bfb3131b66630b7b59bbf6/",
                        "sizeInBytes": 1.448
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.failed_bin.txt",
                        "path": "/21/a612f469bfb3131b66630b7b59bbf6/",
                        "sizeInBytes": 0.058
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/21/a612f469bfb3131b66630b7b59bbf6/",
                        "sizeInBytes": 0.081
                    }
                ],
                "avgCPU": 58.0,
                "bytesRead": 162423.447,
                "bytesWritten": 127871.65,
                "inputFilesBytes": 26904.519,
                "outputFilesBytes": 23.644000000000002,
                "memory": 120889.344,
                "runtimeInSeconds": 11.358,
                "readBytes": 162423447.0,
                "writtenBytes": 127871650.0,
                "memoryInBytes": 120889344.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "105",
                "type": "compute",
                "command": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa         --cpu \"1\"         --out \"BUSCO\" > MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log 2> MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log.\"\n                echo -e \"MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.err.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa\tPlacements failed\" > \"MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa",
                        "path": "/0f/da507fa0645b75fe52bef79d0cff50/",
                        "sizeInBytes": 27.64
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901.713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt",
                        "path": "/dd/67d472dc329d9ecf4445b693374ddb/",
                        "sizeInBytes": 0.705
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/dd/67d472dc329d9ecf4445b693374ddb/",
                        "sizeInBytes": 18.129
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.log",
                        "path": "/dd/67d472dc329d9ecf4445b693374ddb/",
                        "sizeInBytes": 3.048
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.err",
                        "path": "/dd/67d472dc329d9ecf4445b693374ddb/",
                        "sizeInBytes": 0.0
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_prodigal.gff",
                        "path": "/dd/67d472dc329d9ecf4445b693374ddb/",
                        "sizeInBytes": 5.407
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.failed_bin.txt",
                        "path": "/dd/67d472dc329d9ecf4445b693374ddb/",
                        "sizeInBytes": 0.053
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/dd/67d472dc329d9ecf4445b693374ddb/",
                        "sizeInBytes": 0.081
                    }
                ],
                "avgCPU": 61.5,
                "bytesRead": 163802.383,
                "bytesWritten": 127959.478,
                "inputFilesBytes": 26929.353,
                "outputFilesBytes": 27.423,
                "memory": 171003.904,
                "runtimeInSeconds": 12.29,
                "readBytes": 163802383.0,
                "writtenBytes": 127959478.0,
                "memoryInBytes": 171003904.0
            },
            {
                "name": "NFCORE_MAG.MAG.QUAST_BINS",
                "id": "136",
                "type": "compute",
                "command": "BINS=$(echo \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa\" | sed 's/[][]//g')\n    IFS=', ' read -r -a bins <<< \"$BINS\"\n    for bin in \"${bins[@]}\"; do\n        metaquast.py --threads \"1\" --max-ref-number 0 --rna-finding --gene-finding -l \"${bin}\" \"${bin}\" -o \"QUAST/${bin}\"\n        if ! [ -f \"QUAST/MEGAHIT-MetaBAT2-test_minigut_sample2-quast_summary.tsv\" ]; then\n            cp \"QUAST/${bin}/transposed_report.tsv\" \"QUAST/MEGAHIT-MetaBAT2-test_minigut_sample2-quast_summary.tsv\"\n        else\n            tail -n +2 \"QUAST/${bin}/transposed_report.tsv\" >> \"QUAST/MEGAHIT-MetaBAT2-test_minigut_sample2-quast_summary.tsv\"\n        fi\n    done\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST_BINS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.QUAST_BINS_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "path": "/cd/882f370ae493dd9c8daef9d110ff5c/",
                        "sizeInBytes": 6.59
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "path": "/25/fad435a8679b7b2d6e7a0c0376b8f8/",
                        "sizeInBytes": 3.34
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "path": "/732a25090d4beb96662fe81e12ba19/QUAST/",
                        "sizeInBytes": 1303.268
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "path": "/732a25090d4beb96662fe81e12ba19/QUAST/",
                        "sizeInBytes": 1303.226
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2-quast_summary.tsv",
                        "path": "/732a25090d4beb96662fe81e12ba19/QUAST/",
                        "sizeInBytes": 0.668
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/ab/732a25090d4beb96662fe81e12ba19/",
                        "sizeInBytes": 0.068
                    }
                ],
                "avgCPU": 80.8,
                "bytesRead": 189741.711,
                "bytesWritten": 8543.863,
                "inputFilesBytes": 9.93,
                "outputFilesBytes": 2607.2300000000005,
                "memory": 88023.04,
                "runtimeInSeconds": 11.365,
                "readBytes": 189741711.0,
                "writtenBytes": 8543863.0,
                "memoryInBytes": 88023040.0
            },
            {
                "name": "NFCORE_MAG.MAG.QUAST_BINS",
                "id": "135",
                "type": "compute",
                "command": "BINS=$(echo \"SPAdes-MaxBin2-test_minigut_sample2.001.fa SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa\" | sed 's/[][]//g')\n    IFS=', ' read -r -a bins <<< \"$BINS\"\n    for bin in \"${bins[@]}\"; do\n        metaquast.py --threads \"1\" --max-ref-number 0 --rna-finding --gene-finding -l \"${bin}\" \"${bin}\" -o \"QUAST/${bin}\"\n        if ! [ -f \"QUAST/SPAdes-MaxBin2-test_minigut_sample2-quast_summary.tsv\" ]; then\n            cp \"QUAST/${bin}/transposed_report.tsv\" \"QUAST/SPAdes-MaxBin2-test_minigut_sample2-quast_summary.tsv\"\n        else\n            tail -n +2 \"QUAST/${bin}/transposed_report.tsv\" >> \"QUAST/SPAdes-MaxBin2-test_minigut_sample2-quast_summary.tsv\"\n        fi\n    done\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST_BINS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        metaquast: $(metaquast.py --version | sed \"s/QUAST v//; s/ (MetaQUAST mode)//\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.QUAST_BINS_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fa",
                        "path": "/2c/3e4c6ddb49c5797adf2ca908ee03f0/",
                        "sizeInBytes": 182.135
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa",
                        "path": "/05/688f483a380c53145735b0ec10e7e1/",
                        "sizeInBytes": 2.558
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa",
                        "path": "/25/b26b7734ef45adbb9ce3eccfd31840/",
                        "sizeInBytes": 2.806
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fa",
                        "path": "/e5dc8a91b79dee2a7146e0ffa69a0c/QUAST/",
                        "sizeInBytes": 1361.762
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa",
                        "path": "/e5dc8a91b79dee2a7146e0ffa69a0c/QUAST/",
                        "sizeInBytes": 1339.878
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa",
                        "path": "/e5dc8a91b79dee2a7146e0ffa69a0c/QUAST/",
                        "sizeInBytes": 1338.618
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2-quast_summary.tsv",
                        "path": "/e5dc8a91b79dee2a7146e0ffa69a0c/QUAST/",
                        "sizeInBytes": 0.805
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/53/e5dc8a91b79dee2a7146e0ffa69a0c/",
                        "sizeInBytes": 0.068
                    }
                ],
                "avgCPU": 89.2,
                "bytesRead": 369513.817,
                "bytesWritten": 13143.014,
                "inputFilesBytes": 187.499,
                "outputFilesBytes": 4041.131,
                "memory": 92942.336,
                "runtimeInSeconds": 17.015,
                "readBytes": 369513817.0,
                "writtenBytes": 13143014.0,
                "memoryInBytes": 92942336.0
            },
            {
                "name": "NFCORE_MAG.MAG.PROKKA",
                "id": "132",
                "type": "compute",
                "command": "prokka \\\n        --metagenome \\\n        --cpus 1 \\\n        --prefix SPAdes-MaxBin2-test_minigut_sample2.noclass.1 \\\n         \\\n         \\\n        SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:PROKKA\":\n        prokka: $(echo $(prokka --version 2>&1) | sed 's/^.*prokka //')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa",
                        "path": "/25/b26b7734ef45adbb9ce3eccfd31840/",
                        "sizeInBytes": 2.806
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.gff",
                        "path": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/",
                        "sizeInBytes": 3.741
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.gbk",
                        "path": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/",
                        "sizeInBytes": 6.549
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fna",
                        "path": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/",
                        "sizeInBytes": 2.784
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.faa",
                        "path": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/",
                        "sizeInBytes": 0.692
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.ffn",
                        "path": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/",
                        "sizeInBytes": 1.781
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.sqn",
                        "path": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/",
                        "sizeInBytes": 12.709
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fsa",
                        "path": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/",
                        "sizeInBytes": 2.836
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.tbl",
                        "path": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/",
                        "sizeInBytes": 0.69
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.err",
                        "path": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/",
                        "sizeInBytes": 6.076
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.log",
                        "path": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/",
                        "sizeInBytes": 11.808
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.txt",
                        "path": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/",
                        "sizeInBytes": 0.062
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.tsv",
                        "path": "/bf181196559eb203a5a821022e783e/SPAdes-MaxBin2-test_minigut_sample2.noclass.1/",
                        "sizeInBytes": 0.264
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/7d/bf181196559eb203a5a821022e783e/",
                        "sizeInBytes": 0.044
                    }
                ],
                "avgCPU": 73.5,
                "bytesRead": 154639.519,
                "bytesWritten": 10287.447,
                "inputFilesBytes": 2.806,
                "outputFilesBytes": 50.035999999999994,
                "memory": 58933.248,
                "runtimeInSeconds": 9.0,
                "readBytes": 154639519.0,
                "writtenBytes": 10287447.0,
                "memoryInBytes": 58933248.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "109",
                "type": "compute",
                "command": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa         --cpu \"1\"         --out \"BUSCO\" > MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log 2> MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log.\"\n                echo -e \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa\tNo genes\" > \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa\tPlacements failed\" > \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "path": "/cd/882f370ae493dd9c8daef9d110ff5c/",
                        "sizeInBytes": 6.59
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901.713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt",
                        "path": "/de/9424c88160a29cbe98e6db3e5eddd6/",
                        "sizeInBytes": 0.713
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/de/9424c88160a29cbe98e6db3e5eddd6/",
                        "sizeInBytes": 18.129
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.log",
                        "path": "/de/9424c88160a29cbe98e6db3e5eddd6/",
                        "sizeInBytes": 3.221
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.err",
                        "path": "/de/9424c88160a29cbe98e6db3e5eddd6/",
                        "sizeInBytes": 0.0
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_prodigal.gff",
                        "path": "/de/9424c88160a29cbe98e6db3e5eddd6/",
                        "sizeInBytes": 1.086
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt",
                        "path": "/de/9424c88160a29cbe98e6db3e5eddd6/",
                        "sizeInBytes": 0.061
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/de/9424c88160a29cbe98e6db3e5eddd6/",
                        "sizeInBytes": 0.081
                    }
                ],
                "avgCPU": 56.6,
                "bytesRead": 162383.429,
                "bytesWritten": 127865.373,
                "inputFilesBytes": 26908.303,
                "outputFilesBytes": 23.291,
                "memory": 121135.104,
                "runtimeInSeconds": 11.846,
                "readBytes": 162383429.0,
                "writtenBytes": 127865373.0,
                "memoryInBytes": 121135104.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                "id": "121",
                "type": "compute",
                "command": "get_mag_depths.py --bins MEGAHIT-MaxBin2-test_minigut.002.fa MEGAHIT-MaxBin2-test_minigut.001.fa \\\n                    --depths MEGAHIT-test_minigut-depth.txt.gz \\\n                    --assembler MEGAHIT \\\n                    --id test_minigut \\\n                    --binner MaxBin2\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut.002.fa",
                        "path": "/8d/60203145275a433cc075347c0757f7/",
                        "sizeInBytes": 808.208
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut.001.fa",
                        "path": "/33/d4976d8a94c2e0b2376a0ae32d2791/",
                        "sizeInBytes": 926.53
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut-depth.txt.gz",
                        "path": "/f6/6a47e0524654d82be0e49d00c99f57/",
                        "sizeInBytes": 5.294
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut-binDepths.tsv",
                        "path": "/0e/51dc37ddf45a8a1d257f31210ed41e/",
                        "sizeInBytes": 0.135
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/0e/51dc37ddf45a8a1d257f31210ed41e/",
                        "sizeInBytes": 0.073
                    }
                ],
                "avgCPU": 41.1,
                "bytesRead": 13720.647,
                "bytesWritten": 0.508,
                "inputFilesBytes": 1740.032,
                "outputFilesBytes": 0.20800000000000002,
                "memory": 67919.872,
                "runtimeInSeconds": 5.0,
                "readBytes": 13720647.0,
                "writtenBytes": 508.0,
                "memoryInBytes": 67919872.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                "id": "131",
                "type": "compute",
                "command": "get_mag_depths.py --bins MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa \\\n                    --depths MEGAHIT-test_minigut_sample2-depth.txt.gz \\\n                    --assembler MEGAHIT \\\n                    --id test_minigut_sample2 \\\n                    --binner MetaBAT2\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "path": "/cd/882f370ae493dd9c8daef9d110ff5c/",
                        "sizeInBytes": 6.59
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "path": "/25/fad435a8679b7b2d6e7a0c0376b8f8/",
                        "sizeInBytes": 3.34
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2-depth.txt.gz",
                        "path": "/2e/a229c3916a098bd7377027fedb4d42/",
                        "sizeInBytes": 18.819
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2-binDepths.tsv",
                        "path": "/3f/89d58d5f5a6ea4c27460a9e94b4343/",
                        "sizeInBytes": 0.172
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/3f/89d58d5f5a6ea4c27460a9e94b4343/",
                        "sizeInBytes": 0.073
                    }
                ],
                "avgCPU": 76.4,
                "bytesRead": 12009.413,
                "bytesWritten": 0.545,
                "inputFilesBytes": 28.749,
                "outputFilesBytes": 0.245,
                "memory": 48979.968,
                "runtimeInSeconds": 2.0,
                "readBytes": 12009413.0,
                "writtenBytes": 545.0,
                "memoryInBytes": 48979968.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                "id": "133",
                "type": "compute",
                "command": "get_mag_depths.py --bins SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa \\\n                    --depths SPAdes-test_minigut_sample2-depth.txt.gz \\\n                    --assembler SPAdes \\\n                    --id test_minigut_sample2 \\\n                    --binner MetaBAT2\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "path": "/b0/c4c13fb5a30180e93f30b443ab1807/",
                        "sizeInBytes": 6.614
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa",
                        "path": "/df/ee8e1e889cebae9a0e25195f80675f/",
                        "sizeInBytes": 7.81
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2-depth.txt.gz",
                        "path": "/79/03b1ed263b1ee1ec46fe396818f239/",
                        "sizeInBytes": 71.343
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2-binDepths.tsv",
                        "path": "/83/74fe64a2bed18c6ba5af48eca390d0/",
                        "sizeInBytes": 0.17
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/83/74fe64a2bed18c6ba5af48eca390d0/",
                        "sizeInBytes": 0.073
                    }
                ],
                "avgCPU": 86.2,
                "bytesRead": 12066.426,
                "bytesWritten": 0.543,
                "inputFilesBytes": 85.767,
                "outputFilesBytes": 0.243,
                "memory": 57442.304,
                "runtimeInSeconds": 2.0,
                "readBytes": 12066426.0,
                "writtenBytes": 543.0,
                "memoryInBytes": 57442304.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                "id": "134",
                "type": "compute",
                "command": "get_mag_depths.py --bins SPAdes-MaxBin2-test_minigut_sample2.001.fa SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa \\\n                    --depths SPAdes-test_minigut_sample2-depth.txt.gz \\\n                    --assembler SPAdes \\\n                    --id test_minigut_sample2 \\\n                    --binner MaxBin2\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.001.fa",
                        "path": "/2c/3e4c6ddb49c5797adf2ca908ee03f0/",
                        "sizeInBytes": 182.135
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa",
                        "path": "/05/688f483a380c53145735b0ec10e7e1/",
                        "sizeInBytes": 2.558
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa",
                        "path": "/25/b26b7734ef45adbb9ce3eccfd31840/",
                        "sizeInBytes": 2.806
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2-depth.txt.gz",
                        "path": "/79/03b1ed263b1ee1ec46fe396818f239/",
                        "sizeInBytes": 71.343
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2-binDepths.tsv",
                        "path": "/6b/c98cdd973d773b166cdea86c59b9fe/",
                        "sizeInBytes": 0.224
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/6b/c98cdd973d773b166cdea86c59b9fe/",
                        "sizeInBytes": 0.073
                    }
                ],
                "avgCPU": 73.5,
                "bytesRead": 12239.539,
                "bytesWritten": 0.597,
                "inputFilesBytes": 258.842,
                "outputFilesBytes": 0.297,
                "memory": 68112.384,
                "runtimeInSeconds": 3.0,
                "readBytes": 12239539.0,
                "writtenBytes": 597.0,
                "memoryInBytes": 68112384.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                "id": "126",
                "type": "compute",
                "command": "get_mag_depths.py --bins SPAdes-MaxBin2-test_minigut.002.fa SPAdes-MaxBin2-test_minigut.001.fa \\\n                    --depths SPAdes-test_minigut-depth.txt.gz \\\n                    --assembler SPAdes \\\n                    --id test_minigut \\\n                    --binner MaxBin2\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut.002.fa",
                        "path": "/28/2a3d3dcb177d556ecf9d9f6ccff251/",
                        "sizeInBytes": 860.225
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut.001.fa",
                        "path": "/e3/858abab7295808ce6e653d7e95d1c9/",
                        "sizeInBytes": 896.979
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut-depth.txt.gz",
                        "path": "/4d/44326243720ca4a7cc916be905b3c4/",
                        "sizeInBytes": 2.127
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut-binDepths.tsv",
                        "path": "/a9/dfd61de3ae0e9f42b9bf29dd99ff94/",
                        "sizeInBytes": 0.149
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/a9/dfd61de3ae0e9f42b9bf29dd99ff94/",
                        "sizeInBytes": 0.073
                    }
                ],
                "avgCPU": 87.5,
                "bytesRead": 13739.941,
                "bytesWritten": 0.522,
                "inputFilesBytes": 1759.3310000000001,
                "outputFilesBytes": 0.22199999999999998,
                "memory": 54366.208,
                "runtimeInSeconds": 2.0,
                "readBytes": 13739941.0,
                "writtenBytes": 522.0,
                "memoryInBytes": 54366208.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                "id": "120",
                "type": "compute",
                "command": "get_mag_depths.py --bins MEGAHIT-MetaBAT2-test_minigut.2.fa MEGAHIT-MetaBAT2-test_minigut.1.fa MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa \\\n                    --depths MEGAHIT-test_minigut-depth.txt.gz \\\n                    --assembler MEGAHIT \\\n                    --id test_minigut \\\n                    --binner MetaBAT2\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.2.fa",
                        "path": "/d1/af5b3f93228497d9441a56a2846bdd/",
                        "sizeInBytes": 739.909
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.1.fa",
                        "path": "/61/cf25917be22c0d7cc036bbb291ff61/",
                        "sizeInBytes": 826.502
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa",
                        "path": "/0f/da507fa0645b75fe52bef79d0cff50/",
                        "sizeInBytes": 27.64
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa",
                        "path": "/0c/e5297ab42995f985f9f5e10d0aa650/",
                        "sizeInBytes": 18.168
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut-depth.txt.gz",
                        "path": "/f6/6a47e0524654d82be0e49d00c99f57/",
                        "sizeInBytes": 5.294
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut-binDepths.tsv",
                        "path": "/6a/95ee9d72f227cf503178f287f9c9ef/",
                        "sizeInBytes": 0.244
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/6a/95ee9d72f227cf503178f287f9c9ef/",
                        "sizeInBytes": 0.073
                    }
                ],
                "avgCPU": 68.2,
                "bytesRead": 13598.214,
                "bytesWritten": 0.617,
                "inputFilesBytes": 1617.5130000000001,
                "outputFilesBytes": 0.317,
                "memory": 67248.128,
                "runtimeInSeconds": 2.0,
                "readBytes": 13598214.0,
                "writtenBytes": 617.0,
                "memoryInBytes": 67248128.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                "id": "122",
                "type": "compute",
                "command": "get_mag_depths.py --bins SPAdes-MetaBAT2-test_minigut.1.fa SPAdes-MetaBAT2-test_minigut.2.fa SPAdes-MetaBAT2-test_minigut.unbinned.2.fa SPAdes-MetaBAT2-test_minigut.unbinned.1.fa \\\n                    --depths SPAdes-test_minigut-depth.txt.gz \\\n                    --assembler SPAdes \\\n                    --id test_minigut \\\n                    --binner MetaBAT2\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.1.fa",
                        "path": "/99/9391bef265fc20cdc627372089b79b/",
                        "sizeInBytes": 749.812
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.2.fa",
                        "path": "/2c/dc9657212417f3f1714124a02c7b37/",
                        "sizeInBytes": 857.355
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.fa",
                        "path": "/db/0958d1883331c1086429c2cb33e79c/",
                        "sizeInBytes": 47.363
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.1.fa",
                        "path": "/1f/e0a17ccc19b5d348df7702e0ffceea/",
                        "sizeInBytes": 86.173
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut-depth.txt.gz",
                        "path": "/4d/44326243720ca4a7cc916be905b3c4/",
                        "sizeInBytes": 2.127
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut-binDepths.tsv",
                        "path": "/f9/e92d13b4ffdc65bdd3692de2b876c7/",
                        "sizeInBytes": 0.257
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/f9/e92d13b4ffdc65bdd3692de2b876c7/",
                        "sizeInBytes": 0.073
                    }
                ],
                "avgCPU": 77.3,
                "bytesRead": 13723.524,
                "bytesWritten": 0.63,
                "inputFilesBytes": 1742.83,
                "outputFilesBytes": 0.33,
                "memory": 50380.8,
                "runtimeInSeconds": 2.0,
                "readBytes": 13723524.0,
                "writtenBytes": 630.0,
                "memoryInBytes": 50380800.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                "id": "116",
                "type": "compute",
                "command": "# ensure augustus has write access to config directory\n    if [ Y = \"Y\" ] ; then\n        cp -r /usr/local/config/ augustus_config/\n        export AUGUSTUS_CONFIG_PATH=augustus_config\n    fi\n\n    # place db in extra folder to ensure BUSCO recognizes it as path (instead of downloading it)\n    if [ Y = \"Y\" ] ; then\n        mkdir dataset\n        mv bacteria_odb10 dataset/\n    fi\n\n    # set nullgob: if pattern matches no files, expand to a null string rather than to itself\n    shopt -s nullglob\n\n    # only used for saving busco downloads\n    most_spec_db=\"NA\"\n\n    if busco --lineage_dataset dataset/bacteria_odb10         --mode genome         --in SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa         --cpu \"1\"         --out \"BUSCO\" > SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log 2> SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err; then\n\n        # get name of used specific lineage dataset\n        summaries=(BUSCO/short_summary.specific.*.BUSCO.txt)\n        if [ ${#summaries[@]} -ne 1 ]; then\n            echo \"ERROR: none or multiple 'BUSCO/short_summary.specific.*.BUSCO.txt' files found. Expected one.\"\n            exit 1\n        fi\n        [[ $summaries =~ BUSCO/short_summary.specific.(.*).BUSCO.txt ]];\n        db_name_spec=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_spec}\n        echo \"Used specific lineage dataset: ${db_name_spec}\"\n\n        if [ Y = \"Y\" ]; then\n            cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n\n            # if lineage dataset is provided, BUSCO analysis does not fail in case no genes can be found as when using the auto selection setting\n            # report bin as failed to allow consistent warnings within the pipeline for both settings\n            if egrep -q $'WARNING:\tBUSCO did not find any match.' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log ; then\n                echo \"WARNING: BUSCO could not find any genes for the provided lineage dataset! See also SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log.\"\n                echo -e \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt\"\n            fi\n        else\n            # auto lineage selection\n            if { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tLineage \\S+ is selected, supported by ' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log ; } ||                 { egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tThe results from the Prodigal gene predictor indicate that your data belongs to the mollicutes clade. Testing subclades...' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log                 && egrep -q $'INFO:\tUsing local lineages directory ' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log ; }; then\n                # the second statement is necessary, because certain mollicute clades use a different genetic code, are not part of the BUSCO placement tree, are tested separately\n                # and cause different log messages\n                echo \"Domain and specific lineage could be selected by BUSCO.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n\n                db_name_gen=\"\"\n                summaries_gen=(BUSCO/short_summary.generic.*.BUSCO.txt)\n                if [ ${#summaries_gen[@]} -lt 1 ]; then\n                    echo \"No 'BUSCO/short_summary.generic.*.BUSCO.txt' file found. Assuming selected domain and specific lineages are the same.\"\n                    cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n                    db_name_gen=${db_name_spec}\n                else\n                    [[ $summaries_gen =~ BUSCO/short_summary.generic.(.*).BUSCO.txt ]];\n                    db_name_gen=\"${BASH_REMATCH[1]}\"\n                    echo \"Used generic lineage dataset: ${db_name_gen}\"\n                    cp BUSCO/short_summary.generic.${db_name_gen}.BUSCO.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n                fi\n\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_gen}.faa.gz\n                    break\n                done\n                for f in BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n                    cat BUSCO/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_gen}.fna.gz\n                    break\n                done\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log && egrep -q $'INFO:\tNot enough markers were placed on the tree \\([0-9]*\\). Root lineage \\S+ is kept' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log ; then\n                echo \"Domain could be selected by BUSCO, but no more specific lineage.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.domain.${db_name_spec}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n\n            elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log && egrep -q $'INFO:\tRunning virus detection pipeline' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log ; then\n                # TODO double-check if selected dataset is not one of bacteria_*, archaea_*, eukaryota_*?\n                echo \"Domain could not be selected by BUSCO, but virus dataset was selected.\"\n                cp BUSCO/short_summary.specific.${db_name_spec}.BUSCO.txt short_summary.specific_lineage.${db_name_spec}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n            else\n                echo \"ERROR: Some not expected case occurred! See SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log.\" >&2\n                exit 1\n            fi\n        fi\n\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_spec}.faa.gz\n            break\n        done\n        for f in BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/run_${db_name_spec}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_spec}.fna.gz\n            break\n        done\n\n    elif egrep -q $'ERROR:\tNo genes were recognized by BUSCO' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to no recognized genes! See also SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa\tNo genes\" > \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt\"\n\n    elif egrep -q $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log && egrep -q $'ERROR:\tPlacements failed' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err ; then\n        echo \"WARNING: BUSCO analysis failed due to failed placements! See also SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err. Still using results for selected generic lineage dataset.\"\n        echo -e \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa\tPlacements failed\" > \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt\"\n\n        message=$(egrep $'INFO:\t\\S+ selected' SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log)\n        [[ $message =~ INFO:[[:space:]]([_[:alnum:]]+)[[:space:]]selected ]];\n        db_name_gen=\"${BASH_REMATCH[1]}\"\n        most_spec_db=${db_name_gen}\n        echo \"Used generic lineage dataset: ${db_name_gen}\"\n        cp BUSCO/auto_lineage/run_${db_name_gen}/short_summary.txt short_summary.domain.${db_name_gen}.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\n\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*faa | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_gen}.faa.gz\n            break\n        done\n        for f in BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna; do\n            cat BUSCO/auto_lineage/run_${db_name_gen}/busco_sequences/single_copy_busco_sequences/*fna | gzip >SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_buscos.${db_name_gen}.fna.gz\n            break\n        done\n\n    else\n        echo \"ERROR: BUSCO analysis failed for some unknown reason! See also SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err.\" >&2\n        exit 1\n    fi\n\n    # additionally output genes predicted with Prodigal (GFF3)\n    if [ -f BUSCO/logs/prodigal_out.log ]; then\n        mv BUSCO/logs/prodigal_out.log \"SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_prodigal.gff\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_DB_PREPARATION"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa",
                        "path": "/b0/c4c13fb5a30180e93f30b443ab1807/",
                        "sizeInBytes": 6.614
                    },
                    {
                        "link": "input",
                        "name": "bacteria_odb10",
                        "path": "/3b8667566a46b50251687dc3dbcaeb/buscodb/",
                        "sizeInBytes": 26901.713
                    },
                    {
                        "link": "output",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt",
                        "path": "/a5/11a719f47864c4209cfd42c943c6a0/",
                        "sizeInBytes": 0.712
                    },
                    {
                        "link": "output",
                        "name": "busco_downloads",
                        "path": "/a5/11a719f47864c4209cfd42c943c6a0/",
                        "sizeInBytes": 18.129
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.log",
                        "path": "/a5/11a719f47864c4209cfd42c943c6a0/",
                        "sizeInBytes": 3.22
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.err",
                        "path": "/a5/11a719f47864c4209cfd42c943c6a0/",
                        "sizeInBytes": 0.0
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_prodigal.gff",
                        "path": "/a5/11a719f47864c4209cfd42c943c6a0/",
                        "sizeInBytes": 1.206
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt",
                        "path": "/a5/11a719f47864c4209cfd42c943c6a0/",
                        "sizeInBytes": 0.06
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/a5/11a719f47864c4209cfd42c943c6a0/",
                        "sizeInBytes": 0.081
                    }
                ],
                "avgCPU": 57.7,
                "bytesRead": 162396.953,
                "bytesWritten": 127866.9,
                "inputFilesBytes": 26908.327,
                "outputFilesBytes": 23.407999999999998,
                "memory": 120717.312,
                "runtimeInSeconds": 11.721,
                "readBytes": 162396953.0,
                "writtenBytes": 127866900.0,
                "memoryInBytes": 120717312.0
            },
            {
                "name": "NFCORE_MAG.MAG.QUAST_BINS_SUMMARY",
                "id": "138",
                "type": "compute",
                "command": "QUAST_BIN=$(echo \"MEGAHIT-MetaBAT2-test_minigut-quast_summary.tsv SPAdes-MetaBAT2-test_minigut_sample2-quast_summary.tsv MEGAHIT-MaxBin2-test_minigut-quast_summary.tsv SPAdes-MetaBAT2-test_minigut-quast_summary.tsv SPAdes-MaxBin2-test_minigut-quast_summary.tsv MEGAHIT-MetaBAT2-test_minigut_sample2-quast_summary.tsv SPAdes-MaxBin2-test_minigut_sample2-quast_summary.tsv\" | sed 's/[][]//g')\n    IFS=', ' read -r -a quast_bin <<< \"$QUAST_BIN\"\n    for quast_file in \"${quast_bin[@]}\"; do\n        if ! [ -f \"quast_summary.tsv\" ]; then\n            cp \"${quast_file}\" \"quast_summary.tsv\"\n        else\n            tail -n +2 \"${quast_file}\" >> \"quast_summary.tsv\"\n        fi\n    done\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:QUAST_BINS_SUMMARY\":\n        sed: $(sed --version 2>&1 | sed -n 1p | sed 's/sed (GNU sed) //')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.QUAST_BINS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BIN_SUMMARY"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut-quast_summary.tsv",
                        "path": "/0e427f2ecabcff8cfcf237e697e946/QUAST/",
                        "sizeInBytes": 0.969
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2-quast_summary.tsv",
                        "path": "/75ba09ccb00d7510f1b6163fef05a8/QUAST/",
                        "sizeInBytes": 0.672
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut-quast_summary.tsv",
                        "path": "/fa5c60846b08611e13ec4d185fc691/QUAST/",
                        "sizeInBytes": 0.696
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut-quast_summary.tsv",
                        "path": "/80bbbb344191f41d74b3c89e2d8982/QUAST/",
                        "sizeInBytes": 0.984
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut-quast_summary.tsv",
                        "path": "/68a0d6876a8cb570299735403c1868/QUAST/",
                        "sizeInBytes": 0.705
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2-quast_summary.tsv",
                        "path": "/732a25090d4beb96662fe81e12ba19/QUAST/",
                        "sizeInBytes": 0.668
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2-quast_summary.tsv",
                        "path": "/e5dc8a91b79dee2a7146e0ffa69a0c/QUAST/",
                        "sizeInBytes": 0.805
                    },
                    {
                        "link": "output",
                        "name": "quast_summary.tsv",
                        "path": "/3e/1dd392ebd00f7498212164127990ba/",
                        "sizeInBytes": 3.069
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/3e/1dd392ebd00f7498212164127990ba/",
                        "sizeInBytes": 0.05
                    }
                ],
                "avgCPU": 15.2,
                "bytesRead": 147.072,
                "bytesWritten": 5.021,
                "inputFilesBytes": 5.499,
                "outputFilesBytes": 3.1189999999999998,
                "memory": 3129.344,
                "runtimeInSeconds": 0.26,
                "readBytes": 147072.0,
                "writtenBytes": 5021.0,
                "memoryInBytes": 3129344.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                "id": "139",
                "type": "compute",
                "command": "plot_mag_depths.py --bin_depths MEGAHIT-MaxBin2-test_minigut-binDepths.tsv                     --groups sample_groups.tsv                     --out \"MEGAHIT-MaxBin2-test_minigut-binDepths.heatmap.png\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n        seaborn: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('seaborn').version)\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut-binDepths.tsv",
                        "path": "/0e/51dc37ddf45a8a1d257f31210ed41e/",
                        "sizeInBytes": 0.135
                    },
                    {
                        "link": "input",
                        "name": "sample_groups.tsv",
                        "path": "/11/13d0058bde55bb4f6f22246229827e/",
                        "sizeInBytes": 0.038
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut-binDepths.heatmap.png",
                        "path": "/d2/547c82e39ef05977978241fc65d4a8/",
                        "sizeInBytes": 19.85
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/d2/547c82e39ef05977978241fc65d4a8/",
                        "sizeInBytes": 0.098
                    }
                ],
                "avgCPU": 41.5,
                "bytesRead": 34358.475,
                "bytesWritten": 20.295,
                "inputFilesBytes": 0.17300000000000001,
                "outputFilesBytes": 19.948,
                "memory": 126615.552,
                "runtimeInSeconds": 10.0,
                "readBytes": 34358475.0,
                "writtenBytes": 20295.0,
                "memoryInBytes": 126615552.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                "id": "140",
                "type": "compute",
                "command": "plot_mag_depths.py --bin_depths MEGAHIT-MetaBAT2-test_minigut_sample2-binDepths.tsv                     --groups sample_groups.tsv                     --out \"MEGAHIT-MetaBAT2-test_minigut_sample2-binDepths.heatmap.png\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n        seaborn: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('seaborn').version)\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2-binDepths.tsv",
                        "path": "/3f/89d58d5f5a6ea4c27460a9e94b4343/",
                        "sizeInBytes": 0.172
                    },
                    {
                        "link": "input",
                        "name": "sample_groups.tsv",
                        "path": "/11/13d0058bde55bb4f6f22246229827e/",
                        "sizeInBytes": 0.038
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2-binDepths.heatmap.png",
                        "path": "/56/c0dfe28532e158c500482f1a27e37d/",
                        "sizeInBytes": 22.168
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/56/c0dfe28532e158c500482f1a27e37d/",
                        "sizeInBytes": 0.098
                    }
                ],
                "avgCPU": 90.1,
                "bytesRead": 35902.7,
                "bytesWritten": 22.598,
                "inputFilesBytes": 0.21,
                "outputFilesBytes": 22.266,
                "memory": 127590.4,
                "runtimeInSeconds": 4.0,
                "readBytes": 35902700.0,
                "writtenBytes": 22598.0,
                "memoryInBytes": 127590400.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                "id": "141",
                "type": "compute",
                "command": "plot_mag_depths.py --bin_depths SPAdes-MetaBAT2-test_minigut_sample2-binDepths.tsv                     --groups sample_groups.tsv                     --out \"SPAdes-MetaBAT2-test_minigut_sample2-binDepths.heatmap.png\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n        seaborn: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('seaborn').version)\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2-binDepths.tsv",
                        "path": "/83/74fe64a2bed18c6ba5af48eca390d0/",
                        "sizeInBytes": 0.17
                    },
                    {
                        "link": "input",
                        "name": "sample_groups.tsv",
                        "path": "/11/13d0058bde55bb4f6f22246229827e/",
                        "sizeInBytes": 0.038
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2-binDepths.heatmap.png",
                        "path": "/bf/afb1637bffc0858e9f84cb10a77788/",
                        "sizeInBytes": 22.503
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/bf/afb1637bffc0858e9f84cb10a77788/",
                        "sizeInBytes": 0.098
                    }
                ],
                "avgCPU": 90.3,
                "bytesRead": 35861.736,
                "bytesWritten": 22.933,
                "inputFilesBytes": 0.20800000000000002,
                "outputFilesBytes": 22.601,
                "memory": 127578.112,
                "runtimeInSeconds": 4.0,
                "readBytes": 35861736.0,
                "writtenBytes": 22933.0,
                "memoryInBytes": 127578112.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                "id": "142",
                "type": "compute",
                "command": "plot_mag_depths.py --bin_depths SPAdes-MaxBin2-test_minigut_sample2-binDepths.tsv                     --groups sample_groups.tsv                     --out \"SPAdes-MaxBin2-test_minigut_sample2-binDepths.heatmap.png\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n        seaborn: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('seaborn').version)\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2-binDepths.tsv",
                        "path": "/6b/c98cdd973d773b166cdea86c59b9fe/",
                        "sizeInBytes": 0.224
                    },
                    {
                        "link": "input",
                        "name": "sample_groups.tsv",
                        "path": "/11/13d0058bde55bb4f6f22246229827e/",
                        "sizeInBytes": 0.038
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2-binDepths.heatmap.png",
                        "path": "/4e/f151f6b1416b71c24977395ee58991/",
                        "sizeInBytes": 29.934
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/4e/f151f6b1416b71c24977395ee58991/",
                        "sizeInBytes": 0.098
                    }
                ],
                "avgCPU": 89.2,
                "bytesRead": 38274.333,
                "bytesWritten": 30.364,
                "inputFilesBytes": 0.262,
                "outputFilesBytes": 30.032,
                "memory": 124686.336,
                "runtimeInSeconds": 4.0,
                "readBytes": 38274333.0,
                "writtenBytes": 30364.0,
                "memoryInBytes": 124686336.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                "id": "143",
                "type": "compute",
                "command": "plot_mag_depths.py --bin_depths SPAdes-MaxBin2-test_minigut-binDepths.tsv                     --groups sample_groups.tsv                     --out \"SPAdes-MaxBin2-test_minigut-binDepths.heatmap.png\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n        seaborn: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('seaborn').version)\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut-binDepths.tsv",
                        "path": "/a9/dfd61de3ae0e9f42b9bf29dd99ff94/",
                        "sizeInBytes": 0.149
                    },
                    {
                        "link": "input",
                        "name": "sample_groups.tsv",
                        "path": "/11/13d0058bde55bb4f6f22246229827e/",
                        "sizeInBytes": 0.038
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut-binDepths.heatmap.png",
                        "path": "/f7/8b9d5a47642ee2c2929dfa6026708f/",
                        "sizeInBytes": 19.675
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/f7/8b9d5a47642ee2c2929dfa6026708f/",
                        "sizeInBytes": 0.098
                    }
                ],
                "avgCPU": 90.4,
                "bytesRead": 34059.457,
                "bytesWritten": 20.105,
                "inputFilesBytes": 0.187,
                "outputFilesBytes": 19.773,
                "memory": 128696.32,
                "runtimeInSeconds": 4.0,
                "readBytes": 34059457.0,
                "writtenBytes": 20105.0,
                "memoryInBytes": 128696320.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                "id": "144",
                "type": "compute",
                "command": "plot_mag_depths.py --bin_depths MEGAHIT-MetaBAT2-test_minigut-binDepths.tsv                     --groups sample_groups.tsv                     --out \"MEGAHIT-MetaBAT2-test_minigut-binDepths.heatmap.png\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n        seaborn: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('seaborn').version)\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut-binDepths.tsv",
                        "path": "/6a/95ee9d72f227cf503178f287f9c9ef/",
                        "sizeInBytes": 0.244
                    },
                    {
                        "link": "input",
                        "name": "sample_groups.tsv",
                        "path": "/11/13d0058bde55bb4f6f22246229827e/",
                        "sizeInBytes": 0.038
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut-binDepths.heatmap.png",
                        "path": "/45/c4f2b6c9d8115b5f90a06f367b951b/",
                        "sizeInBytes": 29.358
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/45/c4f2b6c9d8115b5f90a06f367b951b/",
                        "sizeInBytes": 0.098
                    }
                ],
                "avgCPU": 90.7,
                "bytesRead": 38901.028,
                "bytesWritten": 29.788,
                "inputFilesBytes": 0.282,
                "outputFilesBytes": 29.456,
                "memory": 127959.04,
                "runtimeInSeconds": 4.0,
                "readBytes": 38901028.0,
                "writtenBytes": 29788.0,
                "memoryInBytes": 127959040.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                "id": "145",
                "type": "compute",
                "command": "plot_mag_depths.py --bin_depths SPAdes-MetaBAT2-test_minigut-binDepths.tsv                     --groups sample_groups.tsv                     --out \"SPAdes-MetaBAT2-test_minigut-binDepths.heatmap.png\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n        seaborn: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('seaborn').version)\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN"
                ],
                "children": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut-binDepths.tsv",
                        "path": "/f9/e92d13b4ffdc65bdd3692de2b876c7/",
                        "sizeInBytes": 0.257
                    },
                    {
                        "link": "input",
                        "name": "sample_groups.tsv",
                        "path": "/11/13d0058bde55bb4f6f22246229827e/",
                        "sizeInBytes": 0.038
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut-binDepths.heatmap.png",
                        "path": "/9c/79fb3c7c6fbee7e29e04ac97e694a6/",
                        "sizeInBytes": 28.47
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/9c/79fb3c7c6fbee7e29e04ac97e694a6/",
                        "sizeInBytes": 0.098
                    }
                ],
                "avgCPU": 91.4,
                "bytesRead": 38589.743,
                "bytesWritten": 28.9,
                "inputFilesBytes": 0.295,
                "outputFilesBytes": 28.567999999999998,
                "memory": 130236.416,
                "runtimeInSeconds": 4.0,
                "readBytes": 38589743.0,
                "writtenBytes": 28900.0,
                "memoryInBytes": 130236416.0
            },
            {
                "name": "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_SUMMARY",
                "id": "146",
                "type": "compute",
                "command": "get_mag_depths_summary.py --depths MEGAHIT-MaxBin2-test_minigut-binDepths.tsv MEGAHIT-MetaBAT2-test_minigut_sample2-binDepths.tsv SPAdes-MetaBAT2-test_minigut_sample2-binDepths.tsv SPAdes-MaxBin2-test_minigut_sample2-binDepths.tsv SPAdes-MaxBin2-test_minigut-binDepths.tsv MEGAHIT-MetaBAT2-test_minigut-binDepths.tsv SPAdes-MetaBAT2-test_minigut-binDepths.tsv                             --out \"bin_depths_summary.tsv\"\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BINNING:MAG_DEPTHS_SUMMARY\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BIN_SUMMARY",
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "MEGAHIT-MaxBin2-test_minigut-binDepths.tsv",
                        "path": "/0e/51dc37ddf45a8a1d257f31210ed41e/",
                        "sizeInBytes": 0.135
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2-binDepths.tsv",
                        "path": "/3f/89d58d5f5a6ea4c27460a9e94b4343/",
                        "sizeInBytes": 0.172
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2-binDepths.tsv",
                        "path": "/83/74fe64a2bed18c6ba5af48eca390d0/",
                        "sizeInBytes": 0.17
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2-binDepths.tsv",
                        "path": "/6b/c98cdd973d773b166cdea86c59b9fe/",
                        "sizeInBytes": 0.224
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut-binDepths.tsv",
                        "path": "/a9/dfd61de3ae0e9f42b9bf29dd99ff94/",
                        "sizeInBytes": 0.149
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut-binDepths.tsv",
                        "path": "/6a/95ee9d72f227cf503178f287f9c9ef/",
                        "sizeInBytes": 0.244
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut-binDepths.tsv",
                        "path": "/f9/e92d13b4ffdc65bdd3692de2b876c7/",
                        "sizeInBytes": 0.257
                    },
                    {
                        "link": "output",
                        "name": "bin_depths_summary.tsv",
                        "path": "/12/f23515f1d57ae46421f6f0e13c854c/",
                        "sizeInBytes": 1.124
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/12/f23515f1d57ae46421f6f0e13c854c/",
                        "sizeInBytes": 0.081
                    }
                ],
                "avgCPU": 35.7,
                "bytesRead": 10393.292,
                "bytesWritten": 1.525,
                "inputFilesBytes": 1.351,
                "outputFilesBytes": 1.205,
                "memory": 59297.792,
                "runtimeInSeconds": 4.0,
                "readBytes": 10393292.0,
                "writtenBytes": 1525.0,
                "memoryInBytes": 59297792.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                "id": "147",
                "type": "compute",
                "command": "if [ -n \"short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.002.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.001.fa.txt\" ]\n    then\n        # replace dots in bin names within summary file names by underscores\n        # currently (BUSCO v5.1.0) generate_plot.py does not allow further dots\n        for sum in short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.002.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.001.fa.txt; do\n            if [[ ${sum} =~ short_summary.([_[:alnum:]]+).([_[:alnum:]]+).MEGAHIT-([_[:alnum:]]+)-test_minigut.(.+).txt ]]; then\n                mode=${BASH_REMATCH[1]}\n                db_name=${BASH_REMATCH[2]}\n                bin=\"MEGAHIT-${BASH_REMATCH[3]}-test_minigut.${BASH_REMATCH[4]}\"\n                bin_new=\"${bin//./_}\"\n                mv ${sum} short_summary.${mode}.${db_name}.${bin_new}.txt\n            else\n                echo \"ERROR: the summary filename ${sum} does not match the expected format 'short_summary.([_[:alnum:]]+).([_[:alnum:]]+).MEGAHIT-([_[:alnum:]]+)-test_minigut.(.+).txt'!\"\n                exit 1\n            fi\n        done\n        generate_plot.py --working_directory .\n\n        mv busco_figure.png \"MEGAHIT-MaxBin2-test_minigut.${mode}.${db_name}.busco_figure.png\"\n        mv busco_figure.R \"MEGAHIT-MaxBin2-test_minigut.${mode}.${db_name}.busco_figure.R\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO"
                ],
                "children": [],
                "files": [
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.002.fa.txt",
                        "path": "/b6/b7ace9100172f939fce1a324bafeec/",
                        "sizeInBytes": 0.7
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.001.fa.txt",
                        "path": "/cc/8e484c5973a041ea6a7de5ffb9a4d6/",
                        "sizeInBytes": 0.699
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.png",
                        "path": "/0a/0d559a4b8d0071a64d4d4e63b17b87/",
                        "sizeInBytes": 110.518
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MaxBin2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.R",
                        "path": "/0a/0d559a4b8d0071a64d4d4e63b17b87/",
                        "sizeInBytes": 4.344
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/0a/0d559a4b8d0071a64d4d4e63b17b87/",
                        "sizeInBytes": 0.086
                    }
                ],
                "avgCPU": 61.9,
                "bytesRead": 40377.987,
                "bytesWritten": 171.821,
                "inputFilesBytes": 1.399,
                "outputFilesBytes": 114.948,
                "memory": 156749.824,
                "runtimeInSeconds": 10.764,
                "readBytes": 40377987.0,
                "writtenBytes": 171821.0,
                "memoryInBytes": 156749824.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                "id": "153",
                "type": "compute",
                "command": "if [ -n \"short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt\" ]\n    then\n        # replace dots in bin names within summary file names by underscores\n        # currently (BUSCO v5.1.0) generate_plot.py does not allow further dots\n        for sum in short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt; do\n            if [[ ${sum} =~ short_summary.([_[:alnum:]]+).([_[:alnum:]]+).MEGAHIT-([_[:alnum:]]+)-test_minigut_sample2.(.+).txt ]]; then\n                mode=${BASH_REMATCH[1]}\n                db_name=${BASH_REMATCH[2]}\n                bin=\"MEGAHIT-${BASH_REMATCH[3]}-test_minigut_sample2.${BASH_REMATCH[4]}\"\n                bin_new=\"${bin//./_}\"\n                mv ${sum} short_summary.${mode}.${db_name}.${bin_new}.txt\n            else\n                echo \"ERROR: the summary filename ${sum} does not match the expected format 'short_summary.([_[:alnum:]]+).([_[:alnum:]]+).MEGAHIT-([_[:alnum:]]+)-test_minigut_sample2.(.+).txt'!\"\n                exit 1\n            fi\n        done\n        generate_plot.py --working_directory .\n\n        mv busco_figure.png \"MEGAHIT-MetaBAT2-test_minigut_sample2.${mode}.${db_name}.busco_figure.png\"\n        mv busco_figure.R \"MEGAHIT-MetaBAT2-test_minigut_sample2.${mode}.${db_name}.busco_figure.R\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO"
                ],
                "children": [],
                "files": [
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt",
                        "path": "/f4/2b25e66e4794ad80e085d57991a17f/",
                        "sizeInBytes": 0.713
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt",
                        "path": "/de/9424c88160a29cbe98e6db3e5eddd6/",
                        "sizeInBytes": 0.713
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.specific_lineage.bacteria_odb10.busco_figure.png",
                        "path": "/e7/f3feb3afc5ddd255b1f2d28edb333f/",
                        "sizeInBytes": 105.237
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.specific_lineage.bacteria_odb10.busco_figure.R",
                        "path": "/e7/f3feb3afc5ddd255b1f2d28edb333f/",
                        "sizeInBytes": 4.471
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/e7/f3feb3afc5ddd255b1f2d28edb333f/",
                        "sizeInBytes": 0.086
                    }
                ],
                "avgCPU": 83.3,
                "bytesRead": 40377.172,
                "bytesWritten": 112.655,
                "inputFilesBytes": 1.426,
                "outputFilesBytes": 109.794,
                "memory": 161546.24,
                "runtimeInSeconds": 7.729,
                "readBytes": 40377172.0,
                "writtenBytes": 112655.0,
                "memoryInBytes": 161546240.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                "id": "149",
                "type": "compute",
                "command": "if [ -n \"short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.002.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.001.fa.txt\" ]\n    then\n        # replace dots in bin names within summary file names by underscores\n        # currently (BUSCO v5.1.0) generate_plot.py does not allow further dots\n        for sum in short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.002.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.001.fa.txt; do\n            if [[ ${sum} =~ short_summary.([_[:alnum:]]+).([_[:alnum:]]+).SPAdes-([_[:alnum:]]+)-test_minigut.(.+).txt ]]; then\n                mode=${BASH_REMATCH[1]}\n                db_name=${BASH_REMATCH[2]}\n                bin=\"SPAdes-${BASH_REMATCH[3]}-test_minigut.${BASH_REMATCH[4]}\"\n                bin_new=\"${bin//./_}\"\n                mv ${sum} short_summary.${mode}.${db_name}.${bin_new}.txt\n            else\n                echo \"ERROR: the summary filename ${sum} does not match the expected format 'short_summary.([_[:alnum:]]+).([_[:alnum:]]+).SPAdes-([_[:alnum:]]+)-test_minigut.(.+).txt'!\"\n                exit 1\n            fi\n        done\n        generate_plot.py --working_directory .\n\n        mv busco_figure.png \"SPAdes-MaxBin2-test_minigut.${mode}.${db_name}.busco_figure.png\"\n        mv busco_figure.R \"SPAdes-MaxBin2-test_minigut.${mode}.${db_name}.busco_figure.R\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO"
                ],
                "children": [],
                "files": [
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.002.fa.txt",
                        "path": "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/",
                        "sizeInBytes": 0.699
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.001.fa.txt",
                        "path": "/18/ba9403eaf56fae25a02be1c30984fe/",
                        "sizeInBytes": 0.698
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.png",
                        "path": "/a4/7c5c785b7f11dc6c98b083bca5d613/",
                        "sizeInBytes": 112.941
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.R",
                        "path": "/a4/7c5c785b7f11dc6c98b083bca5d613/",
                        "sizeInBytes": 4.336
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/a4/7c5c785b7f11dc6c98b083bca5d613/",
                        "sizeInBytes": 0.086
                    }
                ],
                "avgCPU": 82.9,
                "bytesRead": 40376.943,
                "bytesWritten": 120.156,
                "inputFilesBytes": 1.3969999999999998,
                "outputFilesBytes": 117.363,
                "memory": 162091.008,
                "runtimeInSeconds": 7.68,
                "readBytes": 40376943.0,
                "writtenBytes": 120156.0,
                "memoryInBytes": 162091008.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                "id": "151",
                "type": "compute",
                "command": "if [ -n \"short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt\" ]\n    then\n        # replace dots in bin names within summary file names by underscores\n        # currently (BUSCO v5.1.0) generate_plot.py does not allow further dots\n        for sum in short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt; do\n            if [[ ${sum} =~ short_summary.([_[:alnum:]]+).([_[:alnum:]]+).MEGAHIT-([_[:alnum:]]+)-test_minigut.(.+).txt ]]; then\n                mode=${BASH_REMATCH[1]}\n                db_name=${BASH_REMATCH[2]}\n                bin=\"MEGAHIT-${BASH_REMATCH[3]}-test_minigut.${BASH_REMATCH[4]}\"\n                bin_new=\"${bin//./_}\"\n                mv ${sum} short_summary.${mode}.${db_name}.${bin_new}.txt\n            else\n                echo \"ERROR: the summary filename ${sum} does not match the expected format 'short_summary.([_[:alnum:]]+).([_[:alnum:]]+).MEGAHIT-([_[:alnum:]]+)-test_minigut.(.+).txt'!\"\n                exit 1\n            fi\n        done\n        generate_plot.py --working_directory .\n\n        mv busco_figure.png \"MEGAHIT-MetaBAT2-test_minigut.${mode}.${db_name}.busco_figure.png\"\n        mv busco_figure.R \"MEGAHIT-MetaBAT2-test_minigut.${mode}.${db_name}.busco_figure.R\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO"
                ],
                "children": [],
                "files": [
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt",
                        "path": "/38/556350b2b2b8efe6d2264985733b0c/",
                        "sizeInBytes": 0.699
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt",
                        "path": "/4c/002d51c5239b46efae0101b8737275/",
                        "sizeInBytes": 0.699
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt",
                        "path": "/00/056cc9e0b256cf0fb6f145d85aa73a/",
                        "sizeInBytes": 0.704
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt",
                        "path": "/dd/67d472dc329d9ecf4445b693374ddb/",
                        "sizeInBytes": 0.705
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.png",
                        "path": "/c5/4827cc93cde0b20721292a00c0971e/",
                        "sizeInBytes": 145.991
                    },
                    {
                        "link": "output",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.R",
                        "path": "/c5/4827cc93cde0b20721292a00c0971e/",
                        "sizeInBytes": 4.784
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/c5/4827cc93cde0b20721292a00c0971e/",
                        "sizeInBytes": 0.086
                    }
                ],
                "avgCPU": 83.0,
                "bytesRead": 40394.067,
                "bytesWritten": 154.16,
                "inputFilesBytes": 2.807,
                "outputFilesBytes": 150.86100000000002,
                "memory": 160497.664,
                "runtimeInSeconds": 7.612,
                "readBytes": 40394067.0,
                "writtenBytes": 154160.0,
                "memoryInBytes": 160497664.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                "id": "152",
                "type": "compute",
                "command": "if [ -n \"short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt\" ]\n    then\n        # replace dots in bin names within summary file names by underscores\n        # currently (BUSCO v5.1.0) generate_plot.py does not allow further dots\n        for sum in short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt; do\n            if [[ ${sum} =~ short_summary.([_[:alnum:]]+).([_[:alnum:]]+).SPAdes-([_[:alnum:]]+)-test_minigut_sample2.(.+).txt ]]; then\n                mode=${BASH_REMATCH[1]}\n                db_name=${BASH_REMATCH[2]}\n                bin=\"SPAdes-${BASH_REMATCH[3]}-test_minigut_sample2.${BASH_REMATCH[4]}\"\n                bin_new=\"${bin//./_}\"\n                mv ${sum} short_summary.${mode}.${db_name}.${bin_new}.txt\n            else\n                echo \"ERROR: the summary filename ${sum} does not match the expected format 'short_summary.([_[:alnum:]]+).([_[:alnum:]]+).SPAdes-([_[:alnum:]]+)-test_minigut_sample2.(.+).txt'!\"\n                exit 1\n            fi\n        done\n        generate_plot.py --working_directory .\n\n        mv busco_figure.png \"SPAdes-MaxBin2-test_minigut_sample2.${mode}.${db_name}.busco_figure.png\"\n        mv busco_figure.R \"SPAdes-MaxBin2-test_minigut_sample2.${mode}.${db_name}.busco_figure.R\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO"
                ],
                "children": [],
                "files": [
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt",
                        "path": "/77/ccbf52f5eeff4956e8bb7fa0b056bf/",
                        "sizeInBytes": 0.703
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt",
                        "path": "/0d/922fde31aa037b2ab959dacef5fbc9/",
                        "sizeInBytes": 0.71
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt",
                        "path": "/21/a612f469bfb3131b66630b7b59bbf6/",
                        "sizeInBytes": 0.71
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.specific_lineage.bacteria_odb10.busco_figure.png",
                        "path": "/69/5f870daa570f9ee4579d708f3a3b68/",
                        "sizeInBytes": 131.829
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.specific_lineage.bacteria_odb10.busco_figure.R",
                        "path": "/69/5f870daa570f9ee4579d708f3a3b68/",
                        "sizeInBytes": 4.666
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/69/5f870daa570f9ee4579d708f3a3b68/",
                        "sizeInBytes": 0.086
                    }
                ],
                "avgCPU": 82.8,
                "bytesRead": 40385.747,
                "bytesWritten": 139.68,
                "inputFilesBytes": 2.1229999999999998,
                "outputFilesBytes": 136.58100000000002,
                "memory": 162029.568,
                "runtimeInSeconds": 7.804,
                "readBytes": 40385747.0,
                "writtenBytes": 139680.0,
                "memoryInBytes": 162029568.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                "id": "150",
                "type": "compute",
                "command": "if [ -n \"short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.1.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.2.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt\" ]\n    then\n        # replace dots in bin names within summary file names by underscores\n        # currently (BUSCO v5.1.0) generate_plot.py does not allow further dots\n        for sum in short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.1.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.2.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt; do\n            if [[ ${sum} =~ short_summary.([_[:alnum:]]+).([_[:alnum:]]+).SPAdes-([_[:alnum:]]+)-test_minigut.(.+).txt ]]; then\n                mode=${BASH_REMATCH[1]}\n                db_name=${BASH_REMATCH[2]}\n                bin=\"SPAdes-${BASH_REMATCH[3]}-test_minigut.${BASH_REMATCH[4]}\"\n                bin_new=\"${bin//./_}\"\n                mv ${sum} short_summary.${mode}.${db_name}.${bin_new}.txt\n            else\n                echo \"ERROR: the summary filename ${sum} does not match the expected format 'short_summary.([_[:alnum:]]+).([_[:alnum:]]+).SPAdes-([_[:alnum:]]+)-test_minigut.(.+).txt'!\"\n                exit 1\n            fi\n        done\n        generate_plot.py --working_directory .\n\n        mv busco_figure.png \"SPAdes-MetaBAT2-test_minigut.${mode}.${db_name}.busco_figure.png\"\n        mv busco_figure.R \"SPAdes-MetaBAT2-test_minigut.${mode}.${db_name}.busco_figure.R\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO"
                ],
                "children": [],
                "files": [
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.1.fa.txt",
                        "path": "/7d/87145d575e7a7abf53c38bc1f42c46/",
                        "sizeInBytes": 0.698
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.2.fa.txt",
                        "path": "/c9/4ae56826c49a7fe1063c5a40993c8f/",
                        "sizeInBytes": 0.698
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt",
                        "path": "/2b/b9c67b024483e9dcc03590bd534af3/",
                        "sizeInBytes": 0.704
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt",
                        "path": "/3b/07878d030aa541a9e52c22ba4ced01/",
                        "sizeInBytes": 0.703
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.png",
                        "path": "/ad/5892e7bcfa04be19c8e4a313a307c5/",
                        "sizeInBytes": 147.571
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut.specific_lineage.bacteria_odb10.busco_figure.R",
                        "path": "/ad/5892e7bcfa04be19c8e4a313a307c5/",
                        "sizeInBytes": 4.768
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/ad/5892e7bcfa04be19c8e4a313a307c5/",
                        "sizeInBytes": 0.086
                    }
                ],
                "avgCPU": 82.5,
                "bytesRead": 40393.986,
                "bytesWritten": 155.714,
                "inputFilesBytes": 2.8029999999999995,
                "outputFilesBytes": 152.425,
                "memory": 160849.92,
                "runtimeInSeconds": 7.993,
                "readBytes": 40393986.0,
                "writtenBytes": 155714.0,
                "memoryInBytes": 160849920.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_PLOT",
                "id": "154",
                "type": "compute",
                "command": "if [ -n \"short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt\" ]\n    then\n        # replace dots in bin names within summary file names by underscores\n        # currently (BUSCO v5.1.0) generate_plot.py does not allow further dots\n        for sum in short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt; do\n            if [[ ${sum} =~ short_summary.([_[:alnum:]]+).([_[:alnum:]]+).SPAdes-([_[:alnum:]]+)-test_minigut_sample2.(.+).txt ]]; then\n                mode=${BASH_REMATCH[1]}\n                db_name=${BASH_REMATCH[2]}\n                bin=\"SPAdes-${BASH_REMATCH[3]}-test_minigut_sample2.${BASH_REMATCH[4]}\"\n                bin_new=\"${bin//./_}\"\n                mv ${sum} short_summary.${mode}.${db_name}.${bin_new}.txt\n            else\n                echo \"ERROR: the summary filename ${sum} does not match the expected format 'short_summary.([_[:alnum:]]+).([_[:alnum:]]+).SPAdes-([_[:alnum:]]+)-test_minigut_sample2.(.+).txt'!\"\n                exit 1\n            fi\n        done\n        generate_plot.py --working_directory .\n\n        mv busco_figure.png \"SPAdes-MetaBAT2-test_minigut_sample2.${mode}.${db_name}.busco_figure.png\"\n        mv busco_figure.R \"SPAdes-MetaBAT2-test_minigut_sample2.${mode}.${db_name}.busco_figure.R\"\n    fi\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO_PLOT\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        R: $(R --version 2>&1 | sed -n 1p | sed 's/R version //' | sed 's/ (.*//')\n        busco: $(busco --version 2>&1 | sed 's/BUSCO //g')\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO"
                ],
                "children": [],
                "files": [
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt",
                        "path": "/1a/84f07aa032c5c6074182ab239ba71a/",
                        "sizeInBytes": 0.712
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt",
                        "path": "/a5/11a719f47864c4209cfd42c943c6a0/",
                        "sizeInBytes": 0.712
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.specific_lineage.bacteria_odb10.busco_figure.png",
                        "path": "/db/573ffa1e5e78f1a2a2941ce6340173/",
                        "sizeInBytes": 106.203
                    },
                    {
                        "link": "output",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.specific_lineage.bacteria_odb10.busco_figure.R",
                        "path": "/db/573ffa1e5e78f1a2a2941ce6340173/",
                        "sizeInBytes": 4.463
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/db/573ffa1e5e78f1a2a2941ce6340173/",
                        "sizeInBytes": 0.086
                    }
                ],
                "avgCPU": 80.6,
                "bytesRead": 40377.155,
                "bytesWritten": 113.609,
                "inputFilesBytes": 1.424,
                "outputFilesBytes": 110.752,
                "memory": 160735.232,
                "runtimeInSeconds": 7.622,
                "readBytes": 40377155.0,
                "writtenBytes": 113609.0,
                "memoryInBytes": 160735232.0
            },
            {
                "name": "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                "id": "148",
                "type": "compute",
                "command": "summary_busco.py  -ss short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.001.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.002.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.001.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.002.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.1.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.2.fa.txt short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt   -o busco_summary.tsv\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BUSCO_QC:BUSCO_SUMMARY\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO"
                ],
                "children": [
                    "NFCORE_MAG.MAG.BIN_SUMMARY"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.002.fa.txt",
                        "path": "/b6/b7ace9100172f939fce1a324bafeec/",
                        "sizeInBytes": 0.7
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.002.fa.txt",
                        "path": "/83/ab8bc69ed2f1a6f9ec702ae3e0b9ec/",
                        "sizeInBytes": 0.699
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.1.fa.txt",
                        "path": "/7d/87145d575e7a7abf53c38bc1f42c46/",
                        "sizeInBytes": 0.698
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut.001.fa.txt",
                        "path": "/18/ba9403eaf56fae25a02be1c30984fe/",
                        "sizeInBytes": 0.698
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.1.fa.txt",
                        "path": "/38/556350b2b2b8efe6d2264985733b0c/",
                        "sizeInBytes": 0.699
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.2.fa.txt",
                        "path": "/4c/002d51c5239b46efae0101b8737275/",
                        "sizeInBytes": 0.699
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MaxBin2-test_minigut.001.fa.txt",
                        "path": "/cc/8e484c5973a041ea6a7de5ffb9a4d6/",
                        "sizeInBytes": 0.699
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.2.fa.txt",
                        "path": "/c9/4ae56826c49a7fe1063c5a40993c8f/",
                        "sizeInBytes": 0.698
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.001.fa.txt",
                        "path": "/77/ccbf52f5eeff4956e8bb7fa0b056bf/",
                        "sizeInBytes": 0.703
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt",
                        "path": "/f4/2b25e66e4794ad80e085d57991a17f/",
                        "sizeInBytes": 0.713
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.2.fa.txt",
                        "path": "/2b/b9c67b024483e9dcc03590bd534af3/",
                        "sizeInBytes": 0.704
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt",
                        "path": "/1a/84f07aa032c5c6074182ab239ba71a/",
                        "sizeInBytes": 0.712
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.2.fa.txt",
                        "path": "/00/056cc9e0b256cf0fb6f145d85aa73a/",
                        "sizeInBytes": 0.704
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut.unbinned.1.fa.txt",
                        "path": "/3b/07878d030aa541a9e52c22ba4ced01/",
                        "sizeInBytes": 0.703
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa.txt",
                        "path": "/0d/922fde31aa037b2ab959dacef5fbc9/",
                        "sizeInBytes": 0.71
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa.txt",
                        "path": "/21/a612f469bfb3131b66630b7b59bbf6/",
                        "sizeInBytes": 0.71
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa.txt",
                        "path": "/dd/67d472dc329d9ecf4445b693374ddb/",
                        "sizeInBytes": 0.705
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa.txt",
                        "path": "/de/9424c88160a29cbe98e6db3e5eddd6/",
                        "sizeInBytes": 0.713
                    },
                    {
                        "link": "input",
                        "name": "short_summary.specific_lineage.bacteria_odb10.SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa.txt",
                        "path": "/a5/11a719f47864c4209cfd42c943c6a0/",
                        "sizeInBytes": 0.712
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt",
                        "path": "/f4/2b25e66e4794ad80e085d57991a17f/",
                        "sizeInBytes": 0.061
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut.unbinned.2.fa_busco.failed_bin.txt",
                        "path": "/2b/b9c67b024483e9dcc03590bd534af3/",
                        "sizeInBytes": 0.052
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt",
                        "path": "/1a/84f07aa032c5c6074182ab239ba71a/",
                        "sizeInBytes": 0.06
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.2.fa_busco.failed_bin.txt",
                        "path": "/0d/922fde31aa037b2ab959dacef5fbc9/",
                        "sizeInBytes": 0.058
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MaxBin2-test_minigut_sample2.noclass.1.fa_busco.failed_bin.txt",
                        "path": "/21/a612f469bfb3131b66630b7b59bbf6/",
                        "sizeInBytes": 0.058
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut.unbinned.1.fa_busco.failed_bin.txt",
                        "path": "/dd/67d472dc329d9ecf4445b693374ddb/",
                        "sizeInBytes": 0.053
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-MetaBAT2-test_minigut_sample2.unbinned.1.fa_busco.failed_bin.txt",
                        "path": "/de/9424c88160a29cbe98e6db3e5eddd6/",
                        "sizeInBytes": 0.061
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-MetaBAT2-test_minigut_sample2.unbinned.2.fa_busco.failed_bin.txt",
                        "path": "/a5/11a719f47864c4209cfd42c943c6a0/",
                        "sizeInBytes": 0.06
                    },
                    {
                        "link": "output",
                        "name": "busco_summary.tsv",
                        "path": "/b5/a1ee3f2ac4873500275e4261b8c40a/",
                        "sizeInBytes": 1.781
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/b5/a1ee3f2ac4873500275e4261b8c40a/",
                        "sizeInBytes": 0.077
                    }
                ],
                "avgCPU": 75.0,
                "bytesRead": 10440.802,
                "bytesWritten": 2.162,
                "inputFilesBytes": 13.842000000000002,
                "outputFilesBytes": 1.8579999999999999,
                "memory": 53166.08,
                "runtimeInSeconds": 1.0,
                "readBytes": 10440802.0,
                "writtenBytes": 2162.0,
                "memoryInBytes": 53166080.0
            },
            {
                "name": "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                "id": "155",
                "type": "compute",
                "command": "def args = task.ext.args ?: ''\ntemplate 'dumpsoftwareversions.py'",
                "parents": [
                    "NFCORE_MAG.MAG.FASTQC_TRIMMED",
                    "NFCORE_MAG.MAG.FASTQC_RAW",
                    "NFCORE_MAG.MAG.FASTP",
                    "NFCORE_MAG.MAG.BOWTIE2_PHIX_REMOVAL_ALIGN",
                    "NFCORE_MAG.MAG.NANOPLOT_RAW",
                    "NFCORE_MAG.MAG.PORECHOP",
                    "NFCORE_MAG.MAG.NANOLYSE",
                    "NFCORE_MAG.MAG.FILTLONG",
                    "NFCORE_MAG.MAG.CENTRIFUGE",
                    "NFCORE_MAG.MAG.KRAKEN2",
                    "NFCORE_MAG.MAG.MEGAHIT",
                    "NFCORE_MAG.MAG.SPADES",
                    "NFCORE_MAG.MAG.SPADESHYBRID",
                    "NFCORE_MAG.MAG.QUAST",
                    "NFCORE_MAG.MAG.PRODIGAL",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_SUMMARY",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_PLOT",
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS",
                    "NFCORE_MAG.MAG.BINNING.SPLIT_FASTA",
                    "NFCORE_MAG.MAG.BINNING.MAXBIN2",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_JGISUMMARIZEBAMCONTIGDEPTHS",
                    "NFCORE_MAG.MAG.BINNING.CONVERT_DEPTHS",
                    "NFCORE_MAG.MAG.BINNING.METABAT2_METABAT2",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_BINS",
                    "NFCORE_MAG.MAG.BINNING.GUNZIP_UNBINS",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.QUAST_BINS",
                    "NFCORE_MAG.MAG.CAT",
                    "NFCORE_MAG.MAG.PROKKA"
                ],
                "children": [
                    "NFCORE_MAG.MAG.MULTIQC"
                ],
                "files": [
                    {
                        "link": "input",
                        "name": "collated_versions.yml",
                        "path": "/c1/f9762963534aab9eea70cf358c6bcd/",
                        "sizeInBytes": 3.324
                    },
                    {
                        "link": "output",
                        "name": "software_versions.yml",
                        "path": "/88/e05321a3ea4e89fc6bd5050c765259/",
                        "sizeInBytes": 1.1
                    },
                    {
                        "link": "output",
                        "name": "software_versions_mqc.yml",
                        "path": "/88/e05321a3ea4e89fc6bd5050c765259/",
                        "sizeInBytes": 6.315
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/88/e05321a3ea4e89fc6bd5050c765259/",
                        "sizeInBytes": 0.074
                    }
                ],
                "avgCPU": 32.7,
                "bytesRead": 939.883,
                "bytesWritten": 7.708,
                "inputFilesBytes": 3.324,
                "outputFilesBytes": 7.489000000000001,
                "memory": 1785.856,
                "runtimeInSeconds": 0.745,
                "readBytes": 939883.0,
                "writtenBytes": 7708.0,
                "memoryInBytes": 1785856.0
            },
            {
                "name": "NFCORE_MAG.MAG.BIN_SUMMARY",
                "id": "156",
                "type": "compute",
                "command": "combine_tables.py --depths_summary bin_depths_summary.tsv                     --busco_summary busco_summary.tsv                     --quast_summary quast_summary.tsv                                          --out bin_summary.tsv\n\n    cat <<-END_VERSIONS > versions.yml\n    \"NFCORE_MAG:MAG:BIN_SUMMARY\":\n        python: $(python --version 2>&1 | sed 's/Python //g')\n        pandas: $(python -c \"import pkg_resources; print(pkg_resources.get_distribution('pandas').version)\")\n    END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.BINNING.MAG_DEPTHS_SUMMARY",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO_SUMMARY",
                    "NFCORE_MAG.MAG.QUAST_BINS_SUMMARY"
                ],
                "children": [],
                "files": [
                    {
                        "link": "input",
                        "name": "bin_depths_summary.tsv",
                        "path": "/12/f23515f1d57ae46421f6f0e13c854c/",
                        "sizeInBytes": 1.124
                    },
                    {
                        "link": "input",
                        "name": "busco_summary.tsv",
                        "path": "/b5/a1ee3f2ac4873500275e4261b8c40a/",
                        "sizeInBytes": 1.781
                    },
                    {
                        "link": "input",
                        "name": "quast_summary.tsv",
                        "path": "/3e/1dd392ebd00f7498212164127990ba/",
                        "sizeInBytes": 3.069
                    },
                    {
                        "link": "output",
                        "name": "bin_summary.tsv",
                        "path": "/38/267c4da019d070e70a33074290c93a/",
                        "sizeInBytes": 6.031
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/38/267c4da019d070e70a33074290c93a/",
                        "sizeInBytes": 0.066
                    }
                ],
                "avgCPU": 63.4,
                "bytesRead": 10401.764,
                "bytesWritten": 6.39,
                "inputFilesBytes": 5.974,
                "outputFilesBytes": 6.0969999999999995,
                "memory": 60579.84,
                "runtimeInSeconds": 2.0,
                "readBytes": 10401764.0,
                "writtenBytes": 6390.0,
                "memoryInBytes": 60579840.0
            },
            {
                "name": "NFCORE_MAG.MAG.MULTIQC",
                "id": "157",
                "type": "compute",
                "command": "multiqc -f  .\n\n        cat <<-END_VERSIONS > versions.yml\n        \"NFCORE_MAG:MAG:MULTIQC\":\n            multiqc: $( multiqc --version | sed -e \"s/multiqc, version //g\" )\n        END_VERSIONS",
                "parents": [
                    "NFCORE_MAG.MAG.CUSTOM_DUMPSOFTWAREVERSIONS",
                    "NFCORE_MAG.MAG.FASTQC_RAW",
                    "NFCORE_MAG.MAG.FASTQC_TRIMMED",
                    "NFCORE_MAG.MAG.QUAST",
                    "NFCORE_MAG.MAG.BINNING_PREPARATION.BOWTIE2_ASSEMBLY_ALIGN",
                    "NFCORE_MAG.MAG.BUSCO_QC.BUSCO",
                    "NFCORE_MAG.MAG.FASTP"
                ],
                "children": [],
                "files": [
                    {
                        "link": "input",
                        "name": "multiqc_config.yml",
                        "path": "/mag/assets/",
                        "sizeInBytes": 1.796
                    },
                    {
                        "link": "input",
                        "name": "workflow_summary_mqc.yaml",
                        "path": "/6f/532c18d0a1139011180d991b5d2adc/",
                        "sizeInBytes": 3.354
                    },
                    {
                        "link": "input",
                        "name": "software_versions_mqc.yml",
                        "path": "/88/e05321a3ea4e89fc6bd5050c765259/",
                        "sizeInBytes": 6.315
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2_1_fastqc.zip",
                        "path": "/6f/2f1ecb5353f866c1f6539117e859bd/",
                        "sizeInBytes": 290.235
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2_2_fastqc.zip",
                        "path": "/6f/2f1ecb5353f866c1f6539117e859bd/",
                        "sizeInBytes": 288.657
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_1_fastqc.zip",
                        "path": "/50/450582b8fedacb9adbb8d3bd395bc7/",
                        "sizeInBytes": 288.243
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_2_fastqc.zip",
                        "path": "/50/450582b8fedacb9adbb8d3bd395bc7/",
                        "sizeInBytes": 284.771
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.trimmed_1_fastqc.zip",
                        "path": "/76/d4869464a5074828810a263f222c16/",
                        "sizeInBytes": 284.126
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.trimmed_2_fastqc.zip",
                        "path": "/76/d4869464a5074828810a263f222c16/",
                        "sizeInBytes": 280.611
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.trimmed_1_fastqc.zip",
                        "path": "/8b/951f59ff6eff428229c9d8deeb003f/",
                        "sizeInBytes": 287.336
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.trimmed_2_fastqc.zip",
                        "path": "/8b/951f59ff6eff428229c9d8deeb003f/",
                        "sizeInBytes": 289.084
                    },
                    {
                        "link": "input",
                        "name": "basic_stats",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 92.29
                    },
                    {
                        "link": "input",
                        "name": "icarus.html",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 53.372
                    },
                    {
                        "link": "input",
                        "name": "icarus_viewers",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 833.15
                    },
                    {
                        "link": "input",
                        "name": "metaquast.log",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 0.73
                    },
                    {
                        "link": "input",
                        "name": "predicted_genes",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 0.334
                    },
                    {
                        "link": "input",
                        "name": "quast.log",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 3.941
                    },
                    {
                        "link": "input",
                        "name": "report.html",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 393.153
                    },
                    {
                        "link": "input",
                        "name": "report.pdf",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 33.778
                    },
                    {
                        "link": "input",
                        "name": "report.tex",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 1.229
                    },
                    {
                        "link": "input",
                        "name": "report.tsv",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 0.534
                    },
                    {
                        "link": "input",
                        "name": "report.txt",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 1.447
                    },
                    {
                        "link": "input",
                        "name": "transposed_report.tex",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 1.062
                    },
                    {
                        "link": "input",
                        "name": "transposed_report.tsv",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 0.534
                    },
                    {
                        "link": "input",
                        "name": "transposed_report.txt",
                        "path": "/0141a35dc4cfe921c2795e8375987c/QUAST/",
                        "sizeInBytes": 1.051
                    },
                    {
                        "link": "input",
                        "name": "basic_stats",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 61.148
                    },
                    {
                        "link": "input",
                        "name": "icarus.html",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 53.373
                    },
                    {
                        "link": "input",
                        "name": "icarus_viewers",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 802.216
                    },
                    {
                        "link": "input",
                        "name": "metaquast.log",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 0.724
                    },
                    {
                        "link": "input",
                        "name": "predicted_genes",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 0.262
                    },
                    {
                        "link": "input",
                        "name": "quast.log",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 3.572
                    },
                    {
                        "link": "input",
                        "name": "report.html",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 382.977
                    },
                    {
                        "link": "input",
                        "name": "report.pdf",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 28.437
                    },
                    {
                        "link": "input",
                        "name": "report.tex",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 1.223
                    },
                    {
                        "link": "input",
                        "name": "report.tsv",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 0.528
                    },
                    {
                        "link": "input",
                        "name": "report.txt",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 1.47
                    },
                    {
                        "link": "input",
                        "name": "transposed_report.tex",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 1.056
                    },
                    {
                        "link": "input",
                        "name": "transposed_report.tsv",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 0.528
                    },
                    {
                        "link": "input",
                        "name": "transposed_report.txt",
                        "path": "/f3bde70ef3b153d702923d488c467a/QUAST/",
                        "sizeInBytes": 1.053
                    },
                    {
                        "link": "input",
                        "name": "basic_stats",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 87.922
                    },
                    {
                        "link": "input",
                        "name": "icarus.html",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 53.364
                    },
                    {
                        "link": "input",
                        "name": "icarus_viewers",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 783.442
                    },
                    {
                        "link": "input",
                        "name": "metaquast.log",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 0.698
                    },
                    {
                        "link": "input",
                        "name": "predicted_genes",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 0.347
                    },
                    {
                        "link": "input",
                        "name": "quast.log",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 3.837
                    },
                    {
                        "link": "input",
                        "name": "report.html",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 372.013
                    },
                    {
                        "link": "input",
                        "name": "report.pdf",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 31.492
                    },
                    {
                        "link": "input",
                        "name": "report.tex",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 1.243
                    },
                    {
                        "link": "input",
                        "name": "report.tsv",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 0.549
                    },
                    {
                        "link": "input",
                        "name": "report.txt",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 1.263
                    },
                    {
                        "link": "input",
                        "name": "transposed_report.tex",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 1.076
                    },
                    {
                        "link": "input",
                        "name": "transposed_report.tsv",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 0.549
                    },
                    {
                        "link": "input",
                        "name": "transposed_report.txt",
                        "path": "/12f50d9fab75af67b6d58104068945/QUAST/",
                        "sizeInBytes": 1.043
                    },
                    {
                        "link": "input",
                        "name": "basic_stats",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 57.895
                    },
                    {
                        "link": "input",
                        "name": "icarus.html",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 53.365
                    },
                    {
                        "link": "input",
                        "name": "icarus_viewers",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 794.22
                    },
                    {
                        "link": "input",
                        "name": "metaquast.log",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 0.692
                    },
                    {
                        "link": "input",
                        "name": "predicted_genes",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 0.266
                    },
                    {
                        "link": "input",
                        "name": "quast.log",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 3.486
                    },
                    {
                        "link": "input",
                        "name": "report.html",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 382.475
                    },
                    {
                        "link": "input",
                        "name": "report.pdf",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 28.688
                    },
                    {
                        "link": "input",
                        "name": "report.tex",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 1.241
                    },
                    {
                        "link": "input",
                        "name": "report.tsv",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 0.547
                    },
                    {
                        "link": "input",
                        "name": "report.txt",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 1.286
                    },
                    {
                        "link": "input",
                        "name": "transposed_report.tex",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 1.074
                    },
                    {
                        "link": "input",
                        "name": "transposed_report.tsv",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 0.547
                    },
                    {
                        "link": "input",
                        "name": "transposed_report.txt",
                        "path": "/970e9d834edce57f29423a99aac816/QUAST/",
                        "sizeInBytes": 1.043
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut_sample2.bowtie2.log",
                        "path": "/0e/af902dd643f65055d1d1a4cdc03eec/",
                        "sizeInBytes": 0.6
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut_sample2.bowtie2.log",
                        "path": "/d3/c332ef8efac5a782924ca4114ed8cd/",
                        "sizeInBytes": 0.599
                    },
                    {
                        "link": "input",
                        "name": "SPAdes-test_minigut.bowtie2.log",
                        "path": "/19/a9432a2954b25b99d4bcbc6ae5dbb7/",
                        "sizeInBytes": 0.599
                    },
                    {
                        "link": "input",
                        "name": "MEGAHIT-test_minigut.bowtie2.log",
                        "path": "/34/adfd77975be3d0c5eaa06394c1187e/",
                        "sizeInBytes": 0.6
                    },
                    {
                        "link": "input",
                        "name": "test_minigut_sample2.fastp.json",
                        "path": "/e1/9a7accee5f5f4db3f7c9248cada164/",
                        "sizeInBytes": 124.522
                    },
                    {
                        "link": "input",
                        "name": "test_minigut.fastp.json",
                        "path": "/ef/a6a4e285761f2a6fdc82cd62443b5b/",
                        "sizeInBytes": 112.556
                    },
                    {
                        "link": "output",
                        "name": "multiqc_report.html",
                        "path": "/0d/e596dfa2a9ea40d2a56cad1f4d12a0/",
                        "sizeInBytes": 1333.122
                    },
                    {
                        "link": "output",
                        "name": "multiqc_data",
                        "path": "/0d/e596dfa2a9ea40d2a56cad1f4d12a0/",
                        "sizeInBytes": 2220.269
                    },
                    {
                        "link": "output",
                        "name": "multiqc_plots",
                        "path": "/0d/e596dfa2a9ea40d2a56cad1f4d12a0/",
                        "sizeInBytes": 2676.269
                    },
                    {
                        "link": "output",
                        "name": "versions.yml",
                        "path": "/0d/e596dfa2a9ea40d2a56cad1f4d12a0/",
                        "sizeInBytes": 0.044
                    }
                ],
                "avgCPU": 89.9,
                "bytesRead": 1228869.392,
                "bytesWritten": 12125.665,
                "inputFilesBytes": 7964.838999999999,
                "outputFilesBytes": 6229.704,
                "memory": 161636.352,
                "runtimeInSeconds": 113.025,
                "readBytes": 1228869392.0,
                "writtenBytes": 12125665.0,
                "memoryInBytes": 161636352.0
            }
        ],
        "machines": [
            {
                "nodeName": "dirt02",
                "system": "Linux",
                "release": "5.15.0-48-generic",
                "architecture": "x86_64",
                "cpu": {
                    "count": 1,
                    "speed": 2400
                }
            }
        ],
        "makespanInSeconds": 4104
    }
}
